{
  "document_id": "audit_run_schema5",
  "findings": [
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286
              ],
              "why": "The finding describes type casting a negative int256 to uint256, causing overflow."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma directive specifies Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286
              ],
              "why": "No unchecked block; casting is explicit and happens outside unchecked."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                289,
                290,
                297,
                299
              ],
              "why": "Overflow mints Schnibbles, which are central to protocol rewards and attack potential."
            }
          ]
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                249,
                281
              ],
              "why": "Any user with a staked token can trigger farming and mint Schnibbles."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286,
                297,
                299
              ],
              "why": "This allows critical minting manipulation, breaking the reward and balance in protocol."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                273,
                279
              ],
              "why": "No evidence intended design for negative values or unchecked wrap."
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286
              ],
              "why": "Although Solidity >=0.8.0, the unchecked cast (negative to uint) is not auto-guarded."
            }
          ]
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "An unchecked conversion from negative int256 to uint256 enables any account with the config owner role to mint nearly unlimited Schnibbles. The overflow is not automatically prevented by Solidity 0.8.x and directly affects protocol-critical rewards. The lack of input validation and access restrictions for config owners makes exploitation both high-impact and highly likely.",
      "adjustment": {
        "index": 0,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma is 0.8.25 (>=0.8.0)."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "The call to update plotId is within the same contract; assignments modify storage."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                204,
                209
              ],
              "why": "Only Munchable owner (matched by munchableOwner[tokenId]) can transfer their staked Munchable."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                259,
                260,
                281,
                286
              ],
              "why": "Attack can manipulate rewards by exploiting state inconsistency."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                259,
                260
              ],
              "why": "The exploit path is practical and can be executed for extra Schnibbles."
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The failure to update `plotId` allows stakers to retroactively claim additional Schnibbles by moving their asset, violating reward logic assumptions. This behavior is practical, impactful, and not theoretical or intended. Though access to the action is restricted, it enables critical manipulation of protocol rewards and invariants.",
      "adjustment": {
        "index": 1,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract is compiled with Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                136
              ],
              "why": "Anyone can call stakeMunchable for their own account."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The off-by-one error allows a user to stake an eleventh Munchable when the intended maximum is ten, which breaks an explicit invariant but does not directly risk funds or critical protocol controls. The function is user-accessible and the bug will always be triggered by any attempt to over-stake. The contract is on Solidity >=0.8, but this is not an overflow, so the risk is correctness/integrity breach, not direct financial impact.",
      "adjustment": {
        "index": 2,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "The issue is division by zero, not arithmetic overflow/underflow."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25 is used (>=0.8.0)."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "The division is not inside an unchecked block."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "No external untrusted contract is called in this operation."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "_getNumPlots is an internal view function."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "Contract bricking from config changes violates decentralization/timelock assumptions."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "The module can be permanently frozen, which is critical protocol manipulation."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "There is a practical and realistic way to trigger the bug via config change."
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "low",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "Division by zero from a misconfigured PRICE_PER_PLOT can brick all staking, transfer, and farming, severely disrupting protocol operation. Although the likelihood depends on governance/configuration practices, the impact is high because the contract can be rendered unusable. No code or pattern mitigates this risk within the current logic.",
      "adjustment": {
        "index": 3,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version is 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "accountManager.updatePlayer is an external call to an interface"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                299,
                301,
                310
              ],
              "why": "State changes occur before the external call"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                175,
                201
              ],
              "why": "No nonReentrant or similar guard is present"
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                175,
                201,
                233
              ],
              "why": "Effects occur before interaction; CEI pattern not followed"
            }
          ]
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "Call is to external AccountManager, not an internal contract"
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                175,
                201
              ],
              "why": "Stake/unstake/plot transfer are user-callable"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                142,
                193,
                160
              ],
              "why": "Can lead to NFT theft or bypass staking limits"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "low",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "External calls to AccountManager are made after partially mutating state and without reentrancy protection, allowing a malicious implementer to re-enter and exploit the contract. The lack of CEI and reentrancy guards elevates the risk to the protocol, though likelihood is reduced since it requires a compromised or malicious AccountManager contract. The impact is high due to potential NFT theft or protocol manipulation, resulting in medium severity.",
      "adjustment": {
        "index": 4,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract is compiled with Solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "All state changes and logic are internal within the contract."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Critical logic managing core in-game asset consistency can be broken."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Core logic is handled using internal contract state with no external re-entrancy."
            }
          ]
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The function fails to update the plotId within toilerState when transferring a Munchable to a new plot, creating a critical inconsistency between key data structures. This desynchronization can break core farming logic, potentially preventing reward accrual and corrupting contract state. The severity is high due to both high impact on asset tracking and farming mechanisms and a high likelihood of occurrence with normal contract use.",
      "adjustment": {
        "index": 5,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version 0.8.25 is used."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                252,
                261
              ],
              "why": "No unchecked arithmetic relevant to this logic."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                252
              ],
              "why": "No external untrusted calls in this logic. Only internal accounting and state manipulation."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                252
              ],
              "why": "All function calls in analysis are internal to LandManager."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                252,
                261,
                262
              ],
              "why": "This is a UX-level bug, not a critical protocol manipulation vulnerability."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                252,
                261,
                262
              ],
              "why": "Permanent 'dirty' flag is an emergent bug, not documented or claimed as design."
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                252,
                261
              ],
              "why": "Practical impact: users can be locked out of rewards until they take explicit restoration action."
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                252,
                261,
                262
              ],
              "why": "No reentrancy issue and CEI not relevant."
            }
          ]
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The finding correctly identifies that a plot marked 'dirty' can never become 'clean' again, locking out users from rewards unless they unstake and restake. The impact is moderate, affecting user experience and potentially leading to user frustration, but not protocol integrity. The likelihood is medium because any reduction in plots can trigger this state.",
      "adjustment": {
        "index": 6,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141
              ],
              "why": "Limit check uses length comparison; not overflow-specific."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma indicates Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "All staking logic handled internally, no external contract call in check."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The off-by-one error allows users to stake up to 11 instead of 10 Munchables, marginally exceeding intended limits but not introducing significant security risk. The risk primarily impacts game mechanics and fairness rather than introducing an exploit path. Since the implementation does not violate privilege or overflow concerns, its severity is best rated as 'medium' per the matrix.",
      "adjustment": {
        "index": 7,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                283,
                284,
                285,
                286
              ],
              "why": "Core issue is overflow/wrap due to casting a potentially negative int256 to uint256 after arithmetic with bonuses."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Explicit Solidity version pragma 0.8.25 triggers automatic overflow checks on arithmetic, but not casting."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The finding is valid as an overflow risk due to casting a negative int256 to uint256, which is not caught by Solidity 0.8 overflow checks and could result in a large unintentional value. There are no mitigating guards, neither design intent nor privileged access limitations, and the risk is low due to the specific conditions required for exploitation. The matrix severity therefore remains 'low'.",
      "adjustment": {
        "index": 8,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract is compiled with Solidity >=0.8.0."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                310,
                301,
                300,
                299
              ],
              "why": "Calls to external contract are qualified and not privileged, but not untrusted in the context of inefficiency."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                301
              ],
              "why": "The inefficiency is present in the implementation but not clearly documented as an intended design."
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "Function logic does not enable reentrancy issues, as these are external non-payable calls and non-privileged."
            }
          ]
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "low"
      },
      "reasoning_summary": "This finding concerns an inefficiency in gas usage due to repeated calls to accountManager.updatePlayer for the same landlord in a loop. While it does not cause loss of funds or affect correctness, it unnecessarily increases transaction costs for users, especially with many staked tokens. The impact is therefore low, but the likelihood is high for users with multiple staked assets.",
      "adjustment": {
        "index": 9,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version pragma 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                51,
                66,
                69,
                72,
                75,
                78
              ],
              "why": "The issue concerns unclear configuration retrieval, not an exploitable bug."
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The issue highlights unclear or potentially mismatched retrieval of configuration parameters based on naming conventions rather than an identified bug. It does not introduce a direct exploit path or high operational risk, as the outcome depends on external configuration management. This makes the finding of low impact and low likelihood, consistent with a non-exploitable, informational concern.",
      "adjustment": {
        "index": 10,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version is explicitly set to 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153,
                196,
                301,
                310
              ],
              "why": "All external calls made via known interfaces to trusted modules or ERC721, not to untrusted contracts."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93,
                104,
                117
              ],
              "why": "Other functions check initialization; not documented in stakeMunchable, nor specified as intentional."
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93,
                104,
                117
              ],
              "why": "State-changing function is internally called and relevant guards/checks are applied elsewhere, but plotMetadata initialization is missing here."
            }
          ]
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The missing check for plotMetadata initialization can cause landlords to have a 0 tax rate upon first interaction, resulting in unexpected reward distribution. While this is unlikely to cause severe loss or break the protocol, it could confuse users or create minor economic inconsistencies. The likelihood is medium since it's contingent on edge-case usage, but overall impact is low.",
      "adjustment": {
        "index": 11,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma specifies Solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                310
              ],
              "why": "Loop is internal to the contract; not external interaction."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141
              ],
              "why": "There is an explicit check in stakeMunchable limiting staked Munchables to 10."
            }
          ]
        },
        "F_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141,
                248
              ],
              "why": "Due to secondary checks, practical exploit path does not exist."
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "Although using a uint8 loop counter for a potentially larger array is not best practice, actual functional risk is mitigated by explicit staking limits elsewhere in the contract. The issue is theoretical and currently unexploitable, so the impact and likelihood are both low, but future contract modifications could inadvertently bypass this safety. Retaining this as a low-severity best practice warning is appropriate.",
      "adjustment": {
        "index": 12,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity pragma 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No external untrusted contract called in transferToUnoccupiedPlot"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "All operations are internal to this contract"
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Allows blocking of plots and incorrect reward/event accounting"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Behavior is not documented or intentional"
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                174,
                200,
                227
              ],
              "why": "Stale state leads to real stuck plots and incorrect logic"
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The missing update to toilerState[tokenId].plotId after a plot transfer causes persistent incorrect state, which results in users being unable to free or reuse plots, and can lead to malfunctioning reward logic and misleading events. This is a critical integrity issue that directly affects contract usability and correctness. The issue is not mitigated elsewhere and presents a real exploit path.",
      "adjustment": {
        "index": 13,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Compiler version is set to 0.8.25, which is >=0.8.0."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                345,
                346
              ],
              "why": "No 'unchecked' arithmetic present in _getNumPlots; standard division used."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                345,
                346
              ],
              "why": "_getNumPlots only uses internal contract function calls; no external untrusted call at the division site."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                345
              ],
              "why": "Purely internal view logic; division is not in an external call context."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                46,
                93,
                176,
                200
              ],
              "why": "Core functions using _getNumPlots restrict access to registered/main accounts and have access controls."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                174,
                200
              ],
              "why": "If division by zero reverts, critical game/protocol functionality halts."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3,
                345,
                346
              ],
              "why": "Division by zero is not checked or handled by Solidity >=0.8.0's auto-checks; reverts on division by zero, but not safe/intended."
            }
          ]
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "Division by zero can occur in _getNumPlots if PRICE_PER_PLOT is zero, causing critical protocol disruption as core functions will always revert. This risk is not mitigated by version or access control, as malicious or mistaken configuration changes can still trigger it. The impact is high due to protocol shutdown; likelihood is medium given administrative involvement.",
      "adjustment": {
        "index": 14,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity 0.8.25 is used."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153,
                196,
                301,
                310
              ],
              "why": "External calls to munchNFT.transferFrom and accountManager.updatePlayer."
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                155,
                160,
                161,
                193,
                194
              ],
              "why": "State updates after external call, e.g., in stakeMunchable and unstakeMunchable."
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                12,
                41,
                136,
                175,
                201,
                229
              ],
              "why": "No nonReentrant or comparable reentrancy guard."
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153,
                301
              ],
              "why": "Checks-Effects-Interactions (CEI) pattern not strictly followed."
            }
          ]
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "Calls to external contracts, not internal."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93,
                105,
                118,
                133,
                175,
                201,
                229
              ],
              "why": "Access is limited by account registration, notPaused, or onlyConfiguredContract checks."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153,
                301
              ],
              "why": "Reentrancy is plausible if the called contracts are untrusted or malicious."
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "External calls are made without reentrancy guards or strict adherence to the CEI pattern, and state-changing logic occurs after these calls. If any callee is malicious, a reentrancy attack could occur. The lack of a guard with mutable state after external interaction yields a high severity per risk matrix.",
      "adjustment": {
        "index": 15,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                136,
                137
              ],
              "why": "Only registered users can stake their NFTs"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The length check '>' instead of '>=' leads to an off-by-one error, allowing a user to stake 11 NFTs instead of the intended limit of 10. This is a policy deviation with minor impact but is readily exploitable by any user. No automatic protections or mitigating controls are present.",
      "adjustment": {
        "index": 16,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma specifies Solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The contract lacks ERC721Receiver, so direct safeTransferFrom calls will fail, reducing compatibility and causing accidental token loss. However, loss is only possible if users ignore the documented interface, and no core protocol assets are at risk. The impact is therefore low with a medium likelihood for user error.",
      "adjustment": {
        "index": 17,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma Solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "All state changes occur within LandManager"
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "Privilege checks: tokens can only be moved by owner"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                201,
                214,
                233,
                259
              ],
              "why": "Critical accounting manipulation and possible double-occupation"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                227
              ],
              "why": "No external call/reentrancy behavior"
            }
          ]
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The bug in `transferToUnoccupiedPlot` causes a critical mismatch between the plot occupancy mapping and the token's assigned plot, enabling duplicated plot usage and breaking core reward accounting. The exploitability is very high as anyone who can call the function could corrupt on-chain state, and all reward/invariant logic downstream is affected. All evidence suggests this is not a duplicate, design-intended, or theoretical issue.",
      "adjustment": {
        "index": 18,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "All affected logic is inside same contract."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                137
              ],
              "why": "Only registered, authorized users can stake."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141,
                142
              ],
              "why": "Code and comments indicate 10 staked is intended limit."
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                249
              ],
              "why": "Loops and logic may depend on length limit."
            }
          ]
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The off-by-one bug allows players to stake 11 tokens despite a 10-token limit, violating code invariants. While not escalating directly to funds loss, this can break downstream logic relying on the fixed limit, potentially leading to unexpected failures. The issue is not mitigated, is clearly unintentional, and warrants a severity of medium.",
      "adjustment": {
        "index": 19,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                282,
                283
              ],
              "why": "Overflow is directly possible in schnibblesTotal = (timestamp - _toiler.lastToilDate) * BASE_SCHNIBBLE_RATE"
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25 enables built-in overflow checks"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                282,
                283
              ],
              "why": "No unchecked block is used (default checked arithmetic)"
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                309
              ],
              "why": "Overflow would DoS all farming via revert, affecting all function calls using _farmPlots"
            }
          ]
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "accountManager may be external, but the overflow is not related to untrusted external calls"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "_farmPlots is an internal call executed within same contract context"
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                51,
                75,
                133
              ],
              "why": "BASE_SCHNIBBLE_RATE can only be set through configUpdated/reconfigure, not by an unprivileged user"
            }
          ]
        },
        "A_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                46,
                90,
                133
              ],
              "why": "ConfigStorage privilege could break system or bypass time-delays if governance is not robust"
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                311
              ],
              "why": "If arithmetic overflows, all farming operations are disabled for all users (protocol brick)"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                283
              ],
              "why": "No indication overflow revert is design intent; config could be misconfigured or malicous"
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                309
              ],
              "why": "Attack is feasible if admin or config storage is compromised or misconfigured"
            }
          ]
        },
        "F_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3,
                282,
                283
              ],
              "why": "Overflow auto-reverted by >=0.8.0 and no unchecked block, but the revert itself is the DoS risk"
            }
          ]
        },
        "F_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                133,
                311
              ],
              "why": "No re-entrancy context relevant to the overflow bug"
            }
          ]
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "Arithmetic overflow is caught in Solidity ≥0.8.0, but an attacker or misconfigured admin can set a schnibble rate so high that every farming-related call reverts, bricking protocol utility. This is a severe denial-of-service risk rooted in excessive privilege or config error. The issue is feasible and not mitigated by intent, thus the finding stands.",
      "adjustment": {
        "index": 20,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract is compiled with Solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                66,
                69,
                72,
                75,
                78
              ],
              "why": "Configuration misuse here can break all core gameplay functionality."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The contract loads critical configuration values using storage keys intended for addresses, not numbers. This misconfiguration can completely disable key features and game logic, but the probability of it occurring is low if the configuration is correct. The impact is high but likelihood is low, resulting in low severity by the matrix.",
      "adjustment": {
        "index": 21,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248
              ],
              "why": "The issue is with arithmetic overflow of the uint8 loop counter in _farmPlots."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract uses Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248
              ],
              "why": "The loop is not inside an unchecked block; overflow will revert."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248
              ],
              "why": "Overflow is possible but not in an unchecked block."
            }
          ]
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The finding centers on overflow of a uint8 loop counter in _farmPlots if more than 255 staked tokens are present. While current logic limits staking to 10, future changes or errors could allow exceeding this, creating a denial of service for affected users. Solidity 0.8+ will revert on the overflow but does not prevent a logic bug, so likelihood is medium but impact remains low.",
      "adjustment": {
        "index": 22,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity pragma is 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No unchecked arithmetic in transferToUnoccupiedPlot"
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No external untrusted calls in transferToUnoccupiedPlot"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                204,
                205,
                214,
                215,
                216,
                217,
                218,
                219,
                220,
                221,
                222,
                223
              ],
              "why": "Function manipulates contract state internally"
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "The impact is user confusion/experience, not exploitable corruption"
            }
          ]
        },
        "F_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity >=0.8.0 with no unchecked arithmetic"
            }
          ]
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Internal calls only; CEI/reentrancy not a factor"
            }
          ]
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The missing lastToilDate update after plot transfers leads only to a non-critical, user-facing usability issue. There is no state corruption or exploitable path, and the consequence is a minor one farming interval without schnibbles. Severity is low due to limited impact and low likelihood.",
      "adjustment": {
        "index": 23,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version is explicitly set to 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                66,
                69,
                72,
                75,
                78
              ],
              "why": "Loading configuration parameters with address keys results in incorrect critical values that can destabilize or break core protocol logic."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The contract loads critical parameters using storage keys with misleading names, likely meant for addresses, resulting in broken or invalid game rules and risk of system failure. This impacts core game economics and protocol stability. The issue is neither theoretical nor intended behavior and has high impact and likelihood.",
      "adjustment": {
        "index": 24,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version 0.8.25 enables auto-revert on overflows."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                176
              ],
              "why": "Unstaking is protected by ownership checks and registration."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                259,
                262
              ],
              "why": "While dirty marking is present in code, lack of notification is not documented or intended as user-facing behavior."
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "When a staked Munchable's plot becomes invalid, the NFT stops earning rewards ('dirty') and users are not notified of this status, potentially leading to unclaimed or stuck NFTs. This does not affect protocol funds or allow theft but disrupts user experience and trust. No auto-remediation or user-facing alert exists, making the likelihood and impact both medium.",
      "adjustment": {
        "index": 25,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286
              ],
              "why": "The bug is not classic overflow/underflow but negative-to-unsigned conversion causing revert."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version is 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286
              ],
              "why": "No use of `unchecked` block for arithmetic."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "All function logic observed is internal to the LandManager contract."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                230,
                231,
                132,
                137
              ],
              "why": "Any user with registered account can trigger the affected code paths."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                286
              ],
              "why": "The arithmetic revert (negative to unsigned cast) in Solidity 0.8+ acts as an effective guard preventing silent underflow/exploit."
            }
          ]
        },
        "removal_reason": "auto_checked",
        "impact": "medium",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The negative-to-unsigned cast in the reward calculation would revert on underflow in Solidity 0.8+, so funds are not at risk of being silently drained or manipulated. The bug only causes a revert, blocking user actions but not resulting in theft or loss. Since auto-revert prevents practical exploitation, severity is reduced according to the matrix.",
      "adjustment": {
        "index": 26,
        "new_severity": "low",
        "should_be_removed": true,
        "comments": "Solidity 0.8+ auto-reverts on this conversion, making this a denial-of-service (DoS) concern only, not an exploitable underflow."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141
              ],
              "why": "The finding is about a logical staking limit, not an arithmetic overflow."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract is compiled with Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                146,
                149,
                153,
                154
              ],
              "why": "No direct call to an external untrusted contract in the limit logic; external interactions are not relevant here."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                137,
                138
              ],
              "why": "Only registered users can stake; privilege escalation is not the core issue."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141
              ],
              "why": "Behavior appears to be erroneous, not intentional, based on standard practices and the revert error name."
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The limit check in stakeMunchable allows 11 staked Munchables due to using '>' instead of '>=' when checking the count, which can violate logical assumptions. This is not an overflow or permissions issue, but a straightforward logic bug with high likelihood and low impact since it only marginally exceeds the intended cap. The issue merits a 'medium' severity per the assessment matrix.",
      "adjustment": {
        "index": 27,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248
              ],
              "why": "Loop counter overflow is not classic arithmetic overflow/underflow; it's about type limits."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract uses Solidity 0.8.25, which has built-in overflow/underflow checks (except for unchecked blocks)."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248
              ],
              "why": "Loop using uint8 is not inside an unchecked block."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248
              ],
              "why": "The loop is strictly internal and does not call untrusted contracts."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248
              ],
              "why": "The code is internal."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141,
                160
              ],
              "why": "Function explicitly limits staked tokens per user to 11."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141
              ],
              "why": "Hard cap of 11 staked Munchables is enforced in stakeMunchable()."
            }
          ]
        },
        "F_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141
              ],
              "why": "Practical staked array cannot reach 256 due to explicit check and revert."
            }
          ]
        },
        "F_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3,
                248
              ],
              "why": "Solidity ≥0.8.0 and no unchecked block."
            }
          ]
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248
              ],
              "why": "Re-entrancy is not in scope for this loop."
            }
          ]
        },
        "removal_reason": "design_intent",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "A hard cap on staked tokens (max 11) makes the uint8 loop counter a non-issue in practice, and Solidity 0.8.25 prevents accidental overflows. The low likelihood and low impact, plus design intention, justify marking this as a documentation/clarity concern rather than a real vulnerability. The finding does not pose a practical risk given current contract logic.",
      "adjustment": {
        "index": 28,
        "new_severity": "low",
        "should_be_removed": true,
        "comments": "This finding is mitigated by explicit contract logic limiting iterations, and any severity downgrade is justified due to design intent."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma specifies Solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                316,
                331
              ],
              "why": "Function _removeTokenIdFromStakedList is internal and only manipulates internal state"
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                316,
                331
              ],
              "why": "Swap and pop is a standard, documented gas-saving pattern"
            }
          ]
        },
        "F_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                316,
                331
              ],
              "why": "The change in order does not impact contract safety or permission; impact is cosmetic and does not open vulnerabilities"
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The swap-and-pop pattern in _removeTokenIdFromStakedList is gas efficient but can change array order, which might impact UX if external clients assume stable ordering. However, the contract's core logic and safety are not affected, and this behavior is well-documented. As such, the issue is low impact and does not require removal.",
      "adjustment": {
        "index": 29,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                272,
                279
              ],
              "why": "The finding is about potential out-of-bounds array access, not arithmetic overflow/underflow."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract uses Solidity 0.8.25, which auto-reverts on arithmetic overflow/underflow."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [],
              "why": "No unchecked arithmetic blocks are present in the relevant lines."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                309
              ],
              "why": "No external untrusted calls occur between the array accesses and the potential revert."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "The relevant function calls are all within the same contract."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                272,
                279
              ],
              "why": "Out-of-bounds access in these lines could cause a revert in realistic, not just theoretical, cases if inputs are not strictly validated."
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The code performs array accesses using potentially unvalidated indices derived from user-controlled NFT attributes and metadata. While external components may validate these values, the absence of explicit bounds checks in this contract means an unexpected input could cause a transaction revert. As the effect is a revert (not theft or corruption), the impact is low but the likelihood is medium if integrations are loose.",
      "adjustment": {
        "index": 30,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version pragma is 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                136
              ],
              "why": "No arithmetic is performed inside an unchecked block in stakeMunchable."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "stakeMunchable interacts with other contracts, but not via user input/external arbitrary call context."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                136
              ],
              "why": "No privileged function exposed to unprivileged users as relates to this finding."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3,
                136
              ],
              "why": "Overflow is not the issue; arithmetic that could overflow is checked, and the contract uses Solidity >=0.8 (which auto-reverts) with no unchecked detected."
            }
          ]
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "There is insufficient validation to ensure that landlord plot metadata is initialized before staking, which may result in a zero tax rate and potential loss of incentives. The likelihood is medium because landlords might commonly miss initialization, but the impact remains low since it does not compromise core protocol security or user funds. The report is accurate, not duplicated, and the severity matrix matches the finding.",
      "adjustment": {
        "index": 31,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity ^0.8.25 is used"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "External calls to accountManager.updatePlayer"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                292,
                293,
                295,
                296,
                299,
                300
              ],
              "why": "State updates occur after some external calls inside the loop"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "No nonReentrant modifier or reentrancy guard detected"
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "Checks-Effects-Interactions pattern not strictly followed"
            }
          ]
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "External contracts, not internal"
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                233
              ],
              "why": "Unprivileged users can trigger farmPlots"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                301,
                310
              ],
              "why": "Potential for protocol state manipulation and NFT loss"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "This finding is a clear instance of reentrancy risk: external calls to an untrusted contract (`accountManager`) occur before internal state updates complete and without any guard. An attacker controlling the external contract can re-enter and subvert the contract logic, risking asset loss or accounting corruption. The severity is high due to the impact and likelihood of exploit and thus should not be removed.",
      "adjustment": {
        "index": 32,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Explicitly uses Solidity 0.8.25 which includes overflow checks"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The bug causes internal state and event incoherence, potentially allowing subsequent misallocation of rewards or blocking further transfers. It is likely to occur whenever the plot transfer function is used, with a medium impact due to possible economic inconsistencies. No mitigating patterns, access, or overflow checks affect this issue.",
      "adjustment": {
        "index": 33,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                271,
                280
              ],
              "why": "The finding concerns unchecked array indexing, not explicit arithmetic overflow/underflow."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract is compiled with Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                309
              ],
              "why": "No unchecked block surrounds the array indexing."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "_farmPlots does not perform external calls prior to state changes relevant to the bug."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "All calls are internal within the contract."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                309
              ],
              "why": "Can only be triggered by registered accounts staking Munchables, not unprivileged users in a privileged context."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                271,
                280
              ],
              "why": "This is an array index vulnerability, not overflow."
            }
          ]
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "Unchecked indexing into REALM_BONUSES and RARITY_BONUSES may revert if NFT attributes or config arrays are out of bounds, blocking the main farming operation. Because this can affect all users and halt key protocol activity, the impact is medium and likelihood high due to reliance on dynamic input. The finding is unique and not incidental to arithmetic overflow or re-entrancy.",
      "adjustment": {
        "index": 34,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                345,
                346
              ],
              "why": "The vulnerability is a potential division by zero, not an arithmetic overflow or underflow."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract uses pragma solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "_getNumPlots does not use an unchecked block."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                345,
                346
              ],
              "why": "_getNumPlots only reads from an external contract (lockManager) but does not call untrusted contracts in a way that matters for re-entrancy."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                345,
                346
              ],
              "why": "_getNumPlots is an internal view function."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The division by zero due to a configurable PRICE_PER_PLOT parameter can cause a full DoS for all users interacting with staking and farming. The contract does not validate PRICE_PER_PLOT is nonzero prior to use. Given the high impact but medium likelihood (since misconfiguration is needed), the severity is high.",
      "adjustment": {
        "index": 35,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract uses Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "FarmPlots calls accountManager.updatePlayer, an external contract."
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "External calls to accountManager are made before state changes in stake/unstake."
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                41,
                233
              ],
              "why": "No re-entrancy guard visible on stakeMunchable, unstakeMunchable, or transferToUnoccupiedPlot."
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                41,
                233
              ],
              "why": "Effects (state changes) on staking functions occur after interacting with external contracts via _farmPlots."
            }
          ]
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "Calls are external (contract-to-contract), not internal."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                174,
                200
              ],
              "why": "Any registered user can call staking/unstaking/transfer functions."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                41,
                233
              ],
              "why": "Denial-of-service blocks core game/protocol functionality."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The DoS risk stems from tightly coupling a complex farm logic call with critical staking/unstaking operations, so any revert within _farmPlots blocks user actions. External calls occur before state changes, amplify risk, and the functions are callable by any user, affecting protocol integrity. The potential impact is high, likelihood medium due to the structure, justifying matrix severity 'high'.",
      "adjustment": {
        "index": 36,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma is 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141,
                142
              ],
              "why": "No unchecked blocks are present in the staking limit"
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "No external untrusted contract call in the affected code"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                160,
                161
              ],
              "why": "Updates are to internal mapping, not an external contract"
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                137,
                138
              ],
              "why": "Function requires sender to be registered/main account"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141
              ],
              "why": "Limit appears intended to be 10"
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141,
                142
              ],
              "why": "Practical: user can stake 11 munchables instead of 10"
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                139,
                140
              ],
              "why": "No opportunity for reentrancy attack"
            }
          ]
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The off-by-one error permits staking 11 munchables instead of the apparent intended limit of 10, resulting in a mild control imbalance. While this is a functional bug and easily fixed, it does not threaten protocol integrity or funds. The likelihood is high due to direct user interaction with the limit.",
      "adjustment": {
        "index": 37,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286,
                287
              ],
              "why": "Overflow caused by implicit int256->uint256 cast after a negative result in schnibblesTotal computation."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract uses Solidity 0.8.25, which reverts on native arithmetic overflows but not on signed-to-unsigned casts."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                309
              ],
              "why": "Negative overflow in schnibblesTotal breaks farming and leads to DOS for all related functions."
            }
          ]
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                136,
                176,
                201
              ],
              "why": "Any unprivileged player can farm/stake/unstake, triggering the bug with problematic realm+rarity bonuses."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                287,
                295
              ],
              "why": "Critical protocol manipulation: a player can perma-DOS their staking, farming, and landlord's game logic."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285
              ],
              "why": "Signed-to-unsigned cast is not covered by Solidity's overflow checks; bug is not auto-reverted."
            }
          ]
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The overflow is due to incorrect signed-to-unsigned casting after a bonus calculation that can go negative, causing schnibblesTotal to hugely overflow. This can permanently break farming and related flows for any player or landlord, and requires no special privileges to exploit. High impact and likelihood are justified due to the direct denial of service and account lockout.",
      "adjustment": {
        "index": 38,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract uses Solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "Calls to external (potentially untrusted) accountManager contract"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                292,
                294,
                295,
                297,
                299,
                301,
                310
              ],
              "why": "State changes occur after and around the external calls"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                1,
                348
              ],
              "why": "Contract lacks any re-entrancy guard like nonReentrant"
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                292,
                294,
                297,
                299,
                301,
                310
              ],
              "why": "Checks-Effects-Interactions pattern is not followed"
            }
          ]
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "accountManager is an external (not internal) contract"
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                176,
                196,
                194
              ],
              "why": "Re-entrancy enables manipulation/corruption of core mappings/arrays"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                1,
                348
              ],
              "why": "No nonReentrant modifier or CEI present"
            }
          ]
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "Untrusted external calls are made from `_farmPlots` with no re-entrancy guard or CEI pattern, as identified in the finding and corroborated by inspection of `LandManager.sol`. This creates a high-impact, realistic risk of state corruption and potential protocol freeze. Severity is high due to critical protocol manipulation, with medium likelihood given the modifier's ubiquity.",
      "adjustment": {
        "index": 39,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma 0.8.25 indicates Solidity >=0.8.0"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                136
              ],
              "why": "Access to stake is restricted to the NFT owner"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The off-by-one error in the staking cap allows users to bypass the intended limit, and further enables self-DOS when the stake list grows beyond 255 due to a uint8 loop counter overflow. The impact is limited to self-inflicted denial-of-service for consenting users. No overflow, privilege, or reentrancy risk is present, but the exploit can permanently lock users out of core functionality.",
      "adjustment": {
        "index": 40,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version is 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                167
              ],
              "why": "No `unchecked` block is used for vulnerable arithmetic."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                136
              ],
              "why": "Any user may call stakeMunchable and target uninitialized metadata."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "Players may exploit uninitialized metadata to pay zero tax, which undermines intended economics but does not fully compromise system safety. The impact is limited but the likelihood is high, so severity is elevated. Fixing to enforce `MIN_TAX_RATE` at all times is recommended.",
      "adjustment": {
        "index": 41,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma specifies Solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Function implementation is entirely internal to the contract (does not external call out)."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Critical state corruption: rewards and staking logic can be bypassed/manipulated."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The function fails to update the plotId within toilerState upon relocating a token, causing critical state inconsistency. This enables incorrect reward accounting and multiple occupancy anomalies. Due to tangible exploitability, the finding is valid and severe.",
      "adjustment": {
        "index": 42,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286
              ],
              "why": "Arithmetic underflow occurs if 'finalBonus' is less than -100, resulting in a negative value that is cast to uint256."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract is compiled with Solidity 0.8.25, which auto-reverts on native arithmetic but not on manual typecasts or explicit int↔uint casting."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286
              ],
              "why": "Underflow can result in protocol-scale economic damage, making it a critical link in a potential exploit chain."
            }
          ]
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                230,
                231
              ],
              "why": "Any user can trigger the reward calculation through 'farmPlots()'."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286
              ],
              "why": "Allows manipulation of token rewards, in turn enabling protocol draining."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286
              ],
              "why": "Overflow/underflow not auto-checked in this design since a negative int is cast to uint256 without a revert."
            }
          ]
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The reward calculation inadequately handles negative bonuses, allowing a crafted input to result in severe underflow when casting to uint256. This facilitates massive, unintended payouts to any user able to stake and farm, creating a critical financial vulnerability for the protocol. The issue is not mitigated by Solidity 0.8's safety checks due to explicit int→uint casting.",
      "adjustment": {
        "index": 43,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version 0.8.25 is used."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                66,
                69,
                72
              ],
              "why": "Incorrect config could allow tax rate rules to be broken or default values to be unset."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The use of incorrect storage keys for config values in `_reconfigure` can break enforced tax limits and default settings, affecting economic logic throughout the contract. As these assignments impact critical configuration and are not protected by access control, the exploit likelihood is medium and the impact is high. Severity is high since funds could be mishandled or economic rules bypassed.",
      "adjustment": {
        "index": 44,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version is 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153
              ],
              "why": "No unchecked arithmetic context"
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153
              ],
              "why": "External call to |munchNFT.transferFrom|"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                155,
                160,
                161,
                162,
                163,
                167
              ],
              "why": "State is updated after the external call"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "No reentrancy guard present"
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153,
                155,
                160,
                161,
                162,
                163,
                167
              ],
              "why": "CEI pattern is not followed; state updates after external call"
            }
          ]
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153
              ],
              "why": "Call is made to external contract, not internal"
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "Function is externally callable but only by authenticated user (registered as main account)"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "Issue does not enable critical protocol-wide manipulation since it is restricted to user’s own state"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153,
                155,
                160,
                161,
                162,
                163,
                167
              ],
              "why": "Issue is not purely theoretical; possible with malicious ERC721"
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "No reentrancy guard and CEI pattern not followed"
            }
          ]
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The stakeMunchable function calls an external contract before updating key internal state, violating the CEI pattern and lacking a reentrancy guard, allowing potential for reentrancy if the called ERC721 is malicious. However, the impact is mitigated because only registered users can call the function, and actions are likely limited to their own state. The risk remains relevant but does not rise to high severity due to these restrictions.",
      "adjustment": {
        "index": 45,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version 0.8.25 is specified."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                277,
                279
              ],
              "why": "No 'unchecked' blocks are used around array access."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                277,
                279
              ],
              "why": "No external or untrusted contract is called in the relevant code block."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                277,
                279
              ],
              "why": "All calls are internal."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                230
              ],
              "why": "Any address can call farmPlots, leading to _farmPlots."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3,
                248,
                277,
                279
              ],
              "why": "Solidity 0.8.25 guarantees out-of-bounds access will revert, and no unchecked block circumvents this."
            }
          ]
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                248,
                277,
                279
              ],
              "why": "No external calls pre-state-update; no re-entrancy risk in bounds check context."
            }
          ]
        },
        "removal_reason": "auto_checked",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "Although the array accesses in _farmPlots rely on user-influenced data, the use of Solidity 0.8.25 ensures out-of-bounds accesses will trigger a safe revert, preventing exploitation beyond denial of service. No unchecked blocks or unsafe external calls are present. This makes the practical risk low, and the finding is auto-checked by the compiler/runtime.",
      "adjustment": {
        "index": 46,
        "new_severity": "low",
        "should_be_removed": true,
        "comments": "Should be removed as Solidity 0.8+ auto-reverts on out-of-bounds access; DoS is handled by core semantics."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "Division by zero is not an arithmetic overflow/underflow, but a separate runtime error."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract is compiled with Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "No unchecked block is used in _getNumPlots."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "The function does not call an untrusted external contract; only reads from a trusted contract."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "No state changes after external calls—only view function."
            }
          ]
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "This is an internal function."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                200,
                346
              ],
              "why": "Division by zero renders staking, transferring, and other protocol operations unusable, causing critical impact."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The bug allows a single misconfiguration (PRICE_PER_PLOT set to zero) to render core protocol actions, including staking and unstaking, totally unusable and potentially lock user funds. Misconfiguration is a realistic risk, and no mitigation is present. The high impact and plausible likelihood justify a 'high' severity rating.",
      "adjustment": {
        "index": 47,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                53,
                57,
                59,
                61
              ],
              "why": "External contract addresses retrieved and assigned"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The absence of zero address checks for critical contract references means misconfiguration could result in the contract reverting or malfunctioning after an upgrade or config change. This is unlikely if proper operational rigor exists but represents a meaningful availability risk. No privilege or exploit path is introduced directly, but core logic could break if dependencies are zero.",
      "adjustment": {
        "index": 48,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141,
                142
              ],
              "why": "Array length check is a business logic issue, not arithmetic overflow."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract is compiled with Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141
              ],
              "why": "Business rule suggests intent for a strict 10-Munchable limit."
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The incorrect use of '>' rather than '>=' allows a user to stake 11 Munchables instead of the intended maximum of 10, thus breaking the specified rule. While the consequences are not severe and do not introduce a security issue, the bug causes a mismatch with intended contract logic. It is a low impact, high likelihood business logic issue meriting medium severity.",
      "adjustment": {
        "index": 49,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract is compiled with Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                268,
                301,
                310
              ],
              "why": "External calls to nftAttributesManager and accountManager occur inside the loop in _farmPlots."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                230
              ],
              "why": "Any external user can call farmPlots, making the DoS risk affect all users."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The loop in _farmPlots exposes a denial-of-service risk via gas exhaustion, especially as the loop body includes external calls and is reachable by any user. While the uint8 loop bound and current staking limits reduce, but do not eliminate, exposure, users may become unable to harvest or unstake if usage grows. The likelihood is high due to open access, but protocol-critical exploits are limited, resulting in a medium matrix severity.",
      "adjustment": {
        "index": 50,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract is compiled with Solidity >=0.8.0."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                53,
                66,
                69,
                72,
                75,
                78
              ],
              "why": "Configuration values set via a single external contract without protocol-enforced decentralization or timelock."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93,
                347
              ],
              "why": "Config changes can alter economic parameters and rewards, enabling critical protocol manipulation."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                51,
                53,
                66,
                69,
                72,
                75,
                78
              ],
              "why": "Design intends upgradability and configurability via ConfigStorage."
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "low",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "Configuration is intentionally centralized for upgradability, but this creates protocol manipulation risks if the ConfigStorage is compromised or misused. The core impact is high due to total control over economic parameters, but likelihood is low if ConfigStorage access is well-secured. This centralization is a design choice, not a code bug.",
      "adjustment": {
        "index": 51,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286
              ],
              "why": "The bug is an arithmetic overflow when a negative int is cast to uint, causing rewards inflation."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25; (Solidity >=0.8.0)"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284
              ],
              "why": "No unchecked block around the arithmetic in question."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285
              ],
              "why": "This overflow directly enables arbitrary reward minting, a critical exploit."
            }
          ]
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                248,
                309
              ],
              "why": "farmPlots can be called by any user, affecting the vulnerable calculation."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286
              ],
              "why": "Allows inflation of in-game currency, critical protocol manipulation."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The overflow arises from casting a negative int256 reward calculation to uint256, allowing users to mint huge amounts of schnibbles. This is exploitable by any user calling farmPlots, and results directly in protocol value inflation. The issue is not theoretical or mitigated elsewhere in the code.",
      "adjustment": {
        "index": 52,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "The issue is division by zero, not an arithmetic overflow/underflow."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract uses Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "No `unchecked` block is used in the `_getNumPlots` function."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "Function only queries an interface; no external contract call executed in a way that would facilitate re-entrancy."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "Call is internal (utility function)."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                78,
                345
              ],
              "why": "Design does not document PRICE_PER_PLOT=0 as an intended configuration."
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "Division by zero is a real exploit path if configured values are not constrained."
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "Division by zero is possible in `_getNumPlots` if `PRICE_PER_PLOT` is ever zero, causing a denial of service across staking/farming functionality. Although this requires a configuration error, there is no preventative check or architectural documentation treating this as intended. The risk is real and the consequence is medium-severity disruption to contract use.",
      "adjustment": {
        "index": 53,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma solidity 0.8.25 set"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Function logic is internal to this contract"
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                206,
                214,
                221
              ],
              "why": "State changes and CEI pattern respected; no external effect before state update"
            }
          ]
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The bug leads to stale or incorrect plotId in storage, potentially creating misleading state and emitted events but does not directly open an exploit path. Impact is thus low, though inconsistent state may affect dApp/UI logic. Likelihood is medium since the incorrect storage value occurs every time the function is used.",
      "adjustment": {
        "index": 54,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25 specifies Solidity >=0.8.0"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141,
                142
              ],
              "why": "No unchecked arithmetic present; off-by-one is comparison logic"
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                137
              ],
              "why": "Only the main account can stake for itself; unauthorized staking not possible"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The off-by-one logic bug allows one extra munchable to be staked than intended, bypassing the stated limit. This does not pose significant protocol risk, but constitutes a deviation from expected business logic. The issue has a low impact but is likely to occur, so the matrix severity is medium.",
      "adjustment": {
        "index": 55,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                259,
                260,
                281,
                282,
                283
              ],
              "why": "The core bug is an arithmetic underflow in `(timestamp - _toiler.lastToilDate)`."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract is compiled with Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                311
              ],
              "why": "No `unchecked {}` block is used in the arithmetic."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                176
              ],
              "why": "Underflow reverts block calls to `unstakeMunchable`, trapping NFTs (DoS exploit)."
            }
          ]
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                302
              ],
              "why": "No external calls to untrusted contracts are involved in the vulnerable code."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                302
              ],
              "why": "Reward computation and related state changes are internal to the contract."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                281
              ],
              "why": "Any staker (unprivileged tenant) may be affected by this exploit."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                176,
                259
              ],
              "why": "Attack can lock user assets and disrupt protocol reward distribution."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                259,
                260,
                261
              ],
              "why": "Behavior is not clearly documented or intended by design."
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                259,
                260,
                281
              ],
              "why": "Although Solidity >= 0.8.0 is used and there is no unchecked block, the bug is real; auto revert causes DoS, not safe recovery."
            }
          ]
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                176
              ],
              "why": "Reentrancy guards and CEI are not relevant; issue is arithmetic underflow."
            }
          ]
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "An unchecked subtraction in `_farmPlots` allows underflow when a landlord's plot count drops and metadata is out of sync, causing Solidity 0.8+ to revert and resulting in a DoS that traps NFTs. The attack can be triggered by landlords, impacts all tenants, and directly blocks asset withdrawal. The impact and likelihood are both high based on exploitability and effect.",
      "adjustment": {
        "index": 56,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version 0.8.25 is used."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "No external untrusted contract is called; only ERC721 transfer is present."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "All function calls are internal or to trusted contracts."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "`stakeMunchable` is externally accessible and does not restrict landlord input."
            }
          ]
        },
        "A_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "Allows critical manipulation by introducing a dead-end NFT lock."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "User can permanently lock their NFT."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "The exploit path is practical and easily reproducible."
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "No reentrancy or CEI issues present."
            }
          ]
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "A missing registration check on the landlord argument in stakeMunchable allows users to stake NFTs in an unrecoverable state, leading to permanent NFT loss. Both the impact and likelihood are high due to simple exploitability and critical asset loss. No mitigating controls or design intent exist to justify lowering severity.",
      "adjustment": {
        "index": 57,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                284,
                285,
                286
              ],
              "why": "Arithmetic operation involving negative bonuses (signed to unsigned cast) can cause revert due to overflow."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract compiled with Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                248,
                285
              ],
              "why": "Vulnerable calculation is not within an `unchecked {}` block."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                286
              ],
              "why": "No business requirement to allow arithmetic overflow or revert on error."
            }
          ]
        },
        "O_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                176,
                233,
                285
              ],
              "why": "`_farmPlots` is invoked in a modifier gating unstake, enabling a denial-of-service (DoS) scenario that traps NFTs."
            }
          ]
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                248,
                285
              ],
              "why": "All calculations and state changes are internal to LandManager."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                133,
                134,
                135,
                136
              ],
              "why": "Function requires registration; only registered users can reach vulnerable call."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                176,
                285
              ],
              "why": "Denial of service impacts NFT recovery, a critical protocol function."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                285
              ],
              "why": "Overflow check does not mitigate because casting negative int256 to uint256 always reverts in Solidity ≥0.8."
            }
          ]
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "A negative bonus in reward calculation can cause int-to-uint conversion to revert, blocking function execution and leading to NFT lockout (DoS). Solidity 0.8.25 auto-reverts on such casts, and the path is reachable on user input. The risk is high impact and high likelihood due to the modifier coverage and plausible negative values from storage.",
      "adjustment": {
        "index": 58,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version is 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                133
              ],
              "why": "stakeMunchable does not call untrusted external contracts"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "Anyone can call stakeMunchable if they are registered and meet logic requirements"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                137,
                138,
                145
              ],
              "why": "Issue allows permanent denial of access to user's NFT (critical loss/lock-up)"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity >=0.8; arithmetic overflow auto-reverted"
            }
          ]
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The lack of landlord registration validation in stakeMunchable allows NFTs to be staked to unregistered addresses, causing lock-up and irrecoverable loss due to forced reverts later. This directly impacts asset recoverability for users, making the impact high. Although user mistakes or deliberate attacks are possible, the likelihood is medium since it requires explicit (if accidental) action.",
      "adjustment": {
        "index": 59,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153,
                301,
                310
              ],
              "why": "External calls: munchNFT.transferFrom and accountManager.updatePlayer before state writes."
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153,
                160,
                155,
                157,
                161,
                162,
                163
              ],
              "why": "State updates after external call in stakeMunchable."
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                174,
                200
              ],
              "why": "No nonReentrant or equivalent guard present in functions."
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                150,
                153,
                160,
                155,
                157
              ],
              "why": "Checks-Effects-Interactions anti-pattern: effects after interactions."
            }
          ]
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153
              ],
              "why": "transferFrom and updatePlayer are external contract calls."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "stakeMunchable is externally callable."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141,
                160,
                163
              ],
              "why": "Reentrancy allows protocol manipulation via bypassing staking limits, occupancy and ownership mappings."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The functions in LandManager perform external calls before updating key invariants and lack any reentrancy protection. This enables attackers to reenter and maliciously bypass crucial checks, resulting in the ability to over-stake, corrupt mappings, or steal assets. The impact and likelihood are both high given an attacker-controlled ERC-721 or accountManager.",
      "adjustment": {
        "index": 60,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma 0.8.25 enables built-in overflow/underflow checks"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                259
              ],
              "why": "Main bug is logic off-by-one, not arithmetic in unchecked block"
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                259
              ],
              "why": "No untrusted external contract is called during farming logic"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                310
              ],
              "why": "All farmPlots logic is internal except for accountManager.updatePlayer"
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                310
              ],
              "why": "Privilege escalation is not the vector, farming eligibility is mishandled"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                259
              ],
              "why": "Allows infinite farming, undermining economic/protocol controls"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                259
              ],
              "why": "Clearly unintentional logic bug, not documented"
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                259
              ],
              "why": "Attack is practical: enables perpetual reward for zero valid plots"
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The logic error in `_farmPlots` misdetects when a staked plot becomes invalid, allowing users to harvest rewards forever using plot indices that should no longer exist. This undermines both economic incentives and game mechanics by bypassing intended resource constraints. The exploit is practical and severe, making this a high-severity issue.",
      "adjustment": {
        "index": 61,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286
              ],
              "why": "Arithmetic underflow occurs if finalBonus <= -100, making the numerator negative, leading to uint256 cast underflow."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "The contract is compiled with Solidity 0.8.25, which auto-reverts on arithmetic overflow/underflow but not on cast from negative int256 to uint256."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286
              ],
              "why": "The arithmetic is not inside an unchecked block; it is subject to normal Solidity 0.8+ checks."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                286
              ],
              "why": "This underflow can be exploited as part of a larger exploit chain by manipulating rewards."
            }
          ]
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "All logic occurs internally within the contract."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                230,
                233
              ],
              "why": "The farmPlots function is externally callable by any account."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286
              ],
              "why": "Uncapped schnibbles can be minted, critically manipulating protocol reward accounting."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286
              ],
              "why": "The overflow/underflow is due to casting; 0.8+ underflow checks do not revert on negative-to-uint casts."
            }
          ]
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "A negative finalBonus (≤ -100) leads to a negative reward calculation that, when cast to uint256, underflows and yields a huge reward. Since external configuration or attribute values can make this exploitable by unprivileged users, protocol integrity is at severe risk. Solidity 0.8.x does not prevent this overflow when casting negative ints to uint, so the issue is practical and critical.",
      "adjustment": {
        "index": 62,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                66,
                69,
                93,
                95,
                289,
                296,
                297
              ],
              "why": "The core issue is arithmetic overflow/underflow when schnibblesLandlord exceeds schnibblesTotal due to arbitrary tax rates."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Compiled with Solidity 0.8.25, which auto-reverts on overflows except unchecked/casts."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                282,
                284,
                285,
                286
              ],
              "why": "The arithmetic operations are not inside an unchecked block."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                296,
                297,
                310
              ],
              "why": "Overflow is weaponized for DoS and reward theft across tenant actions."
            }
          ]
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "Only trusted manager contracts are called, not untrusted external contracts."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "All calls are internal or to trusted contracts."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93,
                94
              ],
              "why": "updateTaxRate can only be called by a registered landlord for their own plot."
            }
          ]
        },
        "A_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                289,
                296,
                297,
                310
              ],
              "why": "The flaw allows landlords to disrupt protocol guarantees and potentially extract rewards maliciously."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                289,
                296,
                297
              ],
              "why": "Landlords can break reward accounting and inflict denial-of-service."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                66,
                69
              ],
              "why": "Misconfiguration results from an implementation bug, not intended design."
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                289,
                296,
                297,
                310
              ],
              "why": "Demonstrably practical exploit: arbitrary tax disables or exploits rewards."
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3,
                282,
                284,
                285,
                286
              ],
              "why": "Solidity reverts, but exploitability remains due to user-defined overflow (no unchecked)."
            }
          ]
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                282,
                284,
                285,
                286,
                289
              ],
              "why": "No reentrancy risk or CEI issues relate to this finding."
            }
          ]
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The bug allows landlords to set arbitrary and excessive tax rates due to misconfigured bounds from the config, resulting in protocol-breaking arithmetic that can revert core functions and facilitate DoS or theft. As the overflow is enabled by parameterization, not unchecked blocks, Solidity 0.8's reverts do not mitigate the exploit. This presents a high-severity, high-likelihood risk practically exploitable within the main contract flow.",
      "adjustment": {
        "index": 63,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                293,
                296
              ],
              "why": "The core issue is improper default value validation, not a numeric wrap as the primary bug."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract is compiled with Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                293,
                296
              ],
              "why": "No `unchecked` block is used around the problematic arithmetic."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                282,
                293,
                296
              ],
              "why": "Underflow acts as a denial-of-service vector, impacting renter plot farming."
            }
          ]
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                293,
                296
              ],
              "why": "No untrusted external calls before the at-risk state mutation."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                310
              ],
              "why": "`_farmPlots` logic is fully internal to the same contract."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                296
              ],
              "why": "Incorrect default tax can permanently break renting for all users, yielding DoS."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                53,
                86
              ],
              "why": "No evidence that out-of-bounds default tax is intended/documented."
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                282,
                296
              ],
              "why": "A practical exploit path exists: misconfigured config results in broken farming."
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity >=0.8, but arithmetic safety does not cover logic errors in business invariants."
            }
          ]
        },
        "F_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                293,
                296
              ],
              "why": "No reentrancy/external call risk in this bug."
            }
          ]
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "Failure to validate DEFAULT_TAX_RATE enables critical denial-of-service, since a misconfigured value can break all plot farming for renters by causing unavoidable reverts. No intent or guard for this case is documented and Solidity’s arithmetic checks do not prevent logical errors of this sort. This is a high impact, high likelihood configuration risk.",
      "adjustment": {
        "index": 64,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma 0.8.25 used in contract"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                136
              ],
              "why": "Function is not privileged; issue is off-by-one error in limit enforcement"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The off-by-one error does allow users to stake 11 munchables instead of the intended maximum of 10, violating contract assumptions and game balance. This is a functional bug, not an overflow or privilege escalation. Impact is medium due to limit violation, with high likelihood as the logic error is easily exploited.",
      "adjustment": {
        "index": 65,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version pragma 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                136
              ],
              "why": "Only external users interacting, with registration check"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                167
              ],
              "why": "Allows draining landlord's schnibbles revenue by defaulting tax rate to zero"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The vulnerability enables renters to stake on a landlord's plot when plot metadata is uninitialized, defaulting their tax rate to zero. This undermines the protocol's schnibbles revenue mechanism for landlords. The exploit is critical to protocol incentives but requires landlords to have missed a prior initialization step, making the likelihood medium.",
      "adjustment": {
        "index": 66,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141
              ],
              "why": "No 'unchecked' block is present around the staking limit"
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "The function does not call an external untrusted contract before the staking limit check."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141
              ],
              "why": "No external calls before state changes related to staking limit."
            }
          ]
        },
        "R_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                136,
                137,
                139,
                141
              ],
              "why": "Re-entrancy guard patterns not directly relevant to this logic error."
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "Stake logic operates within the same contract."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                136
              ],
              "why": "Only the token owner (msg.sender) can stake their munchables."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141
              ],
              "why": "Behavior is unintended per the invariant in the comments."
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141
              ],
              "why": "Can be practically exploited to stake an extra token."
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                141
              ],
              "why": "No re-entrancy risk present in this section."
            }
          ]
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The stakeMunchable function incorrectly checks for munchablesStaked[mainAccount].length > 10, enabling staking of an 11th token despite an intended cap of 10. This off-by-one allows users to bypass the cap, claim excessive rewards, and occupy more plots, negatively impacting allocation fairness. The vulnerability is practical, affects protocol incentives, and is not the result of intentional logic.",
      "adjustment": {
        "index": 67,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Uses Solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "transferToUnoccupiedPlot is an internal state management function"
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The missing update of toilerState[tokenId].plotId in transferToUnoccupiedPlot causes the new plot to remain forever occupied, allowing a denial-of-service on specific slots. This is not an overflow or re-entrancy, but a logic bug with internal state, and no guard or design intent is present. The impact is medium due to loss of access to land, with high likelihood since user interactions can readily trigger this issue.",
      "adjustment": {
        "index": 68,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25; ensures >=0.8.0"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No unchecked block around the arithmetic."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No external call to an untrusted contract."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No re-entrancy in this context."
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Function only manipulates state, no external call except possibly safe internal ops."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Only stakers with ownership can call, enforced by ownership checks."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Enables griefing/all-plot DoS by malicious user."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Not intended or documented behavior; appears accidental."
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Attack is practical due to ghost occupancy and DoS."
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Not an overflow issue."
            }
          ]
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The omission of updating toilerState[tokenId].plotId in transferToUnoccupiedPlot allows a single user to block all available plots, causing a denial-of-service for other renters. This is a clear, practical exploit with high impact because it disrupts protocol functionality. The likelihood is medium since it requires a malicious actor but no extraordinary capabilities.",
      "adjustment": {
        "index": 69,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Compiled with Solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                105,
                112
              ],
              "why": "No external untrusted contracts called in triggerPlotMetadata"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                105,
                112
              ],
              "why": "All logic is internal to the contract"
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                105,
                106
              ],
              "why": "Only registered users and specific conditions pass checks"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                105,
                111
              ],
              "why": "One-time registration initialization is intentional and documented"
            }
          ]
        },
        "F_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                105,
                115
              ],
              "why": "No practical exploit due to proper checks and no asset movement"
            }
          ]
        },
        "F_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity >=0.8.0, no unchecked arithmetic"
            }
          ]
        },
        "F_5": {
          "answer": "yes",
          "refs": null
        },
        "removal_reason": "design_intent",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "triggerPlotMetadata performs strict one-time initialization with all invariants enforced and no asset-moving logic. Documentation and checks align with intended design, making exploitation infeasible. No high-risk vectors or practical issues are present.",
      "adjustment": {
        "index": 70,
        "new_severity": "low",
        "should_be_removed": true,
        "comments": "Finding describes intended and innocuous behavior, matching design intent."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93,
                100
              ],
              "why": "No external call in tax rate update."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93
              ],
              "why": "updateTaxRate acts only locally for each landlord."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93
              ],
              "why": "Only plot landlords can set their own tax rate."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity >=0.8.0 auto-checks overflows for arithmetic."
            }
          ]
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93
              ],
              "why": "No value transfer, no reentrancy pattern needed."
            }
          ]
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "This finding relates to the lack of a cooldown period for landlords when updating tax rates, which could lead to unpredictable rent outcomes. The practical impact is limited to potentially unfair schnibble allocation, but only landlords can adjust their own rates. Since this is a behavioral best-practice issue, severity aligns with 'low' based on the impact/likelihood matrix.",
      "adjustment": {
        "index": 71,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version is 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                133,
                143
              ],
              "why": "All calls in stakeMunchable are to trusted system contracts"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                133
              ],
              "why": "Function is called internally within contract system"
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                137,
                143
              ],
              "why": "Only token owner may stake tokenId"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                143
              ],
              "why": "Non-existent tokenIds will revert; practical impact is a generic error rather than exploit"
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                143
              ],
              "why": "No external untrusted call, no reentrancy vector"
            }
          ]
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The issue results in a non-specific revert for non-existent tokenIds, affecting only user clarity and not security. There is no directly exploitable vector, as invalid tokenIds revert due to the ERC721 standard. Usability suffers, but practical severity is low.",
      "adjustment": {
        "index": 72,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "The finding is correct in highlighting poor UX, but the security risk is negligible since the ERC721 implementation already prevents further processing for non-existent tokens."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract is compiled with Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                313,
                332
              ],
              "why": "Array modification is internal to the contract; no external contract calls in this logic."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                136,
                177
              ],
              "why": "Access requires calling through msg.sender and registered account checks."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                138,
                143,
                146,
                147,
                148
              ],
              "why": "The intention is to restrict each user to 10 concurrent staked munchables; unbounded growth is not intended."
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                239,
                248,
                310
              ],
              "why": "The _farmPlots function loops over the munchablesStaked array; practical gas-use concerns are real if array growth is unbounded."
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                142
              ],
              "why": "A limit per user is checked in staking, but removal is done via array swap-and-pop to enforce no duplicates."
            }
          ]
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The finding identifies that the munchablesStaked array can grow unbounded due to repeated staking and unstaking, creating a real risk of DoS via gas exhaustion in related loops. Access control prevents unprivileged manipulation, but legitimate users remain at risk if their own arrays become oversized. The limitation of 10 concurrent staked tokens is ineffective at restricting array growth, as stale entries accumulate and are not reclaimed.",
      "adjustment": {
        "index": 73,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version is 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "No external *untrusted* contract call in stakeMunchable."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153,
                196
              ],
              "why": "Only internal token/account records are mutated; no cross-contract state after external call."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "Only the caller and owner can stake; no unprivileged privilege escalation."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                133,
                134,
                135,
                144,
                145,
                146
              ],
              "why": "Staking to zero address locks tokens, which could represent denial-of-service or permanent asset loss."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "No documentation or comment indicates zero address is acceptable."
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                133,
                134,
                135,
                136
              ],
              "why": "Tokens can actually be staked to address(0), representing a real locking scenario."
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                180
              ],
              "why": "Unstake can only be called by original owner; no external re-entrancy issue here."
            }
          ]
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The lack of zero address validation on the landlord parameter allows staking tokens to the zero address, causing permanent token lock as that address has no private key. This presents a practical and impactful risk of asset loss, with nothing in the code or documentation suggesting it's intended. The severity aligns with a high impact and medium likelihood due to user error or malicious use.",
      "adjustment": {
        "index": 74,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                273,
                279
              ],
              "why": "The main issue is with unchecked array indexing, not arithmetic wraparound per se."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "The contract declares pragma solidity 0.8.25, so overflows revert automatically."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                310
              ],
              "why": "No unchecked {} arithmetic blocks are present in the vulnerable calculations."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "_farmPlots does not perform a low-level external call to an untrusted contract."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "All code execution in _farmPlots is internal to the current contract."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "No privileged function is made accessible to unprivileged users."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                272,
                279
              ],
              "why": "The potential for out-of-bounds errors is not intended or documented."
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                273,
                279
              ],
              "why": "This can be triggered by setting high attribute values, so not purely theoretical."
            }
          ]
        },
        "F_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity >=0.8.0 and no use of unchecked."
            }
          ]
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "Not a reentrancy issue and CEI/reentrancy guards are not relevant here."
            }
          ]
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The issue is not an arithmetic overflow, but an unchecked array index access that could revert the transaction if attributes are not properly bounded. Since the contract is Solidity >=0.8.0, arithmetic overflow will revert, but array index checks are still the developer's responsibility. The bug is likely to occur if attributes are misconfigured, impacting availability rather than fund safety.",
      "adjustment": {
        "index": 75,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma 0.8.25 is specified."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                252,
                259,
                261
              ],
              "why": "No unchecked blocks or unchecked arithmetic."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                310
              ],
              "why": "_farmPlots and updatePlayer calls are internal/manager contract interactions."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                252,
                261
              ],
              "why": "Dirty flag handling is explicitly coded and intentional as a stop-gap, but not ideal."
            }
          ]
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The bug is not about overflow and does not enable reentrancy or privilege escalation, but creates a loss-of-rewards scenario if a previously dirty plot later becomes valid. The impact is medium since it could lock user assets from generating further rewards due to a subtle design bug, but not direct loss of assets or protocol funds. The bug is not mitigated by design, nor is it duplicated elsewhere.",
      "adjustment": {
        "index": 76,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version is set to 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "Logic in _farmPlots and throughout contract is internal to LandManager"
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                292,
                293
              ],
              "why": "State updates occur before emitting and after main calculations; not a re-entrancy vector"
            }
          ]
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The issue describes a mild UX consistency problem, not a critical security flaw. Stale tax rates may cause minor confusion but do not enable a practical exploit or loss of funds. The impact and likelihood remain low-to-medium, so severity is low per the matrix.",
      "adjustment": {
        "index": 77,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25 indicates version >=0.8.0"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No external untrusted calls; only local state and trusted contract interfaces"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                204,
                310
              ],
              "why": "All logic/data access is internal or to trusted managers set by config"
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity >=0.8 and no unchecked blocks present"
            }
          ]
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No re-entrancy risk; function does not make external untrusted calls"
            }
          ]
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The bug results in misleading event emissions if a user initiates a no-op transfer to the same plot, but there are no security or loss-of-funds implications. The contract operates on Solidity 0.8.25, so arithmetic issues are not a concern and no re-entrancy vector exists. The impact is limited to off-chain event consumers and user experience, justifying a 'low' severity.",
      "adjustment": {
        "index": 78,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity pragma 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                248
              ],
              "why": "Only plot owners and registered players can call farming logic"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "Since the landlord can rapidly change the tax rate before farming, users may unexpectedly lose a large portion of their rewards. There are no checks or slippage parameters to protect the user's anticipated schnibbles, leading to a real risk, especially because all calculations occur post-tax-rate update. The impact is medium (user loss), but likelihood is high due to no preventative logic.",
      "adjustment": {
        "index": 79,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version 0.8.25 is used, which includes overflow checks."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93
              ],
              "why": "Only registered landlords can call updateTaxRate for their own plots."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Overflow is auto-checked by Solidity >= 0.8.0"
            }
          ]
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93,
                102
              ],
              "why": "updateTaxRate does not make external calls that would trigger re-entrancy."
            }
          ]
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The finding highlights the lack of a transaction expiration deadline in updateTaxRate, creating the potential for time manipulation detrimental to users staking under landlords. While only landlords can update their tax rates, toilers may be at risk if mempool transactions are intentionally timed, creating tangible (but not critical) risk. Solidity 0.8.25 auto-checks for overflows, and there are no privilege or re-entrancy vectors present.",
      "adjustment": {
        "index": 80,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract uses pragma solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "All logic and updates are internal to LandManager and supporting manager contracts."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                136
              ],
              "why": "Functions enforce registration and access checks for staking/farming."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                233
              ],
              "why": "No untrusted external calls without guards or CEI violation."
            }
          ]
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The issue describes the use of a stale tax rate for schnibbles distribution in `_farmPlots`, which can cause user confusion and inconsistent reward calculations. The contract manages rewards internally and access control is enforced, limiting the direct exploit potential, but the impact on user fairness makes the risk medium for both likelihood and impact. No re-entrancy or overflow is present, and the finding is not a duplicate nor intentional design.",
      "adjustment": {
        "index": 81,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                290
              ],
              "why": "Primary issue is a precision/scaling mismatch, not arithmetic overflow/underflow."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Compiler pragma 0.8.25 is present."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                290
              ],
              "why": "No use of 'unchecked' blocks in schnibbles calculation."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "No external contract call related to precision issue in reward calculation."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "Calculation is fully internal to the contract."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                290
              ],
              "why": "The mixed scaling is likely an oversight, not documented as intentional."
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                290
              ],
              "why": "Issue could realistically result in inaccurate or unfair schnibbles splits."
            }
          ]
        },
        "F_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity >=0.8.0 and no unchecked blocks used, so overflow is not present."
            }
          ]
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "No re-entrancy vectors; all state changes happen after calculations."
            }
          ]
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The schnibbles reward calculation mixes percentage (division by 100) with fixed-point scaling (division by 1e18), which could result in incorrect schnibbles splits between landlord and renter. This creates a realistic risk of protocol value miscalculation, but does not expose critical loss or protocol-breaking bugs. The issue is not documented as intended and results from an internal arithmetic oversight.",
      "adjustment": {
        "index": 82,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "The pragma specifies Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                1,
                348
              ],
              "why": "The absence of an oracle is clearly intended by design, as all contract mechanics work with internally configured and stored values only."
            }
          ]
        },
        "F_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                1,
                348
              ],
              "why": "No direct or indirect exploit path is enabled by the lack of an oracle implementation."
            }
          ]
        },
        "F_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Arithmetic overflows auto-revert as Solidity version is ≥0.8.0 and no unchecked block is used."
            }
          ]
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                348
              ],
              "why": "No external untrusted calls nor re-entrancy vectors exist."
            }
          ]
        },
        "removal_reason": "design_intent",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "This finding reports the absence of oracle use, which is clearly a design choice as the contract operates entirely on internal state and values. There is no security risk or exploit that stems from this, and functionality is unaffected. The finding may be removed as it is purely informative and intended by design.",
      "adjustment": {
        "index": 83,
        "new_severity": "low",
        "should_be_removed": true,
        "comments": "The report simply notes an intentional design choice unrelated to any vulnerability."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract compiles with Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                309
              ],
              "why": "Finding relates to an arithmetic operation internal to the contract."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The finding concerns precision loss due to division before multiplication within the schnibbles calculation in the internal _farmPlots function. This can result in users receiving fewer rewards than intended, directly affecting user balances. Precision loss occurs frequently and impacts core reward logic, justifying high severity.",
      "adjustment": {
        "index": 84,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                288,
                289
              ],
              "why": "The bug concerns precision loss with integer division, not arithmetic overflow/underflow."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract is compiled with Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                309
              ],
              "why": "_farmPlots contains the relevant arithmetic and does not use any unchecked blocks."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "Only calls to other internal managers and no call to untrusted external code in relevant function."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "_farmPlots is internal and operates within the same contract context."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Not overflow: the issue is loss of precision from division, not arithmetic overflow."
            }
          ]
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "No external calls or potential for reentrancy in the affected logic."
            }
          ]
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "This finding describes minor but repetitive precision loss due to integer division truncation when distributing rewards, especially for small reward amounts. The issue only results in landlords not receiving fractional rewards (always rounded down), meaning accumulated losses are minor since integer division behavior is standard in Solidity, but the effect is consistently present. The likelihood is high (applies to all small schnibbles awards), but impact is low as values lost per event are negligible.",
      "adjustment": {
        "index": 85,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    }
  ]
}