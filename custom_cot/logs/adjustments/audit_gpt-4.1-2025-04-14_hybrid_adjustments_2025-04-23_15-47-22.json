[
  {
    "index": 0,
    "new_severity": "high",
    "should_be_removed": false,
    "comments": "Impact is medium (fairness loss, not funds/theft), but likelihood is high; issue is real and actionable. Severity upgraded to high. Removal not appropriate."
  },
  {
    "index": 1,
    "new_severity": "unchanged",
    "should_be_removed": true,
    "comments": "CEI pattern is respected throughout the `reveal` function, and state changes precede all external calls, meeting the rule book's criteria for a false positive. Removal is warranted."
  },
  {
    "index": 2,
    "new_severity": "low",
    "should_be_removed": false,
    "comments": "Accurately classified as low severity; the bug causes lost opportunity and frustration but does not present a protocol or fund-loss risk."
  },
  {
    "index": 3,
    "new_severity": "medium",
    "should_be_removed": false,
    "comments": "Raise to medium: Though it requires admin action, it can brick the protocol; admin-driven critical issues are medium if highly impactful but unlikely."
  },
  {
    "index": 4,
    "new_severity": "medium",
    "should_be_removed": false,
    "comments": "Downgraded to medium because while asset loss is irreversible, likelihood depends on user activity and communication. The risk is real and needs developer/user mitigation."
  },
  {
    "index": 5,
    "new_severity": "medium",
    "should_be_removed": false,
    "comments": "Severity lowered to medium as this is user-harming but not protocol-breaking. Recommend adding a check prior to unseal to prevent this condition."
  },
  {
    "index": 6,
    "new_severity": "low",
    "should_be_removed": false,
    "comments": "True logic flaw, but only permits limited manipulation via user transfers and cross-user reveal; recommend downgrading to low severity due to impact and exploitability constraints."
  },
  {
    "index": 7,
    "new_severity": "low",
    "should_be_removed": false,
    "comments": "Probability of exploit is low, but not theoretical; severity should be 'low' instead of original assessment."
  },
  {
    "index": 8,
    "new_severity": "low",
    "should_be_removed": false,
    "comments": "Legitimate edge-case DoS risk from unbounded array growth; low severity but not a false positive."
  },
  {
    "index": 9,
    "new_severity": "low",
    "should_be_removed": false,
    "comments": "Severity is appropriately 'low' because the operational dependency could disrupt usage but does not introduce loss or critical manipulation. Not a false positive; finding is valid."
  },
  {
    "index": 10,
    "new_severity": "best practices",
    "should_be_removed": false,
    "comments": "Intentional, documented UX throttling; not a security vulnerability but worth noting as a design tradeoff."
  },
  {
    "index": 11,
    "new_severity": "low",
    "should_be_removed": false,
    "comments": "Recommend lowering severity to 'low': this is a transparency/user experience concern without protocol risk. Suggest adding events for key actions (mintPack, reveal) to aid off-chain monitoring."
  },
  {
    "index": 12,
    "new_severity": "high",
    "should_be_removed": false,
    "comments": "Confirmed as a severe, real vulnerability; global tracking enables front-running and DoS as described. Severity high."
  },
  {
    "index": 13,
    "new_severity": "low",
    "should_be_removed": false,
    "comments": "The function strictly implements CEI so practical reentrancy issues are mitigated; severity is downgraded to 'low'. Consider adding a comment explaining reentrancy was considered and CEI is intentionally enforced."
  },
  {
    "index": 14,
    "new_severity": "low",
    "should_be_removed": false,
    "comments": "Impact is moderate (potential to brick some admin functionality) but likelihood is low since only admins can misconfigure; recommend adding a require(metadataInterval != 0) in the constructor."
  },
  {
    "index": 15,
    "new_severity": "medium",
    "should_be_removed": false,
    "comments": "The finding identifies a valid randomness-mitigation issue. The impact and likelihood are both medium, so severity remains medium."
  },
  {
    "index": 16,
    "new_severity": "medium",
    "should_be_removed": false,
    "comments": "Issue is a practical user-level DoS with medium likelihood and medium impact; severity should be medium."
  },
  {
    "index": 17,
    "new_severity": "unchanged",
    "should_be_removed": true,
    "comments": "CEI pattern is fully respected for all state changes before any external call, so per master rules this reentrancy finding should be removed as a false positive."
  },
  {
    "index": 18,
    "new_severity": "low",
    "should_be_removed": false,
    "comments": "Adjusting to 'low' since failed admin transactions due to overly large 'amount' or 'metadataInterval' are a genuine but low-impact, low-likelihood operational issue."
  },
  {
    "index": 19,
    "new_severity": "medium",
    "should_be_removed": false,
    "comments": "Medium severity is justified due to real risk of irredeemable packs if privileged minters over-mint without matching metadata supply."
  },
  {
    "index": 20,
    "new_severity": "medium",
    "should_be_removed": false,
    "comments": "Valid DoS vector for users due to blockhash expiry. Impact/likelihood balanced at medium; recommend warning and documentation, or code-level mitigation."
  },
  {
    "index": 21,
    "new_severity": "medium",
    "should_be_removed": false,
    "comments": "Behavior is not exploitable but may confuse users; impact is low, likelihood high, so medium severity per matrix."
  },
  {
    "index": 22,
    "new_severity": "info",
    "should_be_removed": false,
    "comments": "Centralization risks are expected for admin-governed contracts and do not breach any stated decentralization guarantees here; severity set to 'info' as per Rule Book."
  },
  {
    "index": 23,
    "new_severity": "low",
    "should_be_removed": false,
    "comments": "Low severity is appropriate; this is a real though impractical risk with blockhash as pseudo-randomness. For higher value applications, consider more robust randomness techniques."
  },
  {
    "index": 24,
    "new_severity": "high",
    "should_be_removed": false,
    "comments": "The finding is accurate and severe: the global unseal pool enables theft and DoS between pack holders. Impact and likelihood justify High severity."
  },
  {
    "index": 25,
    "new_severity": "medium",
    "should_be_removed": false,
    "comments": "Blockhash-based randomness introduces miner bias and can permanently block reveals after 256 blocks, resulting in user funds being locked; the risk is real and worth flagging."
  },
  {
    "index": 26,
    "new_severity": "medium",
    "should_be_removed": false,
    "comments": "Lack of constructor input validation for these parameters can create permanent and unrecoverable breakage if misconfigured. Severity should be increased to 'Medium' to reflect both the critical impact and the (albeit low) risk."
  },
  {
    "index": 27,
    "new_severity": "high",
    "should_be_removed": false,
    "comments": "Confirmed high severity logic flaw in pack unsealing tracking\u2014exploitable by any pack holder and not a false positive."
  },
  {
    "index": 28,
    "new_severity": "unchanged",
    "should_be_removed": true,
    "comments": "False positive under master rules: CEI pattern is properly followed, so lack of `nonReentrant` does not create a practical reentrancy vulnerability in this context."
  },
  {
    "index": 29,
    "new_severity": "high",
    "should_be_removed": false,
    "comments": "Severity is confirmed as High as user assets may become permanently locked; not a false positive. Strongly recommend a recovery mechanism or clear warning to users and documentation. Constructor parameter for unsealDelay should also be validated to ensure usability."
  },
  {
    "index": 30,
    "new_severity": "medium",
    "should_be_removed": false,
    "comments": "The lack of constructor validation for NFT addresses can irreversibly break reveal functionality if misconfigured at deploy time. Impact is high but practical likelihood is only medium, so medium severity is justified. Recommend adding explicit checks that NFT addresses are nonzero and (ideally) smart contracts."
  },
  {
    "index": 31,
    "new_severity": "medium",
    "should_be_removed": false,
    "comments": "Validated: Parameter misconfiguration could brick the contract or weaken protocol guarantees. Severity is Medium per risk matrix."
  },
  {
    "index": 32,
    "new_severity": "medium",
    "should_be_removed": false,
    "comments": "This is a valid centralization risk: admin can pause the contract at will, but this is clearly intended functionality and not an unauthorized access flaw. Escalate only if decentralization is a promised protocol property."
  },
  {
    "index": 33,
    "new_severity": "low",
    "should_be_removed": false,
    "comments": "Valid concern; array can theoretically become large enough for gas DoS but practical impact is limited. Leave at Low severity."
  },
  {
    "index": 34,
    "new_severity": "best practices",
    "should_be_removed": false,
    "comments": "OpenZeppelin's ERC1155 reverts when minting to the zero address, so this is not a security bug, but adding explicit address validation is a recommended best practice for code clarity."
  },
  {
    "index": 35,
    "new_severity": "low",
    "should_be_removed": false,
    "comments": "The absence of specific reveal/mint events is not a security vulnerability, but adding such events may help off-chain integrators; low severity is appropriate."
  },
  {
    "index": 36,
    "new_severity": "high",
    "should_be_removed": false,
    "comments": "Original severity is appropriate. The absence of user-specific linkage for unseal events enables frontrunning among legitimate holders, making the vulnerability practical and high risk as described."
  },
  {
    "index": 37,
    "new_severity": "unchanged",
    "should_be_removed": true,
    "comments": "CEI pattern is followed\u2014removing as a false positive per reentrancy master rules."
  },
  {
    "index": 38,
    "new_severity": "medium",
    "should_be_removed": false,
    "comments": "Severity increased to 'medium' as the finding poses a real usability and fairness risk via blockhash manipulation and fragile reveal timing."
  },
  {
    "index": 39,
    "new_severity": "high",
    "should_be_removed": false,
    "comments": "This is a real and high-impact DoS logic bug; severity should be upgraded to High."
  },
  {
    "index": 40,
    "new_severity": "high",
    "should_be_removed": false,
    "comments": "Severe design flaw: any pack holder can steal another's scheduled unseal by popping the last entry from the global queue. This enables practical, repeated exploitation and significantly impacts fairness."
  },
  {
    "index": 41,
    "new_severity": "medium",
    "should_be_removed": false,
    "comments": "Logic flaw can disable all reveals via misconfiguration (unsealDelay \u2265 256), warranting medium severity."
  },
  {
    "index": 42,
    "new_severity": "low",
    "should_be_removed": false,
    "comments": "This is a real constructor parameter check omission; risk is low (DoS on misdeploy) but not just a best practice."
  },
  {
    "index": 43,
    "new_severity": "medium",
    "should_be_removed": false,
    "comments": "The use of blockhash for randomness enables potential bias/manipulation by miners/validators, thus this is a valid fairness risk (medium severity)."
  },
  {
    "index": 44,
    "new_severity": "medium",
    "should_be_removed": false,
    "comments": "Raise to medium: allows unauthorized reveals by other holders, undermining fairness but not causing protocol-wide loss."
  },
  {
    "index": 45,
    "new_severity": "low",
    "should_be_removed": false,
    "comments": "Valid DoS through irreversible loss of a pack reveal, but impact is limited (no direct theft/loss), and likelihood is user-dependent; severity adjusted to low."
  },
  {
    "index": 46,
    "new_severity": "unchanged",
    "should_be_removed": true,
    "comments": "CEI pattern is followed in reveal(), so reentrancy is effectively mitigated. Per [reentrancy] and [fp] Master Rule Book sections, this finding is a definitive false positive and should be removed."
  }
]