{
  "document_id": "audit_run_schema6",
  "findings": [
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                272,
                279,
                286,
                287
              ],
              "why": "A signed arithmetic operation is cast to uint256 after possible negative result, causing wrapping."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity pragma is 0.8.25, so >=0.8.0 is used."
            }
          ]
        },
        "O_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                286,
                287
              ],
              "why": "Math is performed via int256 and custom casting, bypassing Solidity's auto-checked arithmetic."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                299,
                301,
                310
              ],
              "why": "The overflowed schnibble value is credited to both user and landlord, destabilizing the protocol's total balances."
            }
          ]
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "Only calls to accountManager, a trusted system contract; no un-trusted external calls."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248
              ],
              "why": "No mutex/nonReentrant-like guard for schnibble minting."
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                230
              ],
              "why": "Any unprivileged user can call farmPlots to trigger reward calculation."
            }
          ]
        },
        "A_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                51,
                66,
                82,
                83
              ],
              "why": "ConfigStorage contract is owner-controlled; on-chain admin can update bonuses at will."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                51,
                82,
                83
              ],
              "why": "No timelocks/multisig mentioned; ConfigStorage admin likely unconstrained."
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                286,
                287,
                299,
                301
              ],
              "why": "Overflow enables infinite inflation and protocol-wide economic ruin."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The schnibble calculation can overflow via a negative bonus configured maliciously or in error, leading to an unbounded mint. This can be triggered by anyone and exploits a bypass of Solidity's overflow checks, impacting the protocol's entire economic system. Removal is not justified as the issue is neither mitigated nor theoretical.",
      "adjustment": {
        "index": 0,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "Overflow is possible via a single configuration value; this is a critical, high-severity economic break that can be exploited by an attacker with config privileges or a buggy admin."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma specifies Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No external calls to untrusted code in transferToUnoccupiedPlot."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                214,
                225,
                226
              ],
              "why": "No storage writes after any external calls in this pathway."
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No re-entrancy guards present in transferToUnoccupiedPlot."
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200
              ],
              "why": "Function is externally callable and manipulates core state."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200
              ],
              "why": "No ownership or privileged checks for transferToUnoccupiedPlot beyond the staker checks."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200
              ],
              "why": "No protocol-level mitigation or global pause for this invariant."
            }
          ]
        },
        "A_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "The bug lets farmers potentially claim excessive Schnibbles but cannot manipulate protocol-critical assets."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The bug allows farmers to claim Schnibbles rewards for periods when their staked Munchable was not correctly mapped to an existing plot due to not updating plotId, creating moderate financial risk. While it's not a protocol-wide compromise, it is easily triggered by users and not mitigated by access controls or re-entrancy protections. Impact and likelihood are both 'medium', correctly matching the severity matrix.",
      "adjustment": {
        "index": 1,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "The issue is valid, moderately impactful, and should remain at Medium severity to match the risk from farming excess rewards."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25 is set"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                136
              ],
              "why": "Any user can call stakeMunchable"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "A user can bypass the 10-stake limit due to an off-by-one operator, allowing up to 11 staked tokens and breaking the intended invariant. Since staking is open to any account and impacts only individual stake limits, severity is low impact but highly likely. The matrix result is medium severity and the finding should be kept.",
      "adjustment": {
        "index": 2,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                345,
                346
              ],
              "why": "No external calls, only arithmetic in _getNumPlots"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                230,
                132,
                200
              ],
              "why": "Generic user functions (stake, unstake, farmPlots) call _getNumPlots"
            }
          ]
        },
        "A_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                78,
                79,
                80
              ],
              "why": "PRICE_PER_PLOT is set by external config—may be owner or small multisig"
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                51,
                81
              ],
              "why": "No timelock/multisig check or mitigation enforced in code"
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                347,
                142,
                230,
                176,
                201
              ],
              "why": "If PRICE_PER_PLOT==0, all landlord-related user actions freeze"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "Division by zero due to unvalidated PRICE_PER_PLOT can render all core protocol functions unusable for all landlords, causing protocol-wide denial of service. Likelihood is medium as it can occur via accidental or malicious config update by a privileged role, which is not decentralized nor timelocked. This has high impact since it completely freezes staking, transfer, and farming operations.",
      "adjustment": {
        "index": 3,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "Severity upgraded to high since an unmitigated division-by-zero here bricks major protocol functions and all user assets are affected."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity 0.8.25 is used, which has overflow checks."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "accountManager.updatePlayer is a call to an external contract that could be malicious."
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                292,
                293,
                294
              ],
              "why": "Writes to toilerState and plotMetadata occur after the external call, meaning CEI is broken."
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                174,
                200
              ],
              "why": "No nonReentrant/mutex guard is present on stakeMunchable, unstakeMunchable, or transferToUnoccupiedPlot."
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310,
                292,
                293,
                294
              ],
              "why": "Both R_1 and R_2 are true: there are storage writes after an external call, breaking CEI."
            }
          ]
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "updatePlayer() is externally implemented and not internal-only."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                174,
                200
              ],
              "why": "Any user can access these staking functions via msg.sender after registration."
            }
          ]
        },
        "A_2": {
          "answer": "yes",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                174,
                200
              ],
              "why": "No timelock, no multisig, no pause guardian, and no reentrancy guard present."
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153,
                196
              ],
              "why": "Staking/unstaking enables NFT transfer and could cause losses or protocol manipulation if exploited."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "External calls to AccountManager enable re-entrancy before critical LandManager state is fully updated, breaking the CEI pattern. Since no reentrancy guard or mitigation is present, a malicious or compromised AccountManager can trigger re-entrant stake or unstake operations in a partially-updated state, enabling double-stake or theft scenarios. This results in high impact and medium likelihood due to the accessibility of the call and lack of protections.",
      "adjustment": {
        "index": 4,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "Severity is escalated to high due to the possibility of asset theft and critical state corruption without existing mitigations."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version 0.8.25 is used."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No external or untrusted contract call is made in transferToUnoccupiedPlot."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                214,
                293
              ],
              "why": "No storage write after a call to untrusted code on the same execution path."
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No explicit re-entrancy guard on transferToUnoccupiedPlot; but irrelevant due to no external calls."
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Function only updates internal storage, does not rely on calls to external addresses or delegatecall."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                203
              ],
              "why": "Function can be called by any user able to pass `_getMainAccountRequireRegistered(msg.sender)`."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                333,
                343
              ],
              "why": "Ownership is based on registrations and not a central privileged account."
            }
          ]
        },
        "A_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                136
              ],
              "why": "Permission checks exist; ownership of tokenId is enforced."
            }
          ]
        },
        "A_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "While state integrity error could result in farming loss, this function does not enable critical protocol manipulation like draining assets or mutating core configuration."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The bug creates state inconsistency between `plotOccupied` and `toilerState`, leading to incorrect farming logic and lost rewards for users, but does not enable theft or protocol takeover. Since the function is frequently used and the conditions are easily met, likelihood is high. Impact is medium due to disruption in user rewards, resulting in a 'High' final severity per the matrix.",
      "adjustment": {
        "index": 5,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "The issue's severity is rated as 'High' since it may consistently and significantly affect user rewards and data integrity, though it does not directly threaten funds or protocol control."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma is 0.8.25 at the top of the file."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                310
              ],
              "why": "No external call pattern in dirty flag logic."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                132,
                176
              ],
              "why": "Unprivileged users can call functions that trigger farming updates."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                132,
                176
              ],
              "why": "There is no centralized privileged role for farming updates, these are user actions."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                259,
                261
              ],
              "why": "No mitigation exists for the permanent dirty flag penalty."
            }
          ]
        },
        "A_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                259,
                261
              ],
              "why": "The impact is on user experience and rewards, not entire protocol manipulation."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The dirty flag creates a permanent penalty that disrupts user rewards unless the user takes a manual and potentially costly action. Since this is directly exploitable by normal usage and no mitigation exists, the likelihood is high and the impact is medium, leading to a Medium severity rating. The issue does not compromise core protocol safety but directly harms affected users' incentives and experience.",
      "adjustment": {
        "index": 6,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma solidity 0.8.25, so overflow auto-checks apply."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                133
              ],
              "why": "stakeMunchable is public and callable by any registered user."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The off-by-one error allows users to exceed the intended staked Munchable limit by one, which may disrupt intended game mechanics or protocol balance. Exploiting the error requires trivial effort for any staker, but the impact is limited to minor economic imbalance. Downgrade to Low severity is appropriate per the impact-likelihood matrix.",
      "adjustment": {
        "index": 7,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "Per-checklist, this issue is minor (Low impact) and easily triggered (Medium likelihood), resulting in Low severity."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286
              ],
              "why": "The vulnerability arises from integer wrapping during int256 to uint256 conversion, which is a form of overflow."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma specifies Solidity 0.8.25, which has built-in overflow checks except for explicit type casts."
            }
          ]
        },
        "O_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286
              ],
              "why": "The calculation explicitly casts a possibly negative int256 value to uint256, bypassing auto-checks and possibly resulting in a wrap."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                310
              ],
              "why": "No untrusted external calls are made after the arithmetic in _farmPlots."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                310
              ],
              "why": "All relevant state mutations happen safely and not after an external call."
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                310
              ],
              "why": "No reentrancy guard observed but irrelevant for this specific overflow context."
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233
              ],
              "why": "_farmPlots is internal and only called within the contract."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                230
              ],
              "why": "farmPlots is callable by any user and executes _farmPlots."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229
              ],
              "why": "Function is user-triggered, not by a privileged role."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286
              ],
              "why": "No mitigation or limits included on negative finalBonus or result of the conversion."
            }
          ]
        },
        "A_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286
              ],
              "why": "Exploit may yield excessive schnibbles but does not result in full protocol loss or critical control."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                310
              ],
              "why": "_farmPlots is an internal function not subject to user-controlled delegatecall."
            }
          ]
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The core finding concerns overflow/wrapping from casting negative int256 to uint256 due to unchecked negative bonus input in _farmPlots. Although the affected code is internal, the path is user-triggerable and can lead to excessive schnibbles accumulation but not full protocol compromise. This risk fits a Low impact, Medium likelihood profile, yielding a final Low severity.",
      "adjustment": {
        "index": 8,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "This is a valid edge-case overflow finding with limited scope; mitigation is recommended by adding appropriate bounds checking before conversion."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma indicates Solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                310
              ],
              "why": "No unchecked blocks or explicit bypasses"
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "`accountManager` calls update storage but do not call external/untrusted contracts with user-supplied addresses"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "No contract storage writes after external call within the same path"
            }
          ]
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "Call is not internal only; updates are via external contract"
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                230,
                248
              ],
              "why": "The external farmPlots() function can be called by any user"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                33,
                339
              ],
              "why": "AccountManager could be upgradeable, but risk here is not about privilege"
            }
          ]
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The finding highlights an inefficiency that increases gas costs but does not create any correctness or security risk. The impact is low because it only affects user transaction cost, but the likelihood is high as inefficiency occurs whenever multiple Munchables are farmed for the same landlord. According to the matrix, this results in 'medium' severity.",
      "adjustment": {
        "index": 9,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Severity elevated to 'medium' per the matrix for a low-impact, high-likelihood cost inefficiency. No removal is justified as this is not a duplicate, intentional, nor a tool false positive."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma solidity 0.8.25 used throughout."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                46,
                117
              ],
              "why": "Critical configuration is only set through internal or restricted functions."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                47,
                86
              ],
              "why": "Reconfiguration flow depends on an external config contract managed through access controls."
            }
          ]
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                51,
                87
              ],
              "why": "Finding is theoretical since misconfiguration only applies if ConfigStorage interface/enum is misused, which is a deployment/ops concern."
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The unclear use of storage keys in _reconfigure theoretically risks wrong parameter assignment, but relies on a separate configuration system and controlled upgrades. Without direct exploitability or path to funds, impact and likelihood are both low. It is prudent to track this as a low-severity issue for code clarity and audit trail.",
      "adjustment": {
        "index": 10,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "Not exploitable in isolation, but could introduce operational risks if configuration contract is faulty or misused. Marked low severity as a signal for improved code clarity and config interface hygiene."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25 -- uses Solidity >=0.8.0"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "stakeMunchable does not perform external calls except for safe ERC721 transfer to a known contract and emits events"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "No re-entrancy guard present on stakeMunchable"
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "CEI pattern not broken, as there are no untrusted external calls after important storage updates"
            }
          ]
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153
              ],
              "why": "ERC721 transferFrom to munchNFT (external)"
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                136
              ],
              "why": "Anyone can call stakeMunchable if requirements are met"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "Privilege is distributed by ownership of NFTs, not a centralised role"
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "No mitigating controls for this logical gap"
            }
          ]
        },
        "A_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "The gap could affect schnibble distribution, but does not trigger critical protocol manipulation"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                104,
                117
              ],
              "why": "Landlord plot metadata can be initialized later via triggerPlotMetadata() or updatePlotMetadata(); effect is a temporary reward misallocation but not a security exploit"
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The incomplete check could result in uninitialized landlords receiving no schnibble rewards until their metadata is set, but this only causes a temporary, user-correctable misallocation rather than a critical or permanent loss. The function is externally callable, but the consequences are minor and can be fixed by a landlord's subsequent initialization. Therefore, this is a low-impact and low-likelihood issue, with matrix severity 'Low'.",
      "adjustment": {
        "index": 11,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "This issue is not a critical vulnerability since it is recoverable and only causes a minor, temporary impact. Downgraded from 'Info' to 'Low' for accuracy."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248
              ],
              "why": "Finding is about loop variable type, not overflow in maths."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma specifies >=0.8.0."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248
              ],
              "why": "No unchecked or narrowing cast in relevant loop."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                310
              ],
              "why": "No external call transfer of control in affected loop."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233
              ],
              "why": "Function is internal; no user-targeted external call."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233
              ],
              "why": "_farmPlots is internal and invoked by known entrypoints."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141
              ],
              "why": "stakeMunchable reverts if more than 10 staked; loop cannot reach 255 iterations in practice."
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "Although using a uint8 loop counter with a uint256 array is a minor inconsistency, the number of staked entries is hard-capped at 10 elsewhere, so no practical issue arises. This is strictly a best-practices and future-proofing suggestion: the current implementation cannot overflow or misbehave. The severity is therefore assigned as 'low' per the matrix.",
      "adjustment": {
        "index": 12,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "The affected loop cannot exceed the uint8 limit due to enforced caps on staked tokens, so the code has no exploitable risk, but type consistency is still a valid minor concern."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "The pragma statement indicates Solidity 0.8.25 is used."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "transferToUnoccupiedPlot does not call untrusted external contracts."
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                220,
                222
              ],
              "why": "plotOccupied storage is written after function logic."
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200
              ],
              "why": "No reentrancy guard is present."
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200
              ],
              "why": "transferToUnoccupiedPlot is externally callable."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                204
              ],
              "why": "Function is externally callable by any user with their staked NFT."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200
              ],
              "why": "No mitigation (e.g., timelock/multisig) is required for user-level operations."
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                193,
                182,
                220,
                222,
                226
              ],
              "why": "Stale plotId could prevent users from unstaking and cause permanent loss of plot usability."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The missing update of plotId in toilerState after transferring a staked NFT causes critical state inconsistency, which can lock plots permanently or cause reward misallocations. This affects the core staking/unstaking functionality and is easily triggered by users. The impact is high as funds/NFTs can be rendered inaccessible, and the likelihood is medium since it requires user operations that are common in use.",
      "adjustment": {
        "index": 13,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "Severity is high as per the risk matrix and protocol impact. Not removable: confirmed root-cause and exploitability."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                345,
                346
              ],
              "why": "Division by zero is not an arithmetic overflow or underflow, but a separate error condition."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version is 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                345,
                346
              ],
              "why": "_getNumPlots does not transfer control to untrusted code; it only calls view functions on another contract."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                345,
                346
              ],
              "why": "_getNumPlots is an internal pure calculation."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                201,
                229
              ],
              "why": "Functions using _getNumPlots are public/external and callable by arbitrary users."
            }
          ]
        },
        "A_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                46,
                82
              ],
              "why": "PRICE_PER_PLOT is set via governance/config contract, and could be set by a centralized actor."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                78,
                79
              ],
              "why": "No in-contract guard to check nonzero value; relies on external configuration."
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                232,
                133,
                201
              ],
              "why": "Halting stakeMunchable and related functions can halt protocol usability."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "Division by zero in _getNumPlots due to a PRICE_PER_PLOT of zero can fully halt protocol functions essential for staking and plot management. This risk stems from an externally configurable value with no internal validation, making exploit or bricking feasible by a misconfigured or compromised config source. The issue has high impact and medium likelihood, resulting in high severity.",
      "adjustment": {
        "index": 14,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma specifies Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310,
                153,
                196
              ],
              "why": "External calls to accountManager.updatePlayer and munchNFT.transferFrom."
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                292,
                293,
                294,
                295,
                297,
                299
              ],
              "why": "Storage writes (toilerState, plotOccupied, etc.) after external calls."
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                12,
                132,
                174,
                200,
                229
              ],
              "why": "No nonReentrant modifier nor custom mutex used."
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153,
                196,
                301,
                310
              ],
              "why": "Both R_1 and R_2 are yes, so CEI is broken."
            }
          ]
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153,
                196,
                301,
                310
              ],
              "why": "Functions interact with external contracts, not internal only."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                132,
                174,
                200
              ],
              "why": "Functions are marked external and accessible without access restriction."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                12
              ],
              "why": "No mitigation (timelock, multisig, pause guardian) for these entry points."
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                174,
                200,
                229
              ],
              "why": "Manipulation could affect asset transfers and protocol state."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "Multiple state-mutating functions make external calls before internal updates and lack any nonReentrant or mutex protection, breaking the CEI pattern. These are callable by unprivileged users and could enable serious protocol manipulation if a malicious contract is used. The impact is high and likelihood is medium, yielding a severity of high.",
      "adjustment": {
        "index": 15,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity pragma 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                136
              ],
              "why": "Function is external, accessible by any registered user"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The bug is a classic off-by-one input validation flaw, permitting 11 instead of the intended 10 staked NFTs per account. This does not affect core protocol safety or allow loss of funds, but does slightly weaken a designed economic/gameplay constraint. Since the off-by-one check easily and reliably allows exceeding the intended limit, likelihood is high but impact is low, yielding medium severity.",
      "adjustment": {
        "index": 16,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma specifies Solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153,
                196
              ],
              "why": "Only direct ERC721 transferFrom calls; no trust boundary or code execution by external contract"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                174,
                200
              ],
              "why": "These functions are external and accessible by any account via transferFrom"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153,
                196
              ],
              "why": "The contract only supports transferFrom, not safeTransferFrom, so lost tokens require user error; this is an interoperability/stylistic issue rather than an exploit vector"
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "Although the contract does not implement the ERC721Receiver interface and thus cannot receive NFTs via safeTransferFrom, only direct transferFrom is supported, which does not enable an exploit but could cause accidental NFT loss or user confusion. This is a limited scope issue with low impact and likelihood, primarily affecting usability and best practices. The final severity is set to Low per the risk matrix.",
      "adjustment": {
        "index": 17,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "The finding is valid as a best practice/usability issue, not a critical security flaw; severity adjusted to Low in line with impact and likelihood."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma specifies Solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No external contract control transfer occurs in function"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "The function is externally callable and mutates state but doesn't only do internal calls"
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200
              ],
              "why": "No access control; any staker can call"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": null
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                203,
                204,
                214,
                293
              ],
              "why": "Directly affects reward allocation and state invariants"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The core bug is a broken invariant in critical reward/state accounting, not overflow or re-entrancy, and it is externally triggerable by any staker. This allows two tokens to be staked on the same plot and permanently corrupts both reward distribution and participation eligibility in farm logic. The high impact on core protocol accounting, combined with feasible exploitation, results in a matrix severity of High.",
      "adjustment": {
        "index": 18,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141,
                160
              ],
              "why": "The issue is an off-by-one staking limit bug, not overflow/underflow."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity pragma is 0.8.25, which includes auto-checks for arithmetic overflow."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                176
              ],
              "why": "Any player can call staking functions directly if properly registered."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141
              ],
              "why": "The staking limit check is off by one and does not enforce the intended maximum."
            }
          ]
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The off-by-one staking restriction bug allows a player to stake 11 Munchables, exceeding the intended limit of 10. This can break internal invariants and cause unexpected behavior or overflows in logic expecting a maximum of 10. Because it is feasible for any user and could disrupt protocol logic, the severity is judged as medium according to the matrix.",
      "adjustment": {
        "index": 19,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                282,
                283
              ],
              "why": "The bug centers on a multiplication that can overflow, causing arithmetic wrapping or reversion."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "The pragma is 0.8.25, so arithmetic overflows will revert by default."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                282,
                283
              ],
              "why": "The arithmetic is not in an unchecked block and does not use unsafe math, assembly, or narrowing casts."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                246,
                309
              ],
              "why": "If the overflow occurs, it will revert all farming, staking, and unstaking operations contract-wide."
            }
          ]
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                133,
                176,
                201,
                229
              ],
              "why": "No external contract call transferring control to an untrusted contract is involved in the vulnerable code path."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                292,
                293,
                294
              ],
              "why": "No storage writes after any external call, as there is no such call within the affected function segments."
            }
          ]
        },
        "R_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                246,
                309
              ],
              "why": "Re-entrancy guard status is not directly relevant; arithmetic failure is the root cause."
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                312
              ],
              "why": "All vulnerable math occurs internally, but is ultimately user-triggered via external entrypoints."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                133,
                176,
                201,
                229
              ],
              "why": "Unprivileged users can call the affected farming and staking/unstaking functions."
            }
          ]
        },
        "A_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                51,
                66,
                75
              ],
              "why": "Critical configuration is loaded directly from a potentially centralized configStorage contract."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                51,
                66,
                75
              ],
              "why": "No mitigation such as parameter bounds checking on `BASE_SCHNIBBLE_RATE` is enforced."
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                246,
                309
              ],
              "why": "This allows an admin or attacker to brick core protocol functionality."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                66,
                283
              ],
              "why": "Although Solidity >=0.8 reverts on overflow, the lack of input bounds allows bricking as a denial of service vector, so this is not an auto-checked FP."
            }
          ]
        },
        "F_6": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                312
              ],
              "why": "The vulnerable calculation is ultimately reachable from user-facing functions."
            }
          ]
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "An overflow in the `schnibblesTotal` calculation can revert all key farming and staking functions if the admin misconfigures or a malicious actor controls the config. Because the unchecked multiplication is performed on unbounded inputs, an erroneous setting can brick the contract for all users. The issue presents a protocol-wide denial of service, making the impact high and likelihood medium.",
      "adjustment": {
        "index": 20,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "Correct classification; this is a high-severity DoS vector, not a false positive, as it enables an admin or attacker to brick all user interactions."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity pragma 0.8.25 specified."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                51,
                53,
                54,
                56,
                57,
                59,
                60,
                61,
                62,
                63,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80
              ],
              "why": "No external untrusted code execution in the affected configuration logic."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                51,
                87
              ],
              "why": "_reconfigure is internal and configUpdated is only callable by ConfigStorage; no user input triggers critical call."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                89
              ],
              "why": "configUpdated is external but gated by onlyConfigStorage modifier."
            }
          ]
        },
        "A_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                89
              ],
              "why": "ConfigStorage could be an upgradeable central point, risk depends on control structure outside this contract."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                46,
                89
              ],
              "why": "No evident mitigation (such as timelock, multisig) on updates to configuration in the provided code."
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                51,
                89
              ],
              "why": "Config mis-setting can brick all user actions (no staking, no valid tax rates); this is protocol-critical."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "Critical parameters are loaded using keys meant for contract addresses, so a misconfiguration can disable all main user actions. Since this can brick protocol operation and there are no clear configuration update mitigations, impact is high and likelihood medium. This results in a final severity of high.",
      "adjustment": {
        "index": 21,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "This issue represents a single-point-of-failure with severe operational consequences if misconfigured and no robust on-chain mitigation is evident."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248
              ],
              "why": "Loop counter uses uint8 and staking length can exceed 255 in future edge-cases, making overflow relevant."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma specifies Solidity 0.8.25, which has built-in overflow checks."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248
              ],
              "why": "No unchecked block, inline assembly, or bypassing involved for the loop counter variable."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                310
              ],
              "why": "_farmPlots and the surrounding staking/farming logic involve no transfer of control to untrusted code."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                230,
                132
              ],
              "why": "Any unprivileged account can call farmPlots or stakeMunchable if registered."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3,
                248
              ],
              "why": "Solidity 0.8.25 is used, but the overflow checks on uint8 cause a revert (realistic DoS), not a false positive."
            }
          ]
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The use of a uint8 loop counter in _farmPlots creates a hard revert if munchablesStaked exceeds 255 due to future bugs or changes, producing a possible DOS for affected users. While this overflow is reverted and cannot be exploited for loss of funds or privilege escalation, it may prevent normal operation until corrected. The risk is limited and unlikely under present invariant checks, resulting in low impact and likelihood.",
      "adjustment": {
        "index": 22,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "Recommend using uint256 for the loop counter to future-proof against design changes that could allow more than 255 staked tokens per user, but current logic and revert conditions keep the severity low."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No arithmetic overflow or underflow; the issue is about timestamp updating."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma specifies Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No external call to untrusted code in transferToUnoccupiedPlot."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No storage writes after external call; function only updates internal state and emits events."
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Function affects only internal contract state and data."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                203
              ],
              "why": "Any registered user can call transferToUnoccupiedPlot."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No privileged role involved; function can be called by normal users."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No mitigation is needed because impact is purely user experience."
            }
          ]
        },
        "A_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No protocol-critical manipulation is enabled."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "This is a minor UX quirk with no security or funds impact."
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No external call or reentrancy risk present."
            }
          ]
        },
        "F_7": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Function operates only on contract internal state, not delegating to user-controlled code."
            }
          ]
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The finding describes a minor user experience issue in which no Schnibbles are earned if farmPlots is called immediately after transferring to a new plot. This does not affect protocol integrity or user funds and is not exploitable in any meaningful way. As such, it is classified as low impact, low likelihood, and severity low.",
      "adjustment": {
        "index": 23,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "This is a UX concern with no significant risk to assets or protocol invariants."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma specifies 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                46,
                93,
                105,
                117,
                132,
                174,
                200,
                229
              ],
              "why": "Most core functions are callable by any externally owned account without strong access control."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                12
              ],
              "why": "No single-owner privileged role for these parameters—the issue impacts all system users equally."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                51,
                66,
                69,
                72,
                75,
                78
              ],
              "why": "No mitigations are present to verify the correctness of parameter loading in _reconfigure."
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                66,
                69,
                72,
                75,
                78
              ],
              "why": "Failure to load correct configuration values enables system-wide malfunction, directly impacting protocol economics."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The configuration loading logic is critically flawed, using keys intended for addresses to fetch essential numerical values. This exposes the entire system to severe malfunction, undermining land taxation, plot allocations, reward mechanisms, and more. Given the broad protocol impact and feasibility of exploitation, the severity is high.",
      "adjustment": {
        "index": 24,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "A misconfiguration of this nature can break protocol economics across all users and functions—it requires urgent remediation."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma specifies Solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                174,
                132,
                200
              ],
              "why": "Public/external access, no onlyOwner or role check for these user functions"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "If a landlord reduces plots, staked Munchables on invalid plots become 'dirty' and stop earning rewards with no alert to the user, creating risk of confusion and unrecoverable perceived rewards. The contract does not notify users or provide proactive mitigation, and users must unstake to discover the issue. This affects user experience and trust, but does not impact protocol security or funds directly.",
      "adjustment": {
        "index": 25,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Severity is medium since the issue leads to unclear user state and reward loss, but does not break protocol logic or allow theft."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286
              ],
              "why": "Overflow/underflow from casting negative int256 to uint256 following bonus application"
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                285
              ],
              "why": "Manual casting and arithmetic using int256 and uint256 bypasses Solidity 0.8 standard arithmetic checks"
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                248,
                310
              ],
              "why": "No external call or contract control transfer associated with the vulnerable math"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                230
              ],
              "why": "External users can trigger farmPlots and thus the vulnerable call chain"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233
              ],
              "why": "No mitigating access controls—core logic open to all users"
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                176,
                132
              ],
              "why": "Breakage of reward accounting can prevent un-staking and core game state transition"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The finalBonus calculation can produce a large enough negative value to make schnibblesTotal negative, and casting this to uint256 will revert. As this is core to reward claiming, staking, and unstaking, failure will lock users out of standard operations, causing severe protocol-wide breakage. This is a high impact, medium likelihood arithmetic error due to bypass of Solidity's safety checks.",
      "adjustment": {
        "index": 26,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "Severity high due to the possibility of rendering core staking mechanics unusable, with standard arithmetic checks bypassed by explicit casting."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma Solidity 0.8.25 or higher provides automatic overflow checks"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                136
              ],
              "why": "stakeMunchable is external with no onlyOwner or equivalent protection; called by any registered/main account."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The limit check in stakeMunchable is off-by-one, allowing users to stake 11 Munchables instead of 10 due to use of '>'. This could result in inconsistent or unexpected behavior, but does not constitute a critical or protocol-wide failure. The issue is easy to trigger by any user, but the impact is limited in scope.",
      "adjustment": {
        "index": 27,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Change the check from '> 10' to '>= 10' to enforce the intended maximum."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248
              ],
              "why": "Loop variable uses uint8, risking overflow if staked.length ever exceeds 255."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma is 0.8.25, so Solidity ≥0.8.0 is enforced."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248
              ],
              "why": "No unchecked block, narrowing cast, or assembly for this math."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                311
              ],
              "why": "The loop is internal and runs only on memory array; no control transfer or external reentrancy risk."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "Function is internal and not user-callable directly."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                231
              ],
              "why": "Entrypoint farmPlots() is external but limited by staked array size, which is strictly enforced elsewhere to ≤11."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141
              ],
              "why": "Hard check ensures staked.length ≤ 11, making overflow impossible unless code changes significantly."
            }
          ]
        },
        "F_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3,
                248
              ],
              "why": "Solidity ≥0.8.0 with no unchecked or narrowing cast; overflow here reverts."
            }
          ]
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "auto_checked",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "Although a uint8 loop counter can theoretically overflow above 255, the contract enforces a strict staked array length ≤ 11, and Solidity 0.8.25's safety checks make any overflow here revert. In practice, this makes the issue an auto-checked, unexploitable scenario. The finding can be removed as it is not a true vulnerability under current constraints.",
      "adjustment": {
        "index": 28,
        "new_severity": "info",
        "should_be_removed": true,
        "comments": "Removable as 'auto_checked': The hard upper bound on staked munchables and Solidity's built-in checks make a uint8 overflow in the loop counter unreachable."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma specifies Solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                313,
                331
              ],
              "why": "The array manipulation is internal and does not result in an external call."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                313,
                331
              ],
              "why": "No re-entrancy guard is needed since there are no external calls."
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                313,
                331
              ],
              "why": "The function is strictly internal logic with no external delegatecall."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                174,
                332
              ],
              "why": "Unstaking can be called by users directly via unstakeMunchable, which is external."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                177
              ],
              "why": "Controlled individually per user; not privileged role."
            }
          ]
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                313,
                331
              ],
              "why": "Changing array order does not break core logic and only introduces potential minor UI confusion."
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The swap-and-pop pattern only changes the order of the staked array, introducing low risk of user confusion but no security or functional impact. Core contract behavior and asset safety remain unaffected. The issue is minor and rated as Low severity per risk matrix.",
      "adjustment": {
        "index": 29,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "Low severity; purely a UI/integration consideration, no security or functional breakage."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                248
              ],
              "why": "Unprivileged users can reach _farmPlots via farmPlots()"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The array index access in _farmPlots could revert if NFT attributes or landlord metadata are out-of-bounds, causing a denial of service for users with unexpected metadata. Although this is likely enforced by external managers, explicit validation in this contract would improve safety. As only transaction reverts are possible (not theft or funds loss), impact is low but likelihood is medium due to reliance on external input validation.",
      "adjustment": {
        "index": 30,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma 0.8.25 ensures auto-revert for overflows."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "stakeMunchable does not external call untrusted code."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                133
              ],
              "why": "Function is external and used in contract interface."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "stakeMunchable is external, only checks msg.sender registration."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The missing check for landlord plot metadata initialization can allow an unintentionally low tax rate for landlords, resulting in lost or incorrect incentives. However, this does not directly compromise contract integrity or security, but creates potential for protocol misalignment and mild economic loss. The impact is thus 'low', with 'medium' likelihood since any user may exploit the missing validation until it is fixed.",
      "adjustment": {
        "index": 31,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "Low-severity business logic flaw that could result in landlords missing expected tax income due to uninitialized metadata, but without critical protocol or fund safety implications."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma 0.8.25 is used"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "accountManager.updatePlayer is an external call via interface"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                292,
                293,
                295
              ],
              "why": "toilerState and plotMetadata are updated after the call to accountManager.updatePlayer"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [],
              "why": "No nonReentrant guard or mutex present"
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229
              ],
              "why": "farmPlots() is external and not access-restricted"
            }
          ]
        },
        "A_2": {
          "answer": "yes",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": null
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                174,
                200
              ],
              "why": "Unprotected reentrancy could lead to NFT/property loss or protocol manipulation"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The _farmPlots function performs external calls to accountManager.updatePlayer before updating critical storage, and does so without a reentrancy guard, leaving the protocol vulnerable to reentrancy attacks that could manipulate plots or NFTs. These calls occur in a user-accessible execution path, violating CEI and exposing high risk. This issue is high impact and trivially exploitable if accountManager is untrusted.",
      "adjustment": {
        "index": 32,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                204,
                205,
                210,
                214,
                220,
                292,
                293,
                294
              ],
              "why": "No external calls to untrusted contracts within transferToUnoccupiedPlot, only state updates and internal calls"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                214,
                220,
                292,
                293,
                294
              ],
              "why": "No storage writes after an external call in this function"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No explicit reentrancy guard on transferToUnoccupiedPlot"
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200
              ],
              "why": "Function operates only on internal state and token transfers, no delegatecall or external contract address control"
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200
              ],
              "why": "Function is externally callable by anyone with a staked munchable"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                214,
                220
              ],
              "why": "Only affects internal plot and reward accounting, not protocol-wide controls"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                214,
                220,
                293
              ],
              "why": "Inconsistent state can block reward and transfer logic—this has a feasible impact"
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200
              ],
              "why": "transferToUnoccupiedPlot is internally consistent and not a reentrancy risk, call path is internal-only for user state update"
            }
          ]
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The missing update to toilerState[tokenId].plotId in transferToUnoccupiedPlot can cause reward misallocation and block further gameplay operations due to internal state inconsistency. The function is externally accessible and can be called by any user with a staked munchable, but does not directly enable critical protocol control loss. The impact is medium as the issue disrupts intended protocol function (not permanent loss), and likelihood is medium because any user executing this path triggers the bug.",
      "adjustment": {
        "index": 33,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Severity is medium based on the 3x3 matrix for medium impact and likelihood; issue is not a duplicate or design intent, and its effect is user-facing disruption, not catastrophic protocol loss."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                309
              ],
              "why": "No external call to untrusted code in the array indexing"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                230
              ],
              "why": "Function farmPlots() is external and can be called by any user"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": null
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "Uncaught revert here breaks farming for all users"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "Unchecked array indexing in _farmPlots allows any out-of-bounds NFT attribute or array misconfiguration to cause a revert, which can block all users from interacting with the core farming function. Since farming is critical for protocol utility, the potential denial of service has high impact. It is feasible that a single malicious or broken NFT/bonus config could trigger this issue.",
      "adjustment": {
        "index": 34,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "The DoS potential from unchecked indexing is considerable due to user-controlled data and on-chain array config. Proper bounds checks or revert guards should be added to ensure safe access."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma specifies Solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "No unchecked, no narrowing cast, standard division"
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "_getNumPlots is internal and does not transfer control"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                345,
                346
              ],
              "why": "_getNumPlots is an internal view function"
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                175,
                201,
                229
              ],
              "why": "User functions indirectly trigger _getNumPlots"
            }
          ]
        },
        "A_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                78
              ],
              "why": "PRICE_PER_PLOT can be set by a privileged party via config"
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": null
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "Failure blocks all staking/farming, causing complete DoS"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "Division by zero in _getNumPlots will revert and cause denial-of-service for protocol actions relying on plot allocation. Since privileged configuration can lead to this state, the impact is high. The likelihood is medium, as it depends on misconfiguration or malicious update.",
      "adjustment": {
        "index": 35,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "This finding is valid and critical, as a zero PRICE_PER_PLOT fully blocks key protocol actions due to revert."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version pragma is 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                41,
                233,
                132,
                174,
                200
              ],
              "why": "No low-level or external contract call in modifier; _farmPlots only updates local/accountManager state and emits events"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                310
              ],
              "why": "_farmPlots completes storage writes before scoring the rest of the parent function"
            }
          ]
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                174,
                200
              ],
              "why": "No owner/role restriction on stake/unstake/transferToUnoccupiedPlot; accessible to any registered user"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                337
              ],
              "why": "Account manager lookup indicates non-centralized user action"
            }
          ]
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                174,
                200
              ],
              "why": "DoS blocks staking/unstaking, significantly disrupting core management"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "Forcing _farmPlots in critical staking functions means any bug or revert within _farmPlots can indefinitely block user actions, constituting a direct DoS for plot management. This affects all users, making the impact significant, and is easily triggered if _farmPlots fails. As access is open and the effect is immediate, severity is high per the matrix.",
      "adjustment": {
        "index": 36,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version 0.8.25 specified."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "No external call to untrusted code inside stakeMunchable; only interacts with known interfaces."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                160,
                161,
                162
              ],
              "why": "All storage writes occur before any ERC721 transfer."
            }
          ]
        },
        "R_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                136
              ],
              "why": "No reentrancy guard, but external call is after all important storage writes."
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "No access restriction; any account can call stakeMunchable."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The off-by-one error in the staking cap allows one extra munchable above the intended limit, but does not compromise core protocol security or user funds. Impact is limited to a minor game mechanic abuse and is thus low, while likelihood is high as it's trivially exploitable. Severity is medium by the matrix.",
      "adjustment": {
        "index": 37,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Severity raised to medium per matrix due to trivial exploitability, but impact is limited to staking count enforcement."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286
              ],
              "why": "Overflow occurs when casting a negative int256 result to uint256 after the schnibbles bonus calculation."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "The pragma indicates Solidity 0.8.25 which reverts on overflows except in type-casts between signed/unsigned or width changes."
            }
          ]
        },
        "O_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                285
              ],
              "why": "Narrowing cast from int256 (potentially negative) to uint256 wraps on negative values, bypassing Solidity's checked arithmetic."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                286,
                287,
                289,
                290,
                296,
                297,
                299,
                300
              ],
              "why": "The overflow disrupts core accounting, dooms farming, and propagates to tax and protocol-wide balance calculations."
            }
          ]
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                132,
                174,
                200
              ],
              "why": "Any unprivileged account can invoke farming or NFT stake/unstake logic and trigger the bug."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                132,
                174,
                200
              ],
              "why": "User-level action; not a privileged function."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286
              ],
              "why": "No checks exist to prevent negative/overflow outcomes in bonus calculation."
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286,
                287
              ],
              "why": "Enables permanent denial-of-service and loss of protocol liveness on affected accounts."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "A negative schnibbles bonus permits a type-cast induced overflow, allowing any user to permanently break their farming and related logic with a single NFT. No privilege is required, the failure locks protocol state and impacts funds. With high impact and high likelihood, this is a critical vulnerability.",
      "adjustment": {
        "index": 38,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "Severity remains High because the overflow can be triggered by any user and results in DOS and loss of funds/protocol function."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma specifies Solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "accountManager.updatePlayer() is a state-changing external call to a contract in storage"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                292,
                293,
                294
              ],
              "why": "State (toilerState, plotMetadata, etc.) updated after the external call in _farmPlots or in functions using forceFarmPlots"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [],
              "why": "No nonReentrant or mutex pattern present"
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310,
                292,
                293,
                294
              ],
              "why": "Both external call and post-call state writes are present, breaking CEI"
            }
          ]
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "accountManager is an external contract, not internal only"
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                174,
                200
              ],
              "why": "stakeMunchable, unstakeMunchable, transferToUnoccupiedPlot are externally callable"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                12,
                32,
                33
              ],
              "why": "No evidence that only a privileged role can access or that upgradeability is restricted to a single EOA"
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [],
              "why": "No pause guardian or time lock on critical farm modifier"
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153,
                196
              ],
              "why": "Staked NFT loss/manipulation, corruption of protocol state, or freezing possible"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [],
              "why": "Neither reentrancy guard nor CEI is enforced"
            }
          ]
        },
        "F_7": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [],
              "why": "Externally accessible and interacts with untrusted contracts"
            }
          ]
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "Untrusted, state-changing external calls in `_farmPlots` can be re-entered due to absence of any re-entrancy guard or strict CEI, exposing core mappings and storage to corruption or protocol lockup. The functions wrapped by `forceFarmPlots`, including staking and unstaking, can be re-entered by a malicious `accountManager`. This could lead to loss of assets or denial of service, so the risk is high impact and medium likelihood.",
      "adjustment": {
        "index": 39,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "Severity is raised to high given the protocol-wide consequences of state corruption or asset lockup in the absence of both CEI compliance and re-entrancy guards."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma specifies Solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                174,
                200
              ],
              "why": "No external calls to untrusted code in the loop or staking function"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                133
              ],
              "why": "External stakeMunchable is callable without privileged role"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                133
              ],
              "why": "No single privileged role; anyone can call"
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                133,
                141
              ],
              "why": "Missing robust enforcement of staking cap"
            }
          ]
        },
        "A_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                133
              ],
              "why": "Only user’s own staking array is affected; no protocol-wide control"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The off-by-one error in staking limit enforcement allows users to exceed the intended array size, making possible a self-inflicted DoS if the array length exceeds 255 due to the uint8 loop index. This issue is user-triggered and only affects the individual account, so the impact is low but not purely theoretical as the exploit path is feasible. As there is no privileged control or overflow bypass, the matrix yields low severity.",
      "adjustment": {
        "index": 40,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93,
                100,
                167,
                293
              ],
              "why": "Issue is not an arithmetic overflow/underflow, but due to default struct initialization."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma is 0.8.25; auto-overflow checks are present."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                175,
                200
              ],
              "why": "No external call transferring control to untrusted code in the vulnerable logic."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "Anyone can call stakeMunchable; no privilege check."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                167
              ],
              "why": "No mitigation to check or enforce nonzero tax rate at staking."
            }
          ]
        },
        "A_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                167
              ],
              "why": "Results in temporary unfair advantage, not protocol-critical manipulation."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                167
              ],
              "why": "Attack is feasible if initialization never occurs."
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The flaw allows public users to farm with zero tax on uninitialized landlords, bypassing minimum tax constraints due to missing initialization checks. This is not core protocol compromise but offers unfair economic advantage to attackers. The impact is low, likelihood is medium, and removal is not warranted.",
      "adjustment": {
        "index": 41,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "Findings reflect a real, though minor, economic exploit stemming from uninitialized metadata. Severity aligns with matrix."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma version 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No external calls except to accountManager, which is a controlled contract"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No re-entrancy guard in transferToUnoccupiedPlot"
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Function is external and may affect external state"
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Function is externally callable by any account with a staked token"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No access control or safety mitigation"
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Enables critical state manipulation of staked assets and rewards"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The function fails to update critical state in `toilerState`, causing reward miscalculation and conflicting occupancy, directly impacting protocol correctness. Any user with a staked token can invoke the function, leading to inconsistent states and misuse. The impact is high due to loss of accounting integrity, and feasibility is medium since it requires specific sequencing or active exploitation.",
      "adjustment": {
        "index": 42,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "Matrix maps high-impact (asset or accounting loss) and medium likelihood (non-trivial but feasible) to 'high' severity."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286,
                287
              ],
              "why": "Conversion from negative int256 to uint256 after arithmetic on schnibblesTotal can underflow and wrap"
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25, so uses checked arithmetic for native ops"
            }
          ]
        },
        "O_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286,
                287
              ],
              "why": "Manual int256 arithmetic and unchecked type conversion to uint256"
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                285,
                286,
                287
              ],
              "why": "Overflow can lead to protocol-wide monetary loss by minting huge schnibbles"
            }
          ]
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                230,
                231
              ],
              "why": "farmPlots() is external and callable by any user"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                284,
                287,
                310
              ],
              "why": "No access or circuit breaker to prevent exploitation, manipulation possible by user input"
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                297,
                299,
                301,
                310
              ],
              "why": "Allows arbitrary schnibbles rewards, causing possible draining/creation of protocol tokens"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "An integer underflow in schnibblesTotal occurs if finalBonus is below -100, resulting in a negative value cast to uint256 as a massive positive reward. The vulnerability is accessible to any user and can cause protocol-wide exploitation by minting arbitrary schnibbles. No mitigations or access controls prevent abuse, raising both impact and likelihood to high.",
      "adjustment": {
        "index": 43,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "Finding is valid and severity is high due to the potential for infinite schnibbles minting by any user."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma indicates Solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                46,
                89,
                93,
                105,
                117,
                132,
                200,
                229
              ],
              "why": "These functions are all externally accessible and manipulate parameters set in _reconfigure"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93,
                105,
                117,
                132,
                200,
                229
              ],
              "why": "No evidence that these externally accessible functions are restricted to central parties. Access controlled by onlyConfiguredContract, but some are public (e.g., updateTaxRate is not restricted to owners)."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                46,
                93,
                105,
                117,
                132,
                200,
                229
              ],
              "why": "No evident mitigation for misuse of misconfigured parameters."
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                95,
                96,
                110,
                123,
                167,
                294
              ],
              "why": "Incorrect tax rate and plot calculation could impact staking, tax computation, and business logic, affecting protocol-wide behavior."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The use of incorrect storage keys for retrieving configuration values may cause core protocol parameters to be set to invalid values, potentially breaking vital protocol logic for all users. This is highly impactful as it affects tax rates, plot allocation, and core staking mechanisms, and any user can interact with functionality based on these flawed parameters. While exploitation is not trivial and focuses on configuration errors, the protocol-wide ramifications justify a High severity under the matrix.",
      "adjustment": {
        "index": 44,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "Incorrect storage key use can set critical contract parameters to erroneous values, impacting core protocol security and usability for all users."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma indicates Solidity >=0.8.0 with automatic overflow checks"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153
              ],
              "why": "stakeMunchable calls munchNFT.transferFrom, which can be untrusted"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                155,
                161,
                162,
                163,
                167,
                168,
                169
              ],
              "why": "State (plotOccupied, munchablesStaked, munchableOwner, toilerState) updated after the external call"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "No nonReentrant guard or mutex pattern present on stakeMunchable"
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153
              ],
              "why": "transferFrom is an external call (IERC721)"
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "stakeMunchable is external, accessible to unprivileged callers"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "No pause-guardian or other mitigations on external reentrancy risk"
            }
          ]
        },
        "A_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "Reentrancy could only affect local user state, not protocol-wide logic"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The stakeMunchable function violates the CEI pattern and lacks a reentrancy guard, allowing reentrancy if the ERC721 token is malicious. However, the impact is limited to the caller's own state and does not threaten protocol-wide safety. Given the restricted impact and moderate exploitability, the issue is rated Low severity.",
      "adjustment": {
        "index": 45,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "Matrix: low impact (only individual state impacted) × medium likelihood (possible with malicious token). Finding should be fixed but is not protocol-critical."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                273,
                279
              ],
              "why": "The core issue is unchecked array bounds, leading to potential panics, not overflow/underflow."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract is explicitly compiled with Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                230,
                233
              ],
              "why": "The external farmPlots() is callable by any account and routes to _farmPlots."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                230
              ],
              "why": "No privileged role required to call the vulnerable code path."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                248,
                273,
                279
              ],
              "why": "There are no explicit mitigations (e.g., bounds checks) on the indices before array access."
            }
          ]
        },
        "A_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                273,
                279,
                282
              ],
              "why": "Impact is denial-of-service for reward farming, not critical protocol manipulation."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "Unchecked array access in _farmPlots can allow a malicious or malformed attribute to trigger a revert, causing a denial-of-service for legitimate users. The call path is externally accessible, and no mitigating checks are present. The bug does not risk protocol-wide loss, but it can block reward farming, justifying medium/medium and a final severity of Medium.",
      "adjustment": {
        "index": 46,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                345,
                346
              ],
              "why": "Division by zero is not an arithmetic overflow or underflow; it simply causes a revert."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract is compiled with Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                345,
                346
              ],
              "why": "The function does not transfer control to untrusted code."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                229
              ],
              "why": "Any account can trigger _farmPlots, which uses _getNumPlots."
            }
          ]
        },
        "A_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                46,
                78
              ],
              "why": "PRICE_PER_PLOT is set via configStorage, which is controlled by a privileged admin."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                78
              ],
              "why": "No time lock, multisig, or mitigation for misconfiguration of critical parameter."
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                346
              ],
              "why": "A division by zero can halt critical functions, potentially locking user funds."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "Division by zero via misconfigured PRICE_PER_PLOT is feasible due to direct privileged admin control and lack of mitigation, and would break key protocol functions, potentially locking user funds. Since there are no inherent overflow/integer safety checks relevant and access mitigation is missing, the impact is high and likelihood is medium. Thus, the issue rates high severity on the matrix.",
      "adjustment": {
        "index": 47,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "Consider adding an explicit check to prevent PRICE_PER_PLOT being zero (both on set and use) or enforcing a reasonable default in storage logic."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                46,
                89,
                117,
                133
              ],
              "why": "Initialization and reconfiguration functions are only callable by configured privileged contracts or contract owner. Only external entrypoints are protected."
            }
          ]
        },
        "A_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                46,
                89
              ],
              "why": "initialize and configUpdated access protected by contract/discernible privileged access."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                51
              ],
              "why": "No explicit multi-sig, timelock, or similar mitigation on reconfigure."
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                46,
                51
              ],
              "why": "Setting zero addresses for core components can break main protocol functionality."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "low",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "Misconfiguration of external contract addresses can cause critical components of the protocol to become non-functional, leading to a system-wide outage or loss of essential capabilities. While access to reconfiguration is privileged, the absence of zero-address checks creates the risk that a simple admin error can cause a high-impact issue, though it is unlikely due to restricted permissions. As per the impact/likelihood matrix, this results in medium severity.",
      "adjustment": {
        "index": 48,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Issue warrants addition of require(address != address(0)) checks for external dependencies during reconfiguration and initialization."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma is 0.8.25, which auto-checks overflow"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "stakeMunchable is external and can be called by any registered account"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141
              ],
              "why": "The bug only allows one extra Munchable to be staked (11 instead of 10); does not create a feasible exploit or security risk."
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The off-by-one logic error allows users to stake one more Munchable than intended, having negligible security or financial impact. Exploiting this bug only slightly violates intended business logic without escalating to loss or privilege manipulation. As there is no significant risk nor a realistic attack scenario, the severity is low.",
      "adjustment": {
        "index": 49,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "Bug is a minor logic flaw that allows staking 11 instead of 10 Munchables; no exploit chain nor meaningful impact."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                268,
                301,
                310
              ],
              "why": "External contract calls inside loop: nftAttributesManager.getImmutableAttributes and accountManager.updatePlayer"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                292,
                293,
                310
              ],
              "why": "Storage writes after external calls in the loop (toilerState and accountManager)"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "No re-entrancy guard present on _farmPlots"
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                311
              ],
              "why": "CEI broken: external call before state update"
            }
          ]
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                230
              ],
              "why": "farmPlots() is external and callable by any user"
            }
          ]
        },
        "A_2": {
          "answer": "yes",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": null
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                142,
                160,
                196,
                230,
                248,
                310
              ],
              "why": "Inability to farm/un-stake due to DoS is critical to user participation"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "low",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The loop in _farmPlots() is externally callable and can perform an unbounded number of operations, with external calls and storage writes after these calls, breaking CEI and risking denial-of-service if gas limits are reached. No reentrancy guard or mitigating controls are present. While impact is high if triggered, likelihood is low due to the uint8 loop limit and practical staked token constraints, resulting in medium overall severity.",
      "adjustment": {
        "index": 50,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma specifies Solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                89,
                117
              ],
              "why": "Config updates happen via onlyConfigStorage/onlyConfiguredContract, not unprivileged"
            }
          ]
        },
        "A_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                51,
                66,
                69,
                72,
                75,
                78,
                81,
                82
              ],
              "why": "Configurable parameters come directly from ConfigStorage contract, which may be admin/EOA-controlled"
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                51,
                66,
                69,
                72,
                75,
                78,
                81
              ],
              "why": "No time-lock, multisig, or decentralized governance shown for ConfigStorage changes"
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                66,
                69,
                72,
                75,
                78
              ],
              "why": "Changing these parameters can directly affect core protocol economics and user funds"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The protocol's core economic parameters rely fully on values in a potentially centralized ConfigStorage contract, making admin compromise or malicious changes highly impactful. No evidence of decentralized controls or timelocks on this configuration increases risk. As such, the centralization risk rises to High severity according to the impact/likelihood matrix.",
      "adjustment": {
        "index": 51,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "Info severity in the finding underestimates the real protocol risk; the central admin can affect core user-facing values and protocol safety."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                282,
                283,
                284,
                285,
                286
              ],
              "why": "The bug is fundamentally due to arithmetic overflow/underflow from casting a negative int256 value to uint256."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "The contract specifies pragma solidity 0.8.25, so it is compiled with Solidity >= 0.8.0."
            }
          ]
        },
        "O_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                285
              ],
              "why": "Unchecked casting from negative int256 to uint256 bypasses Solidity's auto-revert on overflow."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                283,
                285
              ],
              "why": "This overflow can be exploited to inflate schnibble rewards, potentially destabilizing protocol economics."
            }
          ]
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                310
              ],
              "why": "No control transfer to untrusted code."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                230
              ],
              "why": "Any unprivileged (registered) account can execute farmPlots and trigger the vulnerability."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                230
              ],
              "why": "Exploit does not depend on privileged roles; it is public."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": null
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                285,
                297,
                299,
                301,
                310
              ],
              "why": "Arbitrary inflation of schnibbles constitutes critical protocol manipulation."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "Anyone can exploit the signed-to-unsigned overflow in _farmPlots to mint an enormous schnibbles reward, as a negative finalBonus less than -100 yields a negative int256 that wraps to a huge uint256. This results in critical protocol manipulation, meeting both high impact and high likelihood criteria. No mitigation, privilege, or intentional design is present to justify lowering or removing the finding.",
      "adjustment": {
        "index": 52,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "No arithmetic overflow/underflow, only division."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity 0.8.25 is used; division by zero always reverts."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "No unchecked or assembly bypass for arithmetic; division is safe except when divisor is zero."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "_getNumPlots contains no external call or untrusted control flow."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                345,
                346
              ],
              "why": "Internal view function; _getNumPlots is only called internally."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                229
              ],
              "why": "stakeMunchable and farmPlots are callable by external accounts."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                78,
                346
              ],
              "why": "PRICE_PER_PLOT is set via config contract, which is upgradable."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                78,
                346
              ],
              "why": "No hardcoded guard or preventative check for PRICE_PER_PLOT == 0 in _getNumPlots or config."
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "Setting PRICE_PER_PLOT to 0 DoSes all staking/farming, which is protocol critical."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "Division by zero in _getNumPlots will immediately revert all dependent staking and farming operations, causing a protocol-wide DoS. While only an admin can set PRICE_PER_PLOT to zero, no built-in safeguard prevents this, representing a high-impact but medium-likelihood issue. To mitigate, a check should guard against division by zero.",
      "adjustment": {
        "index": 53,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25 ensures >=0.8 safety"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No external/low-level calls in transferToUnoccupiedPlot except for events"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                214,
                220,
                292
              ],
              "why": "Writes to storage after logic are present"
            }
          ]
        },
        "R_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No external call to untrusted code"
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200
              ],
              "why": "Function is external, not internal/private only"
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200
              ],
              "why": "transferToUnoccupiedPlot is external and callable by owner of tokenId"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No ability for critical protocol manipulation"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Function is external"
            }
          ]
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The bug allows the `plotId` stored in `toilerState` to become stale after a plot move, leading to inconsistent state and events. While this does not enable theft or protocol-wide loss, it can cause confusion, incorrect displays, or off-chain indexing issues. Exploitation is feasible by any user performing the move, but the effect is limited in impact.",
      "adjustment": {
        "index": 54,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "Confirmed as a valid low-severity logic issue causing state inconsistency but with limited impact."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141
              ],
              "why": "The bug is a logic error (off-by-one) in a stake count limit, not arithmetic overflow."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version 0.8.25 as per pragma."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                153
              ],
              "why": "No control is transferred to untrusted code; only ERC721 contract but no storage writes after token transfer in this context."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                154,
                160,
                161,
                162,
                163
              ],
              "why": "State updates occur after external transfer, but plotOccupied and related state is only set to reflect the new state; risk not related to re-entrancy."
            }
          ]
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "Function is external, accessible by any user."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "No access control restricts use of stakeMunchable; any registered player can call it."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141
              ],
              "why": "No documentation or comments stating that exceeding the stake limit is intentional."
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The finding is a logic flaw allowing one extra stake due to an off-by-one error in the limit check, permitting up to 11 staked tokens despite a presumed cap of 10. While this does not threaten protocol integrity or funds, it weakens stated restrictions and could be used by any unprivileged user. Given the ease of exploitation but limited protocol impact, this rates 'medium' severity per the matrix.",
      "adjustment": {
        "index": 55,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "The off-by-one bug allows an 11th stake, creating a minor rules violation but does not risk protocol funds or introduce privilege escalation."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                259,
                260,
                283
              ],
              "why": "Underflow may occur if lastUpdated < lastToilDate during subtraction"
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25 enforces checked arithmetic"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                283
              ],
              "why": "No unchecked block, assembly, or narrowing cast in the underflow logic"
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                176,
                232,
                233
              ],
              "why": "Underflow reverts block all calls using forceFarmPlots, causing NFTs to be trapped"
            }
          ]
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                176,
                230,
                132
              ],
              "why": "Any registered user can stake or unstake via external functions"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                134,
                177
              ],
              "why": "No privileged role present in affected logic"
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                259,
                260
              ],
              "why": "No mitigation or validation to prevent underflow or to enable recovery"
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                176,
                200
              ],
              "why": "This bug can permanently lock user-held NFTs"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                259,
                283
              ],
              "why": "No automatic overflow protection; underflow causes revert"
            }
          ]
        },
        "F_6": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233
              ],
              "why": "Function is reachable from external entrypoints"
            }
          ]
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "This finding describes a real, high-impact logic bug: underflow in the farming loop can DOS unstaking and permanently trap NFTs. Solidity 0.8.25's checked arithmetic guarantees a revert, making the exploit path reliable if a landlord reduces locked plots without updating metadata. There is no mitigation in place or business justification for this edge case, warranting a 'High' severity.",
      "adjustment": {
        "index": 56,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "Bug causes denial-of-service for NFT withdrawals through reliable, user-triggerable underflow; impact and likelihood both meet 'high' matrix criteria."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity 0.8.25 is used."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "No external calls to untrusted code appear in the affected logic; only calls to ERC721 `transferFrom` and internal updates."
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                155,
                160,
                161,
                162,
                163
              ],
              "why": "Storage updates follow transferFrom, but no external call after."
            }
          ]
        },
        "R_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                136
              ],
              "why": "Function is protected by state and not subject to basic reentrancy—no reentrancy guard needed here."
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153
              ],
              "why": "ERC721 external call, not internal only."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "Any user may call `stakeMunchable`, only restricted by msg.sender registration."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                335,
                339
              ],
              "why": "No indication of a centralized privileged role controls the staking logic."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                133
              ],
              "why": "No control prohibiting use of unregistered landlord is present."
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153,
                176,
                233
              ],
              "why": "Exploit can result in permanent protocol asset loss for users."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "Because the function does not check if the landlord is a registered account, users can irreversibly lock their NFTs by staking to an unregistered landlord. This leads to protocol asset loss with no feasible recovery mechanism. The impact is high and the likelihood is medium since exploitation requires specific (but feasible) conditions.",
      "adjustment": {
        "index": 57,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286
              ],
              "why": "The finding is about conversion from signed to unsigned integer, not classic arithmetic overflow/underflow."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version 0.8.25 is explicitly declared."
            }
          ]
        },
        "O_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                285,
                286
              ],
              "why": "There is a narrowing cast from int256 to uint256, which can revert if the value is negative."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                285,
                286,
                272,
                278
              ],
              "why": "No evidence or documentation that negative bonuses and resulting reverts are an intentional business requirement."
            }
          ]
        },
        "O_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                292,
                174,
                196
              ],
              "why": "The revert breaks the entire staking/unstaking flow, enabling a DoS that traps user assets, which is part of a larger asset-management chain."
            }
          ]
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                251,
                285,
                286
              ],
              "why": "The function does not transfer control to untrusted code; only updates local state and emits events."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                291,
                292,
                293,
                294
              ],
              "why": "All storage writes occur without any prior external call; CEI is not relevant here."
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                285
              ],
              "why": "No re-entrancy guard identified, but the bug is not a re-entrancy risk."
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "_farmPlots is only called internally or via modifier, without delegatecall or user-provided contract addresses."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                132,
                174
              ],
              "why": "Functions that reach _farmPlots can be called by any user who has staked a NFT."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93,
                132,
                174,
                229
              ],
              "why": "No privileged access applies; function is generally user-accessible."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                285,
                286
              ],
              "why": "No mitigation—users exposed to full reverts and asset lockout with no circuit breaker."
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                174,
                196
              ],
              "why": "Vulnerability allows permanent denial of access to user assets (NFTs)."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                285,
                286
              ],
              "why": "No comment, spec, or documentation suggests that reverts on negative bonus are desired."
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                285,
                286
              ],
              "why": "Although Solidity 0.8.25 is in use, the narrowing cast from int256 to uint256 is a known reverting conversion (not an overflow auto-check for math)."
            }
          ]
        },
        "F_6": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                132,
                174,
                229
              ],
              "why": "_farmPlots can be reached by external/public flows via modifier."
            }
          ]
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "A narrowing int256-to-uint256 cast after addition with a potentially negative bonus in _farmPlots can revert, making the function Denial-of-Service and permanently locking user NFTs. The exploit is user-accessible, does not require privileged access, and leads to protocol-critical asset lockout. Severity is high due to both impact and exploitability.",
      "adjustment": {
        "index": 58,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "The negative bonus can be reached by normal user inputs and leads to permanent loss of access to staked NFTs, meeting the threshold for high-severity DoS."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma statement shows Solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                133,
                176,
                229
              ],
              "why": "Stake and unstake are all called externally"
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "stakeMunchable is externally callable by any account without access restriction for landlord parameter"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                133
              ],
              "why": "No mitigation in stakeMunchable to ensure landlord is registered"
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153,
                196
              ],
              "why": "Funds (NFTs) can be irreversibly locked inside the contract"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "Any user can stake an NFT to an unregistered landlord, but subsequent unstake/farm actions irreversibly revert due to landlord registration checks, resulting in locked NFTs. No mitigations prevent misuse of the landlord parameter, and impact is high since user funds can become permanently inaccessible. The likelihood is medium as it is feasible in practice if users or attackers provide such an address.",
      "adjustment": {
        "index": 59,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "The finding is valid and severe since it can cause user asset loss without recourse."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version is 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153,
                196
              ],
              "why": "External call to munchNFT.transferFrom before internal state updates in stakeMunchable and unstakeMunchable"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                155,
                160,
                161,
                162,
                163
              ],
              "why": "Internal state updates occur after the external call"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                176,
                200,
                229,
                233
              ],
              "why": "None of the stake/unstake/transfer/farm functions use nonReentrant or a mutex"
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                153,
                155
              ],
              "why": "CEI is violated: external call precedes critical writes"
            }
          ]
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153
              ],
              "why": "Call is to an external contract (ERC721 token)"
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "stakeMunchable is external, only validated for registration and staking limits"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                176,
                200,
                229
              ],
              "why": "No mitigation present (e.g., no nonReentrant, timelock, pause only applied to non-emergency) on reentry-prone functions"
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                137,
                141,
                142,
                143,
                160,
                229,
                233
              ],
              "why": "Manipulation allows critical protocol actions: exceeding staking limits, corrupting state, or seizing tokens"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                153
              ],
              "why": "Neither nonReentrant nor CEI respected, so not a false positive"
            }
          ]
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The functions make external token transfer calls before updating internal state and lack any reentrancy guard or CEI enforcement, enabling attackers to reenter and bypass staking and occupancy checks. Since these functions affect the mapping of staked tokens and plots and allow critical protocol manipulation, the impact and likelihood are both high. No mitigation or documented intent is present, so severity remains High.",
      "adjustment": {
        "index": 60,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "External calls before internal state mutation, lacking reentrancy protection, enable real-world exploits in staking logic."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity pragma 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                230,
                132,
                136
              ],
              "why": "Any user can repeatedly call the farming routine via farmPlots or stakeMunchable."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                248,
                259
              ],
              "why": "No restriction/mitigation against perpetual farming of plots with zero available slots."
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                246,
                296,
                297
              ],
              "why": "Enables unbounded schnibbles (reward) issuance, impacting protocol economy."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "An off-by-one error in plot occupancy checking allows users to farm infinite rewards by exploiting an invalid state, with no access restriction or mitigation. This leads to perpetual schnibbles inflation, threatening the value and stability of protocol rewards. The impact and likelihood are both high, thus this warrants a 'High' severity.",
      "adjustment": {
        "index": 61,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                283,
                284,
                285,
                286
              ],
              "why": "The core issue is that negative finalBonus can make the arithmetic result negative, triggering an underflow when cast to uint256."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma specifies Solidity 0.8.25, which enforces overflow/underflow checks except with explicit type casts."
            }
          ]
        },
        "O_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285
              ],
              "why": "Conversion from int256 to uint256 is a narrowing cast that allows wrapping/underflow if the value is negative."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                300,
                301,
                302
              ],
              "why": "Underflow directly enables an attacker to mint unbounded schnibbles, potentially draining protocol funds."
            }
          ]
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "No transfer of control to untrusted code in this execution path."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                292,
                293,
                295,
                296,
                297,
                299,
                300,
                301
              ],
              "why": "All state updates are directly related to the exploit in the function's local context; not a reentrancy pattern."
            }
          ]
        },
        "R_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                236,
                237
              ],
              "why": "No external call or pattern requiring a reentrancy guard in this context."
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233
              ],
              "why": "_farmPlots is internal and called in modifiers and functions that only affect direct state, no delegatecall or external invocation."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                230,
                231,
                232
              ],
              "why": "farmPlots is external and callable by any account."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229
              ],
              "why": "Exploit is not restricted to a privileged role."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                230,
                231,
                232,
                284,
                285
              ],
              "why": "No mitigation present to prevent negative finalBonus or to check result bounds before casting."
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                296,
                297,
                300,
                301
              ],
              "why": "Allows unprivileged user to manipulate critical protocol balances by creating massive unfedSchnibbles."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286
              ],
              "why": "Although Solidity >=0.8 is used, the explicit int->uint cast bypasses the check."
            }
          ]
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "This is a critical arithmetic underflow due to an unchecked int256-to-uint256 cast, allowing negative numbers to wrap into massive rewards. Any user can trigger the exploit if finalBonus ≤ -100, making the likelihood and impact both high. No mitigation or business intent is present, and protocol funds could be fully drained.",
      "adjustment": {
        "index": 62,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                66,
                67,
                68,
                69,
                70,
                71,
                93,
                95,
                99,
                167,
                289,
                290,
                296,
                297
              ],
              "why": "Overflow can result when schnibblesLandlord exceeds schnibblesTotal due to tax rate >1e18."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma explicitly uses Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                283,
                285
              ],
              "why": "The affected math is not within unchecked and uses Solidity 0.8.25, so runtime checks should auto-revert on arithmetic underflow/overflow."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                297,
                299,
                301,
                310,
                311
              ],
              "why": "Overflow (due to bad tax rate bounds) can trigger DoS and affects funds/rewards, which can be abused in a wider attack chain."
            }
          ]
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93,
                133,
                175,
                200,
                229
              ],
              "why": "No untrusted external call after external input in this logic branch."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93,
                133,
                175,
                200,
                229
              ],
              "why": "No external call is guarded or not present in the vulnerable flow."
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93,
                133,
                175,
                200,
                229
              ],
              "why": "These are all externally callable functions."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93,
                133,
                175,
                200
              ],
              "why": "Any landlord (not admin/owner) can set their own tax rate."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93
              ],
              "why": "Tax rate adjustment is per landlord, not centralized—permission is broad."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                66,
                67,
                69,
                70
              ],
              "why": "No global guardrails/mitigations enforce correct min/max, so unsafe input possible."
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                297,
                299,
                301,
                310,
                311
              ],
              "why": "Landlords can block tenant rewards, cause DoS, and possibly steal schnibble rewards."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The bug allows landlords to set extremely high or invalid tax rates due to misconfigured bounds, resulting in arithmetic errors that can revert tenant operations and block or steal their rewards. As the contract is compiled with Solidity >=0.8.0, direct overflows revert but do not prevent the DoS; the impact is protocol-wide as landlords can effectively lock tenants out. The severity is high since exploitation is trivial and causes denial-of-service and potential reward theft.",
      "adjustment": {
        "index": 63,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "Issue is valid, not mitigated, and escalation/abuse is feasible due to sound exploit path and business logic error."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                51,
                52,
                72,
                109,
                167,
                293,
                297
              ],
              "why": "The issue is not due to arithmetic overflow/underflow directly, but to unchecked assignment and logical checks for DEFAULT_TAX_RATE, which can create erroneous state later."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract uses Solidity 0.8.25, which has built-in overflow/underflow protections."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                285,
                286
              ],
              "why": "No unchecked{} blocks and no type narrowing or assembly math are present at the critical points."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [],
              "why": "There is no evidence that an out-of-bounds DEFAULT_TAX_RATE is intentional."
            }
          ]
        },
        "O_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286,
                297
              ],
              "why": "A misconfigured DEFAULT_TAX_RATE can cause calculation errors and a denial-of-service, which is a critical exploit vector."
            }
          ]
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                251,
                273
              ],
              "why": "No external calls to untrusted contracts in the computation path relating to DEFAULT_TAX_RATE."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                251,
                273
              ],
              "why": "No contract storage writes after external calls related to the finding."
            }
          ]
        },
        "R_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [],
              "why": "Reentrancy is not relevant to this finding's exploitability."
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                105
              ],
              "why": "Any external account can call triggerPlotMetadata and inherit DEFAULT_TAX_RATE."
            }
          ]
        },
        "A_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                51,
                53,
                65
              ],
              "why": "Config contract (likely owned by a privileged role) controls DEFAULT_TAX_RATE centrally."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                72
              ],
              "why": "No timelock, multi-sig, or role-based mitigation specific to changing this configuration in the critical code path."
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                297
              ],
              "why": "Denial-of-service for renters and excessive value extraction are critical protocol-level impacts."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Although Solidity >=0.8 provides runtime checks for math, business logic can still allow DENIAL-OF-SERVICE via unchecked configuration."
            }
          ]
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The lack of validation on DEFAULT_TAX_RATE allows misconfiguration, causing a protocol-wide denial-of-service if the value is set out-of-bounds. Anyone initializing their plot metadata would inherit this critical state, enabling attackers or misconfigurations to permanently break core protocol flows. This meets the 'high' impact and 'medium' likelihood criteria for a high-severity label.",
      "adjustment": {
        "index": 64,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "Severity is high as the bug can disrupt protocol operation for all participants; the finding is valid and should be addressed."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                141
              ],
              "why": "Function is externally callable and not owner/role protected."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The off-by-one error in the staked munchables limit enables users to exceed the intended maximum, which may have minor gameplay or protocol balance implications but does not result in significant financial or functional loss. The function is publicly callable by any user, making the likelihood of the issue being exploited high. Per the impact/likelihood matrix, severity is set to medium.",
      "adjustment": {
        "index": 65,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "This is a minor, but user-observable logic bug with very limited protocol impact."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma specifies Solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "No untrusted external calls in stakeMunchable, only internal state changes and NFT transfer"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "All state changes occur before external transferFrom; no post-external-call storage writes"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "No nonReentrant or mutex found on stakeMunchable"
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "Function is external, operates on user-supplied addresses"
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "Function is external and callable by any registered account"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "No privileged role involved in setting landlord tax metadata; relevant access is decentralized"
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "No mitigation checks ensure that plotMetadata is initialized before staking"
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                167
              ],
              "why": "Zero-initialized tax rate lets renters keep all schnibbles and deprives landlords of revenue"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The absence of plot metadata initialization checks in stakeMunchable allows staking with a zero-initialized tax rate, directly impacting landlord rewards. This is easily exploitable by renters to deprive landlords of their entitled schnibbles, leading to protocol-level financial loss. The impact is significant and the exploit trivial, justifying a High severity classification.",
      "adjustment": {
        "index": 66,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version is 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141
              ],
              "why": "No unchecked/assembly/narrowing cast in the staking limit logic"
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                176,
                200
              ],
              "why": "No external call or control transfer to untrusted address in stakeMunchable/unstake/transfer plot"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                159,
                160,
                161
              ],
              "why": "All storage updates before external NFT transfer"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "stakeMunchable is external, not internal"
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "No access control: any registered user may call"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "No mitigation for extra staking (e.g. no post-check, relies purely on the if-guard)"
            }
          ]
        },
        "A_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                347
              ],
              "why": "Abusing the cap allows more plot occupation but not critical protocol control"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141
              ],
              "why": "Extra staking is feasible and not purely theoretical"
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The off-by-one bug in stakeMunchable permits a user to exceed the designed staking cap, leading to moderate but non-critical protocol advantage. While there is no overflow or reentrancy and access is open to all, the error enables unfair rewards and undermines system integrity. The issue is valid, with medium impact and likelihood.",
      "adjustment": {
        "index": 67,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Severity matches matrix; finding is clear and not a duplicate or design intent."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma is 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No external call to untrusted code within transferToUnoccupiedPlot"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No re-entrancy guard, but there are no untrusted external calls"
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "All internal logic and state updates, not external delegatecall"
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200
              ],
              "why": "Function is external and callable by any token owner"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200
              ],
              "why": "Only causes denial of service for land slots, not critical protocol-wide loss"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Function is externally callable and impacts user-facing state"
            }
          ]
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Purely internal state update, but the issue is not a reentrancy false positive"
            }
          ]
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The missing update to toilerState[tokenId].plotId causes land plots to become stuck in an occupied state, leading to a denial-of-service for future plot use but not protocol-wide loss. The function is externally callable and affects user assets, making exploitation trivial and highly likely. The potential impact is limited to blocked user actions for specific plots rather than critical protocol assets, so severity is medium.",
      "adjustment": {
        "index": 68,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Recommend updating toilerState[tokenId].plotId on plot transfer to resolve ghost occupancy."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25 specified"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                203,
                227
              ],
              "why": "No unchecked math or narrowing casts"
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No external calls to untrusted code in this function"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                214,
                293
              ],
              "why": "No external call mid-state-change here"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No nonReentrant/mutex present"
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Function is external, available to unprivileged accounts"
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                203
              ],
              "why": "No access control on transferToUnoccupiedPlot except player registration"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Attack is not dependent on privileged roles"
            }
          ]
        },
        "A_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No privileged action; mitigations like timelock not relevant"
            }
          ]
        },
        "A_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Right enables plot manipulation but not core protocol compromise"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Function is external and reachable"
            }
          ]
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The bug allows a malicious user to create ghost occupancies, blocking all plots and resulting in a denial-of-service for other users. The impact is significant since it prevents plot usage, but does not compromise protocol-wide funds or core logic. Since the function is externally accessible and can be exploited by any registered player, likelihood is high and severity is medium per the matrix.",
      "adjustment": {
        "index": 69,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Severity matches the matrix; the finding is valid and not a duplicate or design intent."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                105,
                112
              ],
              "why": "There is no arithmetic overflow/underflow risk in triggerPlotMetadata; all assignments are bounded and straightforward."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma is solidity 0.8.25, which implements safety checks for arithmetic by default."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                105,
                112
              ],
              "why": "No unchecked blocks, assembly, or narrowing typecasts are present."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                105,
                115
              ],
              "why": "No external calls are performed; only state updates and an event emission."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                109,
                111,
                114
              ],
              "why": "All storage writes and event emissions occur within the function, and there are no external calls prior to these actions."
            }
          ]
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                105,
                115
              ],
              "why": "All logic is internal to the contract; no untrusted external contract call is made."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                105
              ],
              "why": "Any registered main account can call this function for initialization if not already set."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                105,
                106
              ],
              "why": "Function is not privileged—each account may call it to initialize their own metadata."
            }
          ]
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                110,
                112
              ],
              "why": "The function does not enable critical protocol manipulation (only metadata initialization)."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                104,
                112
              ],
              "why": "Documentation and function purpose confirm this is intended one-time initialization for user plot metadata."
            }
          ]
        },
        "F_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                105,
                115
              ],
              "why": "No feasible exploit path: state changes are safe, and only a registered caller can initialize their own metadata."
            }
          ]
        },
        "F_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3,
                105,
                112
              ],
              "why": "Solidity version 0.8.25 auto-checks for overflow, and there is no bypass."
            }
          ]
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                105,
                115
              ],
              "why": "No reentrancy vector is present—no external calls or value transfers."
            }
          ]
        },
        "F_7": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                105,
                115
              ],
              "why": "All logic is internal-only, so reentrancy is not possible."
            }
          ]
        },
        "removal_reason": "design_intent",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "triggerPlotMetadata is a non-privileged, single-use initialization function for user metadata and behaves exactly as intended. There are no exploit vectors, loss possibilities, or access control failures. This is expected contract behavior, so the finding is to be removed as design intentional.",
      "adjustment": {
        "index": 70,
        "new_severity": "info",
        "should_be_removed": true,
        "comments": "Intended one-time user metadata initializer; not a vulnerability. Remove as per design intent."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract is compiled with pragma solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93,
                102
              ],
              "why": "updateTaxRate does not execute external calls or transfer control to untrusted code."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93
              ],
              "why": "Any registered landlord can call updateTaxRate for their own plots."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93
              ],
              "why": "updateTaxRate is not privileged beyond only the landlord of a plot."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93,
                102
              ],
              "why": "There are no mitigation controls such as cooldowns or rate limits present."
            }
          ]
        },
        "A_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93,
                102
              ],
              "why": "Changing tax rate impacts schnibble distribution but does not directly enable critical protocol manipulation."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The ability for landlords to update their tax rate without a cooldown could disadvantage renters and allow strategic tax manipulation, but does not enable loss of funds or critical protocol compromise. No mitigation or rate limiting controls are present in the code. This makes the impact low, but the likelihood medium, resulting in a low severity rating.",
      "adjustment": {
        "index": 71,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "Issue is legitimate under protocol economic fairness, but limited in protocol-wide impact; severity adjusted per matrix."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma specifies Solidity >=0.8.0"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                136
              ],
              "why": "stakeMunchable is external and accessible to any user"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The lack of a custom error for staking a non-existent tokenId does not result in a loss of funds or core protocol impact, but does impact user experience by providing a generic error. Any user can trigger this, making the likelihood high, but the impact is limited to user confusion, not security or functional loss. Per the impact/likelihood matrix, severity is 'medium.'",
      "adjustment": {
        "index": 72,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Recommend adding an explicit check and revert with a clear, contract-specific error for nonexistent tokenIds to improve UX."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma specifies Solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                174,
                200
              ],
              "why": "No external call to untrusted code in the affected stake/unstake logic"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                174,
                200
              ],
              "why": "External accounts can call the staking functions"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                174,
                200
              ],
              "why": "No central privileged role is involved in user staking actions"
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                174,
                200,
                313
              ],
              "why": "No safeguards enforce an array growth limit"
            }
          ]
        },
        "A_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                174,
                200
              ],
              "why": "Does not allow direct protocol manipulation like minting or upgrades"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The ability to unboundingly grow the munchablesStaked array via repeated stake/unstake cycles presents a realistic risk of gas DoS and user disruption, though it does not directly allow fund loss or critical manipulation. No overflow or privileged role is involved, and the mitigation controls for array growth are absent. The resultant impact and likelihood both fall in the medium category, warranting a medium severity rating.",
      "adjustment": {
        "index": 73,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Recommend additional logic to bounds-check or periodically cleanup the munchablesStaked array to prevent state bloat and DoS vectors."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25, so auto-revert on overflow applies except exempt cases"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "stakeMunchable only calls out to ERC721, which is a specific contract instance, not general untrusted code"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "No explicit reentrancy guard observed"
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153
              ],
              "why": "transferFrom is an external call"
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "Any user can call stakeMunchable"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                172
              ],
              "why": "No mitigations (timelock/etc) restrict this behavior"
            }
          ]
        },
        "A_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153,
                160
              ],
              "why": "Can result in permanent asset loss"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "high"
      },
      "reasoning_summary": "There is no validation preventing users from staking assets to the zero address, leading to irreversible loss of access. Any unprivileged account can call stakeMunchable, and the lost asset cannot be recovered due to the lack of ownership and mitigation controls. Given the protocol-wide loss potential and feasible likelihood, the severity is high.",
      "adjustment": {
        "index": 74,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "The report accurately identifies a high-severity issue: assets can be permanently locked if staked to the zero address."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                273,
                279,
                274,
                275
              ],
              "why": "The issue is array index calculation possibly leading to out-of-bounds access, not arithmetic wrapping or truncation."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract uses Solidity 0.8.25, which auto-reverts arithmetic overflows."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                230
              ],
              "why": "farmPlots is external and not access-controlled, so any address can call."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                310
              ],
              "why": "No input validation checks for array indices in _farmPlots."
            }
          ]
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The finding describes an unchecked array index in the _farmPlots function, which can cause a revert and deny service to users, rather than an arithmetic overflow. Since any unprivileged account can call this path and mitigation is missing, the impact is medium due to a potential DoS against plot farming. Likelihood is medium as the exploit depends on unvalidated attribute inputs, justifying a final severity of medium.",
      "adjustment": {
        "index": 75,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "While the calculation does not cause an overflow but instead a revert due to out-of-bounds indexing, this can still block users from interacting with their plots and thus presents a genuine risk."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma specifies Solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                310
              ],
              "why": "No control transferred to untrusted code in _farmPlots loop"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                292,
                293,
                294
              ],
              "why": "Contract state written after external calls, but no untrusted call beforehand"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "_farmPlots is internal and called only within contract"
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                230
              ],
              "why": "farmPlots() is external and callable by any unprivileged account"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "_farmPlots is marked internal, but only accessed from internal/external functions callable by users"
            }
          ]
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The dirty flag mechanism can permanently block reward accrual for some staked munchables if a landlord's plots fluctuate, causing user loss of rewards. This issue is exploitable by users through normal contract interactions and does not rely on theoretical or impossible conditions. The overall risk is medium impact with high likelihood and should not be removed.",
      "adjustment": {
        "index": 76,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Issue can lead to permanent user loss of rewards with standard contract use and should be addressed."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity pragma is 0.8.25, which includes automatic arithmetic checks."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                310
              ],
              "why": "_farmPlots does not invoke external contracts except accountManager, which is likely trusted and part of protocol design."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                310
              ],
              "why": "accountManager.updatePlayer occurs after all relevant state mutation for the current loop; design appears safe from re-entrancy."
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301
              ],
              "why": "updatePlayer is an external call on another contract."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                230
              ],
              "why": "farmPlots is an external function accessible by any user."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                293
              ],
              "why": "The possible confusion is minor and unlikely to cause significant financial loss or create a viable exploit path; the user can farm at any time to update rates."
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The finding describes a minor state consistency issue where updated tax rates are not immediately reflected for all staked munchables, but this requires no special permission and users can update their rates at any time by farming. There is no clear exploit or significant negative impact beyond possible user confusion. Severity is low due to limited scope and low likelihood of practical harm.",
      "adjustment": {
        "index": 77,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "This is a minor consistency issue with limited user impact and no evident exploitable scenario."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25 indicates Solidity >=0.8"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No unchecked arithmetic or dangerous casting"
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No external call to untrusted code in transferToUnoccupiedPlot"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                214,
                293
              ],
              "why": "No storage write after potential external call, as there is none"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No explicit re-entrancy guard in transferToUnoccupiedPlot"
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Function does not perform external calls; logic is internal"
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Any registered user can call transferToUnoccupiedPlot if owning a staked token"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Privilege not centralized; depends on staked token ownership"
            }
          ]
        },
        "A_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Access limited by ownership; abuse scope is minimal"
            }
          ]
        },
        "A_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "Manipulation cannot cause critical protocol-wide effects"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "The issue is purely cosmetic (misleading events) and does not affect protocol state; the exploit scenario is non-critical"
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The reported lack of plotId self-assignment check can cause misleading events, but does not impact critical protocol functionality or user funds. The issue is low-impact and requires deliberate invocation to exploit, with effects limited to event logs. Severity is low per the risk matrix.",
      "adjustment": {
        "index": 78,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "This is a cosmetic issue affecting event accuracy, not protocol safety."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25 specified"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                282,
                285,
                289
              ],
              "why": "No `unchecked`, inline assembly, or narrowing cast in schnibbles calculation"
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "Calls to accountManager, but appears to interact with project contract, not external untrusted code"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                292,
                293,
                294
              ],
              "why": "State updates after other operations, but not after external calls"
            }
          ]
        },
        "R_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                248
              ],
              "why": "No direct external call or re-entrancy vector relevant to schnibbles calculation"
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                310
              ],
              "why": "_farmPlots is not externally exposed to untrusted code"
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                231
              ],
              "why": "farmPlots() is external and accessible by any account"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                299,
                300
              ],
              "why": "Does not enable critical protocol manipulation; only affects schnibbles rewards division"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The issue allows a landlord to change their tax rate immediately before schnibbles are farmed, which can significantly reduce a user's expected rewards with no way for the user to set a minimum. The farming operation is user-accessible and affects their in-game earnings but does not directly compromise protocol control or funds. With moderate impact and likelihood, the finding's severity is appropriately classified as Medium.",
      "adjustment": {
        "index": 79,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma indicates Solidity 0.8.25; overflow auto-reverts."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93,
                102
              ],
              "why": "No external call or transfer of control in updateTaxRate."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93
              ],
              "why": "Any registered landlord (msg.sender) can update their own tax rate; no restriction to special roles."
            }
          ]
        },
        "A_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                94
              ],
              "why": "Privilege is held directly by the landlord (an EOA/mainAccount)."
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93
              ],
              "why": "No timelock, delay, or on-chain mitigation for abrupt landlord tax changes."
            }
          ]
        },
        "A_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                93,
                167
              ],
              "why": "Does not allow drains or protocol-wide fund transfers, but does affect user yield share."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "Landlords can change tax rates at any moment, which impacts user rewards without warning or delay, creating a risk of value extraction from toilers. There are no on-chain mitigation mechanisms (like timelocks or deadlines) to soften timing-based attacks. This results in a medium impact and medium likelihood due to direct user incentive effects.",
      "adjustment": {
        "index": 80,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version 0.8.25 specified."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                302
              ],
              "why": "No external untrusted code or low-level call in _farmPlots."
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                310
              ],
              "why": "State update occurs at end of loop, after applying logic."
            }
          ]
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "_farmPlots is internal, called via modifier, not exposing external call risk."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229
              ],
              "why": "farmPlots() is external and callable by any registered user."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                311
              ],
              "why": "No reentrancy or multi-call logic impacting state following external calls."
            }
          ]
        },
        "F_7": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "_farmPlots is only called internally; not exploitable for reentrancy."
            }
          ]
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The finding highlights an inconsistency in schnibbles distribution stemming from using the staler tax rate for calculation, though the new rate is immediately stored for future operations. While this mismatch may cause user confusion and affects fairness, it does not lead to critical loss or directly enable privilege escalation/manipulation. Medium impact and medium likelihood are appropriate, resulting in a matrix severity of medium.",
      "adjustment": {
        "index": 81,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "The inconsistent use of outdated tax rate in distribution calculations is relevant and warrants a 'medium' severity."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                282,
                283,
                284,
                285,
                286,
                287,
                289,
                290
              ],
              "why": "The core issue is inconsistent division/precision in reward calculation, not arithmetic overflow or underflow."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Compiled with Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                282,
                283,
                284,
                285,
                286,
                287,
                289,
                290
              ],
              "why": "No unchecked blocks, assembly, or narrowing casts in schnibbles calculation."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                310
              ],
              "why": "_farmPlots is only called internally and does not transfer control to untrusted contracts."
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                310
              ],
              "why": "Storage updates to player accounts after schnibbles rewards calculation (calling updatePlayer)."
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                310
              ],
              "why": "No re-entrancy guard or mutex present in _farmPlots."
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                310
              ],
              "why": "_farmPlots is an internal function not directly callable by external addresses."
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                310
              ],
              "why": "The precision issue is not directly exploitable by unprivileged users; it is an internal logic issue."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                310
              ],
              "why": "_farmPlots is internal, and no external/public function allows user-triggered exploitation of the precision mismatch."
            }
          ]
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "auto_checked",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "_farmPlots is an internal function not exposed directly to end-users, and despite imprecise arithmetic, this does not introduce a user-exploitable risk. The inconsistency results in potential minor rewards miscalculation but cannot be triggered externally for harm. As such, this is a low-impact, low-likelihood, auto-checked issue.",
      "adjustment": {
        "index": 82,
        "new_severity": "low",
        "should_be_removed": true,
        "comments": "Can be removed as a true exploit path cannot occur due to the function's limited internal visibility (auto_checked)."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity pragma 0.8.25 set at the top."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                1,
                348
              ],
              "why": "There is no specification nor intent that an oracle should be present; the design does not require oracles."
            }
          ]
        },
        "F_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                1,
                348
              ],
              "why": "Absence of an oracle is not a vulnerability and has no direct exploit path."
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "design_intent",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The finding notes the absence of an oracle, but the contract is intentionally designed without dependence on price feeds or external oracles, focusing on land and NFT management logic. Not using an oracle is an explicit part of the design, not an oversight or vulnerability. There is no exploit path or business requirement for oracle integration here.",
      "adjustment": {
        "index": 83,
        "new_severity": "info",
        "should_be_removed": true,
        "comments": "Oracle functionality is intentionally omitted per contract design—removal recommended."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                284,
                285,
                286
              ],
              "why": "The issue concerns precision loss in schnibbles calculation, not an arithmetic overflow/underflow."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity pragma is 0.8.25, so built-in overflow checks are present."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                310
              ],
              "why": "No external/untrusted calls are made during the calculation; only trusted contract methods and state updates occur."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                311
              ],
              "why": "The function is public and external, not restricted to internal/private."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                230,
                132
              ],
              "why": "Any unprivileged user can trigger schnibbles calculations via public/external entrypoints like `farmPlots()` and staking/unstaking."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "This issue creates fairness and precision problems in schnibbles reward allocation due to integer division truncation, but does not lead to loss of funds or protocol-level risk. Any user can trigger the affected function, so exploitation is trivial and directly impacts rewards distribution. However, since the value at risk is limited to minor schnibbles accounting discrepancies, the overall impact is low but likelihood is high, resulting in a medium severity.",
      "adjustment": {
        "index": 84,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Severity is medium per matrix; correct by rearranging arithmetic operations to avoid precision loss."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                288,
                289,
                290
              ],
              "why": "No overflow/underflow risk here—the calculation is susceptible primarily to loss of precision, not to arithmetic wrapping."
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract is compiled with Solidity 0.8.25."
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                288,
                289,
                290
              ],
              "why": "No unchecked, inline assembly, or narrowing cast in schnibblesLandlord calculation."
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                309
              ],
              "why": "_farmPlots does not transfer control to untrusted code."
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233
              ],
              "why": "Function is internal and only invoked by contract logic, not via arbitrary delegatecall or by external untrusted contracts."
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                230,
                231
              ],
              "why": "farmPlots is externally callable by any account and triggers _farmPlots."
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                32,
                33
              ],
              "why": "Landlords and players are not centrally privileged—issue relates to any plot assignment and not core protocol control."
            }
          ]
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "A_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                288,
                289,
                290
              ],
              "why": "Precision loss leads to minor landlord claim inaccuracy, not critical protocol manipulation."
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_6": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "F_7": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The issue is a loss of precision due to integer division when allocating schnibbles to landlords, resulting in potential underpayment when values are small. While this can affect landlord rewards, it does not threaten protocol integrity or allow fund theft. Because the error is frequent and can impact user experience, the likelihood is high, but overall impact is low, yielding a medium severity.",
      "adjustment": {
        "index": 85,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "The integer division truncation can lead to consistent underpayment in some edge cases, which could affect trust or satisfaction, though does not endanger assets or protocol logic."
      }
    }
  ]
}