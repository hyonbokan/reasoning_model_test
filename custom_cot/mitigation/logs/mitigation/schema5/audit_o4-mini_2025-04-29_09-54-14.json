{
  "document_id": "audit_run_schema5",
  "findings": [
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                287
              ],
              "why": "signed-to-uint cast after arithmetic"
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                287
              ],
              "why": "no unchecked block"
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                271,
                280
              ],
              "why": "no business need for negative bonus"
            }
          ]
        },
        "O_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301
              ],
              "why": "inflated rewards propagate to external update"
            }
          ]
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "calls external accountManager.updatePlayer"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                292,
                300
              ],
              "why": "storage writes occur before external call"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229
              ],
              "why": "no nonReentrant guard present"
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "CEI pattern respected"
            }
          ]
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "external call to another contract"
            }
          ]
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229
              ],
              "why": "any registered user can call farmPlots"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [],
              "why": "not a timelock or governance bypass"
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                287
              ],
              "why": "enables minting near 2^256-1"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                287
              ],
              "why": "solidity ≥0.8 but cast wrap not reverted"
            }
          ]
        },
        "F_5": {
          "answer": "yes",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The contract computes rewards by adding a signed bonus then casting back to uint256 without bounds checks, allowing negative intermediate values to wrap to near-max uint256. This unchecked cast in Solidity ≥0.8 leads to effectively infinite minting and external updates to player balances. The high-impact, easily exploitable flaw justifies a high severity.",
      "adjustment": {
        "index": 0,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "no",
          "refs": null
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                226
              ],
              "why": "transferToUnoccupiedPlot is an internal call within the same contract"
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                214,
                226
              ],
              "why": "Stale plotId allows farmer to claim retroactive rewards"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The transferToUnoccupiedPlot function updates the occupancy bitmap but never sets toilerState[tokenId].plotId, causing stale plotIds to trigger retroactive schnibble payouts when the landlord’s plot count changes. This state inconsistency is directly exploitable by farmers to claim unearned rewards. Given the practical exploit path and economic loss, the medium impact with high likelihood maps to high severity.",
      "adjustment": {
        "index": 1,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "Add an assignment to toilerState[tokenId].plotId = plotId in transferToUnoccupiedPlot to keep state consistent."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                150,
                153
              ],
              "why": "ERC721.transferFrom external call"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                155,
                160,
                161,
                163
              ],
              "why": "Storage writes after external call"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                136
              ],
              "why": "No reentrancy guard present"
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                150,
                155
              ],
              "why": "External call precedes state changes"
            }
          ]
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The stakeMunchable function uses `>` instead of `>=`, permitting an eleventh stake beyond the intended ten-limit. This is a logic boundary bug—not arithmetic—and because the external ERC721.transferFrom call occurs before state updates without a reentrancy guard or proper CEI, it also breaks CEI. Impact is low but easily triggered, yielding a medium matrix severity.",
      "adjustment": {
        "index": 2,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Change the boundary check to `>= 10` to enforce the ten-stake cap and restore CEI order to prevent potential reentrancy."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": null
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "This issue is a division-by-zero DoS when PRICE_PER_PLOT is loaded unchecked and set to zero, freezing all functions using _getNumPlots. It is neither an overflow nor reentrancy scenario and has high impact due to bricking the module. The matrix yields a medium severity, so the finding should be retained and addressed.",
      "adjustment": {
        "index": 3,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Validate that PRICE_PER_PLOT is non-zero on configuration to prevent division-by-zero."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301
              ],
              "why": "external call to AccountManager.updatePlayer"
            },
            {
              "file": "LandManager.sol",
              "lines": [
                310
              ],
              "why": "external call to AccountManager.updatePlayer"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "External calls to AccountManager.updatePlayer within `_farmPlots` expose re-entrancy since no nonReentrant guard is present, allowing a malicious AccountManager to re-enter LandManager in a partially updated state. Although effects precede interactions (CEI), the looped external calls still leave inconsistent state between iterations. The exploit potential (double-stake, NFT theft) raises the severity to medium.",
      "adjustment": {
        "index": 4,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Add a nonReentrant guard or restructure to perform all external calls after completing internal state updates to prevent re-entrancy."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                210
              ],
              "why": "internal state update only"
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "This is a state‐consistency bug rather than an arithmetic or re-entrancy issue, as the `plotId` in `toilerState` is never updated while `plotOccupied` is. This mismatch can break reward calculation in `_farmPlots`. The issue is material to correctness, so it remains in scope with a medium severity.",
      "adjustment": {
        "index": 5,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Update `toilerState[tokenId].plotId = plotId` in `transferToUnoccupiedPlot` to keep mappings consistent."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25 shows compiler version"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "This issue is a functional logic bug where the `dirty` flag is set when a landlord temporarily loses plots and never cleared, causing permanent disabling of farming for affected Munchables. It is not an overflow or re-entrancy flaw, but it has medium impact and high likelihood because many users could trigger it, resulting in a high severity. A remediation would be to reset the `dirty` flag when the landlord’s plot count is restored.",
      "adjustment": {
        "index": 6,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "Add logic to clear `dirty` when plot count is sufficient again, or provide an explicit reset function."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153
              ],
              "why": "calls ERC721.transferFrom external contract"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                155,
                160,
                161,
                163
              ],
              "why": "storage writes occur after the external transfer"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "no nonReentrant or similar guard present"
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The finding is a logic off-by-one error in the staked‐Munchable limit, not an arithmetic overflow or overflow revert issue. The existing check `length > 10` allows staking 11 items instead of the intended 10. The severity is low given minimal security impact and a straightforward fix.",
      "adjustment": {
        "index": 7,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "Change the limit check from `munchablesStaked[mainAccount].length > 10` to `>= 10` to enforce the intended maximum of 10 staked Munchables."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                286
              ],
              "why": "signed-to-unsigned cast can overflow"
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "yes",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The issue stems from casting a potentially negative int256 result into uint256, which wraps rather than reverts in Solidity 0.8, leading to unexpectedly large reward values. Although built-in overflow checks protect arithmetic, the signed-to-unsigned conversion remains unchecked. Given the unlikely conditions for a sufficiently negative bonus, this is a low‐likelihood, low‐impact concern.",
      "adjustment": {
        "index": 8,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": null
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "This finding describes a gas inefficiency rather than a security flaw, with redundant calls to `accountManager.updatePlayer` inside a loop. It does not involve overflow, re-entrancy, or access control issues, and has low impact on correctness. The matrix severity remains low given the low impact and moderate likelihood.",
      "adjustment": {
        "index": 9,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "This finding highlights a mis‐use of storage keys intended for address lookups to fetch uint parameters, creating a risk of incorrect initialization. It does not implicate overflow, re‐entrancy, or access controls. Given the minor likelihood of a severe exploit but potential for misconfiguration, we classify it as low severity.",
      "adjustment": {
        "index": 10,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": null
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153
              ],
              "why": "ERC721.transferFrom external call"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                155
              ],
              "why": "Storage writes after external call"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "No nonReentrant or similar guard"
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The stakeMunchable function allows staking to a landlord whose plotMetadata has never been initialized, resulting in a default zero tax rate and incorrect reward calculations. This is a business logic validation issue, not an overflow or access control flaw. Fix requires checking plotMetadata[landlord].lastUpdated before proceeding.",
      "adjustment": {
        "index": 11,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301
              ],
              "why": "calls accountManager.updatePlayer"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                302,
                310
              ],
              "why": "no storage writes after external call"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229
              ],
              "why": "no reentrancy guard on farmPlots"
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                248
              ],
              "why": "max staked munchables limited to ~10"
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                252
              ],
              "why": "CEI pattern followed"
            }
          ]
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The finding flags the use of a uint8 loop counter in `_farmPlots`, which mismatches the uint256 array length and imposes an artificial 255-iteration limit. Because the staked array is capped to ~10 items, there is no practical exploit path, but best practices recommend using uint256. This is a low-risk best-practices issue that should remain in the report with a low severity.",
      "adjustment": {
        "index": 12,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": null
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": null
        },
        "R_2": {
          "answer": "yes",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "yes",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The transferToUnoccupiedPlot function fails to update the toilerState[tokenId].plotId, leaving the stored plotId stale. This breaks unstaking and farming logic by freeing the wrong plot and misreporting events, causing high-impact denial of service on plot availability. The issue is straightforward to exploit and undermines core functionality.",
      "adjustment": {
        "index": 13,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "Add `toilerState[tokenId].plotId = plotId;` after updating plotOccupied to keep state in sync."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                345,
                346
              ],
              "why": "_getNumPlots is called by public functions"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "Without a check, PRICE_PER_PLOT = 0 triggers a division by zero in _getNumPlots, causing key functions to revert and halting core functionality. Adding a require guard prevents the DoS. The severity remains medium per the impact/likelihood matrix.",
      "adjustment": {
        "index": 14,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": "Add a require(PRICE_PER_PLOT > 0) check during initialization or before division to prevent division by zero."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153
              ],
              "why": "ERC721 transferFrom external call"
            },
            {
              "file": "LandManager.sol",
              "lines": [
                301
              ],
              "why": "accountManager.updatePlayer external call"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                155
              ],
              "why": "State write after transferFrom"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "Missing nonReentrant modifier"
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "Some functions perform external calls (e.g., ERC721.transferFrom and accountManager.updatePlayer) without a nonReentrant guard and then modify contract state, breaking the Checks-Effects-Interactions pattern. This opens up reentrancy attack vectors. Adding a nonReentrant modifier or reordering state updates to precede external calls will mitigate the risk.",
      "adjustment": {
        "index": 15,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Apply nonReentrant guard or adhere to CEI pattern to prevent reentrancy"
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                150
              ],
              "why": "calls external ERC721.transferFrom"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                155
              ],
              "why": "state writes after external call"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "no reentrancy guard present"
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "This is an off-by-one boundary check error (not arithmetic overflow) in `stakeMunchable` that allows an 11th NFT to be staked. It has low impact and only medium likelihood of misuse, resulting in a low matrix severity. No removal is warranted.",
      "adjustment": {
        "index": 16,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "Change the check to `>= 10` to enforce the 10-NFT limit."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The contract does not implement the ERC-721 receiver hook, so any safeTransferFrom calls will revert and hinder token interoperability. This is a best-practice issue with low impact and medium likelihood since users can still use transferFrom. Implementing IERC721Receiver resolves the interoperability gap.",
      "adjustment": {
        "index": 17,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "Implement IERC721Receiver.onERC721Received to support safeTransferFrom and improve interoperability."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                215,
                225
              ],
              "why": "stale toilerState.plotId enables duplicate occupation and reward errors"
            }
          ]
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200
              ],
              "why": "no nonReentrant guard present"
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200
              ],
              "why": "all state writes are internal"
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                210
              ],
              "why": "allows farming two plots for one token, corrupts rewards"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The transferToUnoccupiedPlot function never writes the new plotId back into toilerState, allowing duplicated occupation and corrupted farming rewards. This is distinct from arithmetic or reentrancy issues and directly impacts state invariants. Per the impact×likelihood matrix, the adjusted severity is medium.",
      "adjustment": {
        "index": 18,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": null
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                150,
                151
              ],
              "why": "calls external ERC721 transferFrom"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                155,
                160
              ],
              "why": "storage writes after external call"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                174,
                200
              ],
              "why": "no nonReentrant guard present"
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The stakeMunchable function checks `length > 10` before pushing a new token, allowing an off-by-one and enabling 11 tokens. This breaks assumptions in subsequent loops and may cause unexpected reverts or DOS. The length check should be `>= 10` to enforce the intended cap.",
      "adjustment": {
        "index": 19,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "Change the pre-push check to `>= 10` (or `> 9`) to enforce the 10-token limit."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                282,
                283
              ],
              "why": "multiplication of time delta and BASE_SCHNIBBLE_RATE"
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                282,
                283
              ],
              "why": "no unchecked block around arithmetic"
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                231,
                232
              ],
              "why": "_farmPlots used by public functions"
            }
          ]
        },
        "A_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                75,
                76,
                277
              ],
              "why": "admin-controlled BASE_SCHNIBBLE_RATE loaded from config"
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                282
              ],
              "why": "overflow can DoS farming functionality"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                282,
                283
              ],
              "why": "overflow auto-reverts under Solidity ≥0.8 without unchecked"
            }
          ]
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The calculation of `schnibblesTotal` multiplies an unbounded time delta by an admin-configurable rate without bounds, leading to a revert under Solidity ≥0.8 and DoS of all farming calls. This is a direct arithmetic overflow bug in production code with no unchecked or fallback handling. The severity is elevated to high given the protocol-wide denial of service risk.",
      "adjustment": {
        "index": 20,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "Enforce an upper bound on BASE_SCHNIBBLE_RATE or clamp the time delta before multiplication to prevent overflow and DoS."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "no",
          "refs": null
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The finding describes critical constants being loaded from incorrect storage keys, leading to bricked game logic. This misconfiguration is high impact and reasonably likely. The matrix assigns it a medium severity.",
      "adjustment": {
        "index": 21,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": null
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "yes",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": null
        },
        "removal_reason": "auto_checked",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The uint8 loop counter overflow is auto-reverted by Solidity 0.8 and no unchecked block is present, and additionally the staking list is capped at 10 entries. Thus the condition cannot practically lead to a permanent denial of service. The finding can be removed as an auto-checked overflow.",
      "adjustment": {
        "index": 22,
        "new_severity": "unchanged",
        "should_be_removed": true,
        "comments": "Overflow is auto-checked by Solidity 0.8 and staked list is limited to 10, so the issue cannot occur in practice."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": null
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The transferToUnoccupiedPlot function fails to update the toilerState.lastToilDate, causing an immediate farmPlots call to calculate a zero time delta and yield no Schnibbles. This is a usability inconsistency rather than a security vulnerability, so it warrants a low-severity best practice recommendation. Adjusting the timestamp on plot transfers would align behavior with user expectations.",
      "adjustment": {
        "index": 23,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "Consider refreshing lastToilDate in transferToUnoccupiedPlot to avoid zero-yield on immediate farming."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                66,
                69,
                72,
                75,
                78
              ],
              "why": "Misusing storage keys loads wrong economic parameters"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The `_reconfigure` function uses mismatched storage keys to load critical parameters, causing tax rates and reward rates to be set to unintended values. This is neither an arithmetic nor reentrancy issue but a configuration-loading bug that can severely disrupt protocol economics. The high impact and certainty of incorrect parameter use warrants a high severity.",
      "adjustment": {
        "index": 24,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "This finding reveals a user-experience issue where Munchables on invalid plots are permanently marked dirty and skipped in reward calculations without notification. It is neither an arithmetic nor reentrancy vulnerability but can lead to confusion and lost earnings. Emitting an event when marking a toiler dirty and documenting this behavior would improve transparency.",
      "adjustment": {
        "index": 25,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Consider emitting a specific event when marking a toiler dirty and updating UI/docs to notify users that their Munchables have stopped earning rewards."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                271,
                286
              ],
              "why": "explicit int-to-uint conversion after negative bonus arithmetic"
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301
              ],
              "why": "external call to accountManager.updatePlayer"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                285
              ],
              "why": "solidity ≥0.8 and no unchecked block"
            }
          ]
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301
              ],
              "why": "CEI pattern in place"
            }
          ]
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "Casting a potentially negative int256 reward calculation back to uint256 can underflow and revert the critical `_farmPlots` loop, causing a denial-of-service. The contract is compiled with Solidity ≥0.8.0 without an `unchecked` block, so arithmetic auto-reverts apply but casts do not prevent this underflow. Given the high impact and medium likelihood, the severity remains medium.",
      "adjustment": {
        "index": 26,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Contract compiled with pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153
              ],
              "why": "ERC721 transferFrom is external call"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                155,
                156,
                157,
                158,
                160,
                161,
                163,
                164,
                165,
                166,
                167,
                168,
                169
              ],
              "why": "State writes occur after the external transferFrom call"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "No nonReentrant or equivalent guard present"
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153,
                155
              ],
              "why": "CEI pattern broken: external call precedes effect writes"
            }
          ]
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "stakeMunchable is publicly callable"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The `stakeMunchable` function uses `> 10` instead of `>= 10`, allowing an unintended 11th stake, constituting an off-by-one logic bug. This deviation may violate downstream assumptions, with neither auto-mitigation nor design intention covering it. The finding retains medium severity per the impact/likelihood matrix.",
      "adjustment": {
        "index": 27,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": "Replace `if (munchablesStaked[mainAccount].length > 10)` with `>= 10` to enforce a maximum of 10 staked Munchables."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248
              ],
              "why": null
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": null
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248
              ],
              "why": null
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233
              ],
              "why": "No reentrancy guard on _farmPlots"
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248
              ],
              "why": "Max staked munchables enforced elsewhere at 11"
            }
          ]
        },
        "F_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248
              ],
              "why": "Solidity ≥0.8.0 auto-reverts on overflow"
            }
          ]
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233
              ],
              "why": "CEI pattern prevents reentrancy"
            }
          ]
        },
        "removal_reason": "auto_checked",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "Although the loop counter uses a uint8 which could in theory overflow past 255, Solidity 0.8.25 auto-reverts on overflow and the contract restricts staked Munchables to at most 11, making this issue purely theoretical. The finding is auto-checked by the compiler’s bounds checks and poses no practical risk. It can be removed.",
      "adjustment": {
        "index": 28,
        "new_severity": "low",
        "should_be_removed": true,
        "comments": "Overflow is auto-reverted in Solidity ≥0.8.0 and staked count is limited to 11, so this is a theoretical issue."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "yes",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "design_intent",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The issue concerns swap-and-pop reordering of the staked Munchables array, which is an intentional gas-saving pattern rather than a functional bug. It poses a low-impact user‐experience concern. Because this behavior is by design, we recommend closing it as design intent.",
      "adjustment": {
        "index": 29,
        "new_severity": "low",
        "should_be_removed": true,
        "comments": "Swap-and-pop ordering change is an intentional gas optimization, not a functional flaw."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": null
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "yes",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The reward‐bonus calculation in `_farmPlots` indexes into `REALM_BONUSES` and `RARITY_BONUSES` without bounds checks, risking unexpected reverts if attributes are out of range. Given controlled NFT inputs, the likelihood is low and the operational impact limited. Matrix severity is low, and explicit index validation is recommended.",
      "adjustment": {
        "index": 30,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "Consider adding explicit bounds checks for REALM_BONUSES and RARITY_BONUSES indices to prevent potential out-of-bounds reverts."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153
              ],
              "why": "ERC-721 transferFrom is an external call"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                155
              ],
              "why": "State write to plotOccupied follows external call"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132,
                136
              ],
              "why": "stakeMunchable lacks nonReentrant or similar guard"
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The stakeMunchable function uses plotMetadata[landlord].currentTaxRate without checking that lastUpdated ≠ 0, allowing a zero tax rate. This is not an overflow or design-intent issue but a logic check omission affecting revenue. Adding a validation mirroring updateTaxRate fixes the missing metadata initialization.",
      "adjustment": {
        "index": 31,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "external call to accountManager.updatePlayer"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The `_farmPlots` function makes external calls to `accountManager.updatePlayer` without any nonReentrant guard, allowing a malicious `accountManager` to re-enter vulnerable functions. Although state updates precede the calls, reentrancy into other entry points can still mutate contract state unexpectedly. To reflect this risk, the severity is adjusted to medium per the impact/likelihood matrix.",
      "adjustment": {
        "index": 32,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The `transferToUnoccupiedPlot` function omits updating `toilerState[tokenId].plotId`, causing internal state and emitted events to diverge. This is not related to overflow or external calls and has practical exploit potential by misallocating rewards. Severity remains medium per impact–likelihood matrix.",
      "adjustment": {
        "index": 33,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Add `toilerState[tokenId].plotId = plotId;` before emitting `FarmPlotTaken` to keep state consistent."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": null
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The `_farmPlots` function uses computed indices to access `REALM_BONUSES` and `RARITY_BONUSES` without any bounds checks, which can revert and DoS the farming process if out‐of‐range. There is no relevant overflow or reentrancy context, and the solidity version auto‐reverts on arithmetic errors. This constitutes a valid medium‐severity DoS finding.",
      "adjustment": {
        "index": 34,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": null
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "low",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The helper function `_getNumPlots` performs a division by the unvalidated `PRICE_PER_PLOT`, which if zero will revert and block staking/farming, causing a DoS. This is a configuration validation issue rather than overflow or reentrancy. Ensuring `PRICE_PER_PLOT` is non-zero prevents the division-by-zero error.",
      "adjustment": {
        "index": 35,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Add a require check ensuring `PRICE_PER_PLOT > 0` during configuration or within `_getNumPlots` to prevent division by zero."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                268,
                301
              ],
              "why": "_farmPlots calls external contracts nftAttributesManager and accountManager"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The `forceFarmPlots` modifier invokes internal farming logic that performs external calls and may revert, blocking core staking and unstaking functions and causing a denial-of-service. No unchecked arithmetic or reentrancy issues apply, and CEI is respected around external calls. The finding remains valid with a medium severity per the impact/likelihood matrix.",
      "adjustment": {
        "index": 36,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "no",
          "refs": null
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153
              ],
              "why": "calls external ERC721 contract"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                155,
                156,
                160
              ],
              "why": "state writes after external call"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                133
              ],
              "why": "no reentrancy guard on function"
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141,
                153
              ],
              "why": "external call before effects violates CEI"
            }
          ]
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The off-by-one error in stakeMunchable uses `> 10` instead of `>= 10`, permitting an 11th munchable and breaking the intended cap. The function also performs an external ERC-721 transfer before updating state, violating CEI and lacking reentrancy protection. With low impact but high likelihood, this maps to medium severity.",
      "adjustment": {
        "index": 37,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Change the staking limit check to `>= 10` to correctly enforce the maximum of 10 munchables."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                287
              ],
              "why": "incorrect percentage calculation with negative finalBonus cast to uint causing wrap"
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The calculation in `_farmPlots()` misapplies the percentage bonus leading to negative intermediate values that wrap on cast to uint, causing overflow and DOS. Solidity 0.8’s checked arithmetic does not cover casts, so the bug persists without an `unchecked` block. Given its high impact (funds/NFTs stuck) and high likelihood (unprivileged user), it merits a high severity.",
      "adjustment": {
        "index": 38,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": null
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": null
        },
        "R_2": {
          "answer": "yes",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "yes",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The finding identifies a clear re-entrancy vulnerability because untrusted external calls to accountManager happen before state changes in staking functions and no guard or CEI is in place. This allows a malicious AccountManager to re-enter and corrupt state. Given high impact (protocol freeze/loss) and medium likelihood, the matrix severity is medium.",
      "adjustment": {
        "index": 39,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Recommend adding a nonReentrant guard or refactoring to follow CEI pattern around the external calls to accountManager."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141,
                248
              ],
              "why": "length check '>10' allows eleven stakes and loop uses uint8"
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                150,
                153
              ],
              "why": "calls transferFrom on ERC721 (external)"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                155,
                158
              ],
              "why": "state writes to plotOccupied after external call"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "no reentrancy guard on stakeMunchable"
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The off-by-one in the staking cap lets users exceed ten NFTs, then a uint8 loop counter eventually overflows and reverts, causing a self-DOS. No reentrancy guard or CEI mitigations apply. Impact is limited to self-DOS with moderate likelihood.",
      "adjustment": {
        "index": 40,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                163
              ],
              "why": "staking records zero tax rate from uninitialized metadata"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "Because `plotMetadata[landlord].currentTaxRate` defaults to zero before any initialization, attackers can stake on uninitialized landlords and farm tax-free, an unintended business logic flaw. This vulnerability has a medium economic impact and medium likelihood of exploitation, yielding a medium severity. It should be mitigated by enforcing the minimum tax rate or initializing metadata upon first use.",
      "adjustment": {
        "index": 41,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Enforce MIN_TAX_RATE on uninitialized metadata (e.g., default to DEFAULT_TAX_RATE) or require metadata initialization before allowing farming."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": null
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "No reentrancy guard present"
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                202,
                209
              ],
              "why": "Access restricted to token owner via checks"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The function transferToUnoccupiedPlot updates occupancy mappings but never sets the new plotId in toilerState, leading to stale state and inaccurate reward calculations. This inconsistency can cause conflicting occupancy and misallocation of schnibbles. Adding the missing state update aligns plotOccupied and toilerState.",
      "adjustment": {
        "index": 42,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Add `toilerState[tokenId].plotId = plotId;` before emitting FarmPlotTaken to keep state consistent."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                287
              ],
              "why": "Underflow occurs in reward calculation before uint cast"
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301
              ],
              "why": "Calls external accountManager.updatePlayer"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "Solidity 0.8.25 reverts on signed overflow/underflow but negative results within range are permitted and then cast to uint256, causing huge unintended rewards when finalBonus<−100. The calculation isn’t in an unchecked block and lacks bounds checks, so an attacker can exploit it directly. This has high impact and medium likelihood, mapping to medium severity.",
      "adjustment": {
        "index": 43,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Add bounds checking or clamp finalBonus to prevent negative multipliers below −100, or adjust reward formula to avoid casting negative values to uint256."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": null
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The finding identifies a logic error in configuration key usage rather than an arithmetic, re-entrancy, or access control bug. The mis-mapped storage keys can lead to incorrect tax settings with medium impact and likelihood. The matrix severity remains medium.",
      "adjustment": {
        "index": 44,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Solidity version pragma >=0.8.0"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153
              ],
              "why": "External transferFrom call"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                155
              ],
              "why": "State writes after external call"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "yes",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The `stakeMunchable` function performs an external NFT transfer before updating its own state, violating the Checks-Effects-Interactions pattern and leaving it open to reentrancy if the NFT contract is malicious. No reentrancy guard is present and storage writes occur after the call. The recommended mitigation is to add a nonReentrant modifier or move state updates before the external call.",
      "adjustment": {
        "index": 45,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": "Add a nonReentrant guard or reorder state updates to occur before the external `transferFrom` call to restore CEI."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                274,
                279
              ],
              "why": "pragma solidity 0.8.25 ensures bounds checks on array access"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                268,
                301,
                310
              ],
              "why": "calls external contracts nftAttributesManager and accountManager"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                292,
                301
              ],
              "why": "storage writes occur before external calls"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                233
              ],
              "why": "no reentrancy guard on farmPlots"
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229,
                233
              ],
              "why": "farmPlots is open to registered users by design"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "Unchecked indexing into REALM_BONUSES and RARITY_BONUSES can trigger out-of-bounds panics under Solidity 0.8 and cause a denial-of-service in reward farming. No overflow or re-entrancy mitigation covers array bounds, so the finding stands. Given its medium impact and likelihood, the matrix yields a medium severity.",
      "adjustment": {
        "index": 46,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Validate array indices against REALM_BONUSES.length and RARITY_BONUSES.length before access to prevent DoS."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25 uses ≥0.8.0"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                346
              ],
              "why": "calls external lockManager.getLockedWeightedValue"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The division by zero risk arises because PRICE_PER_PLOT can be zero and is used without a check. Solidity ≥0.8.0 will auto-revert on divide-by-zero, but the panic is unintended and disables core staking and transfer functions. This is a high-impact, medium-likelihood misconfiguration issue.",
      "adjustment": {
        "index": 47,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                53,
                56,
                59,
                61
              ],
              "why": "Issue is in _reconfigure external contract address assignments, not arithmetic"
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                53,
                54
              ],
              "why": "Storage writes (lockManager) occur immediately after external getAddress call"
            }
          ]
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                51
              ],
              "why": "_reconfigure is internal or protected by initializer"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "Assigning external contract addresses without zero‐address checks can result in misconfiguration-induced failures but does not involve overflow or reentrancy. The misconfiguration poses a medium impact denial-of-service risk with moderate likelihood. Add require checks to ensure non-zero addresses when loading external contracts.",
      "adjustment": {
        "index": 48,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Add require(addr != address(0)) after fetching each external contract address in _reconfigure to prevent misconfiguration breakage."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153
              ],
              "why": "ERC721.transferFrom external call"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                155
              ],
              "why": "Storage write to plotOccupied after external call"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "stakeMunchable has no re-entrancy guard"
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153,
                155
              ],
              "why": "External call precedes state writes"
            }
          ]
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "yes",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The stakeMunchable function uses `>` instead of `>=` to limit staked items, allowing an 11th stake and violating intended business rules without security impact. This is purely a business logic error with minimal risk and no exploit path. The finding remains valid at low severity.",
      "adjustment": {
        "index": 49,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                248,
                310
              ],
              "why": "Loop in _farmPlots is about gas, not arithmetic"
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "Calls accountManager.updatePlayer inside loop"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229
              ],
              "why": "No nonReentrant or other reentrancy guard on farmPlots"
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229
              ],
              "why": "farmPlots is open to user calls by design"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                141,
                143,
                141
              ],
              "why": "Stake limit of 10 tokens caps loop length"
            }
          ]
        },
        "F_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                140,
                142
              ],
              "why": "munchablesStaked capped at 10, so loop bound small"
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                292,
                301
              ],
              "why": "CEI pattern maintained around external calls"
            }
          ]
        },
        "removal_reason": "design_intent",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The gas-intensive loop is bounded by a hard cap of 10 staked tokens via stakeMunchable, so the potential DoS is prevented by design. No arithmetic overflow is involved and CEI is respected around external calls. As a result, this is an intended pattern with no practical exploit path.",
      "adjustment": {
        "index": 50,
        "new_severity": "low",
        "should_be_removed": true,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": null
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "yes",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "yes",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "design_intent",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The finding highlights a deliberate centralization risk in configuration management rather than a security flaw. Configuration values are intended to be controlled by a single admin contract. This is a design trade-off and should be removed as it’s by design.",
      "adjustment": {
        "index": 51,
        "new_severity": "medium",
        "should_be_removed": true,
        "comments": "Configuration centralization is a deliberate design choice; consider decentralized governance for enhancements."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                287
              ],
              "why": "cast negative int256 to uint256 causes wrap"
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The reward formula applies a signed bonus that can be less than ‑100, leading to a negative intermediate int256 which casts to a huge uint256 wrap under Solidity 0.8. Casting negatives to unsigned without checks permits unbounded reward inflation. A clamp or validation on finalBonus before casting is required.",
      "adjustment": {
        "index": 52,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Clamp finalBonus to a valid range or revert on negative multipliers to avoid negative-to-unsigned wrap."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                345,
                346
              ],
              "why": "This is division by zero, not overflow/underflow"
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                345
              ],
              "why": "_getNumPlots is internal"
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The finding identifies a division-by-zero vulnerability in _getNumPlots if PRICE_PER_PLOT is zero, which would revert and block staking/farming. Solidity 0.8.25 auto-reverts on overflow but does not prevent zero divisors at compile time. Adding a require to enforce PRICE_PER_PLOT nonzero will mitigate the issue.",
      "adjustment": {
        "index": 53,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Add a require statement to ensure PRICE_PER_PLOT != 0 before division."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25 ensures overflow reverts"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                201,
                203
              ],
              "why": "public external function accessible to any registered user"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The function `transferToUnoccupiedPlot` omits updating the stored `plotId` in `toilerState`, leading to stale contract state and misleading emitted events. This is neither an overflow nor reentrancy issue but a missing state assignment. Given its limited protocol impact, severity remains low.",
      "adjustment": {
        "index": 54,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "Add `toilerState[tokenId].plotId = plotId;` after updating `plotOccupied` to keep stored state in sync."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153
              ],
              "why": "calls external ERC721.transferFrom"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                155
              ],
              "why": "storage writes occur after external call"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "yes",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The issue is a logic off-by-one error in the stake limit check, not an arithmetic overflow or intended behavior. It also introduces a reentrancy risk by performing an external transfer before writing storage. Given low impact but high likelihood of exploitation, the matrix severity is medium.",
      "adjustment": {
        "index": 55,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Change the limit check to `>= 10` (or `length >= 10`) to enforce a maximum of 10 staked munchables."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                259,
                260,
                282
              ],
              "why": "subtraction timestamp - lastToilDate can underflow if lastUpdated < lastToilDate"
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25 enables automatic overflow checks"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "yes",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The subtraction of `timestamp - lastToilDate` can underflow when `lastUpdated < lastToilDate`, causing an automatic revert and DoS via the `forceFarmPlots` modifier. This traps NFTs since users cannot unstake once the underflow condition is met. A guard or clamp around the timestamp subtraction is required.",
      "adjustment": {
        "index": 56,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Validate that `plotMetadata[landlord].lastUpdated >= _toiler.lastToilDate` before subtraction or clamp the timestamp to avoid underflow; alternatively update `lastToilDate` when adjusting `lastUpdated`."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153
              ],
              "why": "ERC721.transferFrom is an external call"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                155,
                160,
                161,
                163
              ],
              "why": "state writes after external transferFrom"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "yes",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The stakeMunchable function allows staking to an unregistered landlord and then calls ERC721.transferFrom before updating state, breaking CEI and trapping NFTs as later calls to farm or unstake always revert. There is no reentrancy guard or registration check on the landlord. Given the high impact of permanently locked assets and medium likelihood, the finding severity is set to medium.",
      "adjustment": {
        "index": 57,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Add a check that the landlord is registered via accountManager before proceeding with the NFT transfer."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "external call to accountManager.updatePlayer"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The issue arises from converting a potentially negative int256 to uint256 under Solidity 0.8, causing a revert when finalBonus is negative and leading to DoS and trapped NFTs. The function makes external calls but follows CEI, and no reentrancy guard affects this logic. Based on high impact but medium likelihood, the matrix severity is medium.",
      "adjustment": {
        "index": 58,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                149,
                153
              ],
              "why": "No reentrancy guard around external transferFrom and state writes"
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                133,
                137
              ],
              "why": "Any caller can offer any landlord address"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                136,
                142
              ],
              "why": "Allows irreversible NFT lock-up"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "There is no overflow concern in Solidity 0.8.25, but the missing validation of landlord registration in stakeMunchable causes NFTs staked to an unregistered address to become irretrievably locked when subsequent farm or unstake calls revert. The impact to user assets is high and the likelihood moderate, yielding a medium severity per the matrix.",
      "adjustment": {
        "index": 59,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153
              ],
              "why": "External ERC721.transferFrom call"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                155
              ],
              "why": "State updates after external call"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153,
                155
              ],
              "why": "CEI pattern broken"
            }
          ]
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The stakeMunchable function calls an external ERC721.transferFrom before performing any state updates and lacks a reentrancy guard, breaking the Checks-Effects-Interactions pattern. This allows a malicious token contract to reenter and manipulate staking limits, occupancy mappings, or rewards. Per the impact/likelihood matrix, this yields a medium severity.",
      "adjustment": {
        "index": 60,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Introduce a nonReentrant guard and reorder logic to perform all state updates before external calls (CEI pattern)."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229
              ],
              "why": "farmPlots is public"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                259,
                263
              ],
              "why": "enables perpetual farming on invalid plots"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The off-by-one check in `_farmPlots` uses `<` instead of `<=`, so when a landlord’s plot count falls exactly to a staker’s `plotId`, the munchable isn’t marked dirty and continues farming indefinitely. This is not an overflow or reentrancy issue and can be exploited by any user, leading to unlimited rewards. With high impact and medium likelihood, the matrix severity is medium.",
      "adjustment": {
        "index": 61,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                285,
                286
              ],
              "why": "Underflow arises when negative finalBonus yields negative numerator"
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "Pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                285,
                286
              ],
              "why": "No unchecked block around this arithmetic"
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                271,
                279
              ],
              "why": "No business requirement for custom overflow behavior"
            }
          ]
        },
        "O_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                285,
                286
              ],
              "why": "Issue is direct and not part of a larger chain"
            }
          ]
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301
              ],
              "why": "Calls external accountManager.updatePlayer"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                292,
                301
              ],
              "why": "All storage writes occur before external calls"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                301
              ],
              "why": "No reentrancy guard present"
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                301
              ],
              "why": "CEI pattern respected (writes before calls)"
            }
          ]
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301
              ],
              "why": "Calls are external to accountManager"
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                230
              ],
              "why": "farmPlots is public and intended"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                230
              ],
              "why": "No timelock or governance override implied"
            }
          ]
        },
        "A_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                285,
                286
              ],
              "why": "Allows minting unbounded schnibbles"
            }
          ]
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                285,
                286
              ],
              "why": "Behavior not documented"
            }
          ]
        },
        "F_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281,
                285,
                286
              ],
              "why": "Practical exploit path exists"
            }
          ]
        },
        "F_4": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                285,
                286
              ],
              "why": "Underflow on cast, not auto-checked arithmetic"
            }
          ]
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                292,
                301
              ],
              "why": "CEI protects external calls"
            }
          ]
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The calculation can produce a negative numerator which then underflows when cast to uint, and Solidity ≥0.8 does not revert on negative-to-uint conversion. There is no unchecked block here, and the issue is exploitable to mint arbitrary schnibbles. Because this isn’t covered by the auto-revert rules, the finding stands with medium severity.",
      "adjustment": {
        "index": 62,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity >=0.8.0"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                285,
                286
              ],
              "why": "Subtraction can underflow causing revert"
            }
          ]
        },
        "F_5": {
          "answer": "yes",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The misloaded MIN_TAX_RATE and MAX_TAX_RATE from incorrect config keys allow landlords to set a tax rate above 1e18, causing tenant-share subtraction to underflow and revert in _farmPlots. This results in denial-of-service for tenants and enables landlords to block or siphon rewards. Validating bounds against expected [0,1e18] and fixing config keys mitigates the issue.",
      "adjustment": {
        "index": 63,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "Validate MIN_TAX_RATE and MAX_TAX_RATE against expected rate bounds (0 to 1e18) and correct the config key sources."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286,
                287
              ],
              "why": "underflow on subtraction due to excessive tax rate"
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                284,
                285,
                286,
                287
              ],
              "why": "solidity ≥0.8.0 auto-reverts but no unchecked block"
            }
          ]
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The default tax rate loaded in `_reconfigure` is never bounded by `MIN_TAX_RATE`/`MAX_TAX_RATE`, so a misconfigured `DEFAULT_TAX_RATE` >1e18 causes `(schnibblesTotal - schnibblesLandlord)` to underflow and revert. This creates a denial-of-service in `_farmPlots` for renters. Severity is downgraded to medium per the impact–likelihood matrix.",
      "adjustment": {
        "index": 64,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Validate DEFAULT_TAX_RATE against MIN_TAX_RATE and MAX_TAX_RATE in _reconfigure to prevent underflow"
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153
              ],
              "why": "external ERC721.transferFrom call"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                155,
                160,
                161,
                163
              ],
              "why": "state writes after external call"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "no nonReentrant modifier present"
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153,
                155
              ],
              "why": "CEI broken: storage writes follow external call"
            }
          ]
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The stakeMunchable function incorrectly uses `length > 10` instead of `>= 10`, allowing the 11th munchable to be staked. This logic bug does not involve overflow or intended design and carries medium impact and likelihood. The finding should remain to prompt correction of the off-by-one check.",
      "adjustment": {
        "index": 65,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": null
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153
              ],
              "why": "transferFrom external ERC721 call"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                155,
                160
              ],
              "why": "Storage writes to plotOccupied and munchablesStaked after external call"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "yes",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "stakeMunchable lacks validation that plotMetadata[landlord] was initialized, causing currentTaxRate to default to zero and letting renters collect 100% of schnibbles. It also calls transferFrom before updating storage without a reentrancy guard, breaking the CEI pattern and exposing reentrancy. This has medium impact and high likelihood, mapping to high severity.",
      "adjustment": {
        "index": 66,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "Require plotMetadata[landlord].lastUpdated != 0 or initialize metadata before staking, and reorder transferFrom after state updates or add a reentrancy guard."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": null
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                150,
                151,
                153
              ],
              "why": "calls external ERC721 contract"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153,
                155
              ],
              "why": "storage writes after external call"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                132
              ],
              "why": "no nonReentrant guard present"
            }
          ]
        },
        "R_4": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                150,
                155
              ],
              "why": "CEI pattern broken: external call before state writes"
            }
          ]
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "yes",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "This is a logic off-by-one error, not an arithmetic overflow, that permits staking an 11th token. The function makes external ERC721 calls before updating state without a reentrancy guard (breaking CEI). The medium impact and likelihood yield a medium severity.",
      "adjustment": {
        "index": 67,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Change `if (length > 10)` to `if (length >= 10)` to enforce the intended cap."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                214
              ],
              "why": "missing update of toilerState.plotId"
            }
          ]
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The finding identifies a missing update to the stored plotId in transferToUnoccupiedPlot, leaving new plots marked occupied and causing a denial-of-service on land slots. This is neither an arithmetic nor re-entrancy issue but a logical state bug. Impact and likelihood are both medium, yielding a medium severity enforcement.",
      "adjustment": {
        "index": 68,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "no external calls in transferToUnoccupiedPlot"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "no external calls"
            }
          ]
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "ownership of tokenId is verified"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "high",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "transferToUnoccupiedPlot fails to update toilerState[tokenId].plotId, leaving the original slot marked occupied and enabling ghost occupancies leading to denial-of-service. This is a logic error unrelated to overflow or re-entrancy. Given the realistic DoS exploit and high impact on plot availability, medium severity is appropriate.",
      "adjustment": {
        "index": 69,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                106
              ],
              "why": "calls accountManager.getPlayer"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                109,
                110,
                111,
                112
              ],
              "why": "writes plotMetadata after external call"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "yes",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                106
              ],
              "why": "any registered user can call"
            }
          ]
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "yes",
          "refs": null
        },
        "F_3": {
          "answer": "yes",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "design_intent",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The triggerPlotMetadata function only performs a one-time internal mapping initialization after a registration check and emits an event, with no value transfers or untrusted calls that could lead to reentrancy or overflow issues. This behavior is clearly intended by design and poses minimal risk. Given low impact and likelihood, the finding is removed as design intent.",
      "adjustment": {
        "index": 70,
        "new_severity": "low",
        "should_be_removed": true,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25 auto-reverts on overflow"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "high",
        "matrix_severity": "high"
      },
      "reasoning_summary": "The issue is a best-practice concern where landlords can instantaneously and repeatedly change tax rates to front-run renters, not involving arithmetic or reentrancy flaws. The economic impact on renters is medium with a high likelihood of exploitation, yielding high matrix severity. A cooldown or timelock would mitigate unpredictable tax manipulations.",
      "adjustment": {
        "index": 71,
        "new_severity": "high",
        "should_be_removed": false,
        "comments": "Recommend adding a timelock or cooldown period for updateTaxRate to prevent front-running economic manipulation."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153
              ],
              "why": "external ERC721 transferFrom call"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                155
              ],
              "why": "writes to plotOccupied after external call"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "yes",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "Lack of explicit existence validation results in a generic ERC721 revert instead of a clear custom error, causing user confusion. This is a UX/best-practice issue without security impact. Severity is therefore lowered to low.",
      "adjustment": {
        "index": 72,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": null
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                149,
                153
              ],
              "why": "transferFrom to external ERC721 contract"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                155,
                160
              ],
              "why": "state writes after external call"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "yes",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "Repeated stake and unstake operations allow the munchablesStaked array to grow without bound, increasing gas costs and risking DoS in the farmPlots loop. This is a logical flaw rather than an overflow or reentrancy issue. Given the medium impact on usability and medium likelihood of exploitation, severity remains medium.",
      "adjustment": {
        "index": 73,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Consider enforcing a cap on the total lifetime entries or periodically compacting the munchablesStaked array to prevent unbounded growth and gas exhaustion."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                153
              ],
              "why": "calls IERC721.transferFrom (external)"
            }
          ]
        },
        "R_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                155,
                160,
                161,
                163
              ],
              "why": "mapping writes after external call"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "yes",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The issue is a missing check that the `landlord` is non-zero, leading to permanent NFT lock when staking to address(0). It is not an arithmetic overflow but does involve external calls before state updates without reentrancy guards. Per the medium-impact, low-likelihood matrix, this rates as low severity.",
      "adjustment": {
        "index": 74,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "Add a require(landlord != address(0), \"Invalid landlord\"); at the start of stakeMunchable to prevent zero-address locking."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": null
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": null
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229
              ],
              "why": null
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                292,
                301
              ],
              "why": null
            }
          ]
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "low",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The finding is due to unchecked array index calculations leading to out-of-bounds accesses rather than arithmetic overflow, and Solidity ≥0.8.0 does not auto-validate array bounds. CEI and reentrancy protections are correctly applied around external calls. Manual bounds checks for REALM_BONUSES and RARITY_BONUSES are needed to prevent user-facing reverts.",
      "adjustment": {
        "index": 75,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Validate realm and rarity indices against the lengths of REALM_BONUSES and RARITY_BONUSES before accessing to avoid out-of-bounds errors."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": null
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The dirty flag logic permanently excludes eligible toilers after a temporary plot shortage, leading to lost rewards when plots are restored. This is a functional logic bug unrelated to arithmetic or reentrancy protections. The severity is medium per a medium impact of lost rewards and medium likelihood of occurrence.",
      "adjustment": {
        "index": 76,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "medium",
        "matrix_severity": "low"
      },
      "reasoning_summary": "The stale‐tax issue arises because `toilerState.latestTaxRate` is updated only when farming occurs, causing older munchables to continue using an outdated rate until their next farm. It does not involve arithmetic overflow, reentrancy, or unauthorized access, and is a design inconsistency rather than a critical vulnerability. Severity is low given its limited impact and medium likelihood of occurrence.",
      "adjustment": {
        "index": 77,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "Consider reading `currentTaxRate` from `plotMetadata` on each farm run or updating all `toilerState.latestTaxRate` entries when the landlord changes their rate to avoid stale data."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "internal state updates only"
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                200,
                227
              ],
              "why": "no external calls, CEI followed"
            }
          ]
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "This is a logic-validation issue causing misleading events rather than a security vulnerability—no overflow or re-entrancy is involved and CEI is followed on Solidity 0.8. The impact and likelihood are both low, so the matrix severity is low. The finding should be retained to improve UX and event accuracy.",
      "adjustment": {
        "index": 78,
        "new_severity": "low",
        "should_be_removed": false,
        "comments": "Add a require(plotId != oldPlotId, \"New plot must differ from current plot\"); to prevent no-op transfers and misleading events."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25 enables built-in overflow checks"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                268,
                301
              ],
              "why": "Calls external contract functions nftAttributesManager.getImmutableAttributes and accountManager.updatePlayer"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                229
              ],
              "why": "farmPlots has no nonReentrant guard"
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                292,
                293
              ],
              "why": "State effects occur before external calls (Checks-Effects-Interactions)"
            }
          ]
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "This issue is not about overflow or reentrancy but a missing slippage protection in reward calculation, allowing landlords to front-run tax updates. There’s no minimum reward parameter in farmPlots, so users can receive significantly less than expected. The severity is medium given the moderate impact and likelihood of last-minute tax changes.",
      "adjustment": {
        "index": 79,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Consider adding a minimum reward (slippage) parameter to farmPlots to guard against last-minute tax rate changes."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": null
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "This is a timeliness/MEV risk where landlords can update tax rates at an unfavorable moment for toilers without any deadline or timelock. It’s a design-level fairness issue rather than an arithmetic or reentrancy bug. The lack of expiration elevates the medium-impact risk.",
      "adjustment": {
        "index": 80,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Consider adding a deadline parameter or timelock mechanism to updateTaxRate to limit mempool manipulation and protect toilers."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": null
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The farmPlots function calculates the landlord’s share using the outdated `_toiler.latestTaxRate` before updating it to the current rate, causing misallocation of schnibbles when rates change. This is a logical consistency bug rather than an overflow or reentrancy issue. The impact is moderate and the defect is valid, so the finding should remain.",
      "adjustment": {
        "index": 81,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                283,
                289
              ],
              "why": "Solidity 0.8.25 auto-reverts on overflow"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "yes",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "yes",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The finding highlights a precision mismatch between a percentage-based division by 100 and an 18-decimal tax rate division by 1e18 in the schnibbles calculation. There are no overflow or reentrancy issues and no valid reason to remove the finding. The impact and likelihood both map to a medium severity.",
      "adjustment": {
        "index": 82,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": null
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": null
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "yes",
          "refs": null
        },
        "F_3": {
          "answer": "yes",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "design_intent",
        "impact": "low",
        "likelihood": "low",
        "matrix_severity": "low"
      },
      "reasoning_summary": "This finding is informational and not a vulnerability, as the absence of an oracle is an intentional design choice for this contract. There is no impact on security or functionality due to this absence. Thus, it can be removed as it aligns with the intended contract design.",
      "adjustment": {
        "index": 83,
        "new_severity": "low",
        "should_be_removed": true,
        "comments": "Removal: no oracle needed by design"
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25 ensures arithmetic auto-reverts (no overflow concern)"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": null
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "no",
          "refs": null
        },
        "R_2": {
          "answer": "no",
          "refs": null
        },
        "R_3": {
          "answer": "no",
          "refs": null
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": null
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "no",
          "refs": null
        },
        "removal_reason": "none",
        "impact": "low",
        "likelihood": "high",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "This is a rounding precision bug, not an arithmetic overflow, in Solidity 0.8.25 with no unchecked blocks. It does not involve reentrancy or privilege issues but causes underpayment of rewards. With low impact but high likelihood of occurrence, the matrix yields medium severity.",
      "adjustment": {
        "index": 84,
        "new_severity": "medium",
        "should_be_removed": false,
        "comments": "Refactor to perform multiplication before division or use fixed-point math to avoid precision loss."
      }
    },
    {
      "strategy": {
        "O_1": {
          "answer": "no",
          "refs": null
        },
        "O_2": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                3
              ],
              "why": "pragma solidity 0.8.25"
            }
          ]
        },
        "O_3": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                281
              ],
              "why": "Calculation not in unchecked block"
            }
          ]
        },
        "O_4": {
          "answer": "no",
          "refs": null
        },
        "O_5": {
          "answer": "no",
          "refs": null
        },
        "R_1": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301,
                310
              ],
              "why": "Calls external accountManager.updatePlayer"
            }
          ]
        },
        "R_2": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                292,
                293
              ],
              "why": "All storage writes occur before external calls"
            }
          ]
        },
        "R_3": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                233,
                312
              ],
              "why": "No nonReentrant guard applied"
            }
          ]
        },
        "R_4": {
          "answer": "no",
          "refs": null
        },
        "R_5": {
          "answer": "no",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                301
              ],
              "why": "External call is to another contract, not internal"
            }
          ]
        },
        "A_1": {
          "answer": "no",
          "refs": null
        },
        "A_2": {
          "answer": "no",
          "refs": null
        },
        "A_3": {
          "answer": "no",
          "refs": null
        },
        "F_1": {
          "answer": "no",
          "refs": null
        },
        "F_2": {
          "answer": "no",
          "refs": null
        },
        "F_3": {
          "answer": "no",
          "refs": null
        },
        "F_4": {
          "answer": "no",
          "refs": null
        },
        "F_5": {
          "answer": "yes",
          "refs": [
            {
              "file": "LandManager.sol",
              "lines": [
                292,
                293
              ],
              "why": "CEI pattern followed"
            }
          ]
        },
        "removal_reason": "none",
        "impact": "medium",
        "likelihood": "medium",
        "matrix_severity": "medium"
      },
      "reasoning_summary": "The calculation of `schnibblesLandlord` uses integer division before proper fixed‐point multiplication, causing rounding losses for small values. Solidity 0.8.25 automatically reverts on overflow but does nothing for precision, and no unchecked block is involved. This fairness issue merits keeping the finding with unchanged medium severity.",
      "adjustment": {
        "index": 85,
        "new_severity": "unchanged",
        "should_be_removed": false,
        "comments": "Consider using a full‐precision `mulDiv` or accumulating fractional schnibbles to avoid precision loss."
      }
    }
  ]
}